NOTES:

jekyll notes

any files with an 'underscore' have a special meaning - i.e.

_config.yml - configuration information
_layouts - all layouts for the website
_ posts - these are the posts themselves that are going to be turned into static blog pages

any files without underscore are just assumed to be 'part of the website' and will simply be copied
into the deploy version and not run through any layout transformations, etc...

Yaml Fronmtmatter

Any post or any other content being run through some kind of 'translation' or converter will have
'yaml frontmatter' which will look like:

---
layout: post
title: How we Open Source'd Eigen
date: 2015-04-28
comments: no
categories: [ios, mobile, eigen, keys, open source, oss]
author: Orta Therox
github-url: https://www.github.com/orta
twitter-url: http://twitter.com/orta
blog-url: http://orta.io
---

Installing Octopress

folders / files:
----------------

_config.yml -  information and configuration about the blog
.themes     -  all octopress themes
source      -  posts, or any custom pages are going to live in source, templates ( overriding theme )
public      -  this is where the source is generated 'to'
plugins     -  all third party plugins, etc...
sass        -  all styling (sass)

Basically, everything in 'source' will be run through translators and converters and turned into the
static blog that exists in /public ( according to templates, the config files, sass, etc... ).

If you want to make changes to anything that will be effected by ````rake deploy```` you will
make changes to things in source *not* public - public will be overridden by every rake deploy.

Making a Post or a Page
-----------------------

_layouts    - these are the template files that your 'content' is run through to generate static HTML pages
_includes   - these are snippets of content or code that can be included on any page you'd like

Code / Plugins
------------
video, images,

display code with:

``` [language for syntax highlighting]
code goes here
```

More
----

To set where in a post to break between content that will display on the main page and content that
will display 'after the jump'

<!-- more -->

Customizing the Layout
----------------------

/_layouts

The different layouts for different kind of pages. In the yml frontmatter for any post or page you
set which layout it's going to use in layout:

variables

to check what variables you have available ( some of these are set in yaml fronmatter or in the
config yaml file ), i.e. 'sharing: false' etc. For instance, if something is set in the config, like
our disqus name, it would be access by 'site.disqus_short_name', if you wanted to check if comments
are set on the yaml front matter it would be at 'page.comments' etc... )

```content```

the content is a special variable that is basically like 'yield' - if you have another template that
you want to insert inside of another, in that page you set where 'content' is going to go.

http://jekyllrb.com/docs/variables/

_includes/custom

In custom, we'll see that there are several files that are similiar looking to ones outside of custom.
In custom, we change small, individual parts of the layout. So, i.e. _includes/custom/footer.html is where the actual
content of the footer goes, in _includes/footer.html we just gather all of the 'custom footer asides' into one bit of output.

* note: inlcuding analytics, code to insert 'at the bottom of the page. : custom/after_footer perhaps

Styling The Layout
------------------

/sass

screen.scss is what gets ultimately compiled into screen.css ( which is used on deploy ).

_base.scss and _partials.scss work somewhat similiarly to how we have the earlier layout _includes files -
these bring together two groups of different sass files to create a larger combined file. Then, we see that
screen.scss includes _base and _partials and anything in custom that we want to include.

_styles.scss

basically a catch-all, imported into the final css file *last* so this will override any other styles
( remember, 'cascading style sheets' - the most specific, or last loaded css file, will override earlier )

IDEA:

Make a brief open source article on how we created our new open source blog style, etc...
