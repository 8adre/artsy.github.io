<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artsy Engineering</title>
    <description></description>
    <link>http://artsy.github.io/</link>
    <atom:link href="http://artsy.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 18 Apr 2018 19:36:12 +0000</pubDate>
    <lastBuildDate>Wed, 18 Apr 2018 19:36:12 +0000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Programmer Misconceptions about Art</title>
        <description>&lt;p&gt;Our mission at Artsy has been to make art as popular as music, and at a high level, the way that our engineering team supports that mission is through building software. We have built systems and databases and user interfaces that represent different facets of the art world, and throughout our work, we have... made some mistakes.&lt;/p&gt;

&lt;p&gt;That&#39;s okay! Programmers make mistakes all the time. There is &lt;a href=&quot;https://github.com/kdeldycke/awesome-falsehood&quot;&gt;a large list of blog posts&lt;/a&gt; describing various programmer misconceptions, from subjects you might expect would be simple to model in computers, like units of measurement and time, to subjects that are based more in the human condition, like postal addresses and marriage.&lt;/p&gt;

&lt;p&gt;In the interest of openness and sharing what we&#39;ve learned, the Artsy Engineering team has come up with the following list of misconceptions programmers believe about art. Thank you to everyone at Artsy who contributed to this list.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;ul&gt;
&lt;li&gt;All artworks have an artist (some artworks are attributed to &quot;cultural makers&quot;, others have a manufacturer).&lt;/li&gt;
&lt;li&gt;All artworks have exactly one artist (some artworks are collaborations).&lt;/li&gt;
&lt;li&gt;All artworks are unique (there are editions, reproductions, and series of works, and modeling the relationships between them all is nontrivial).&lt;/li&gt;
&lt;li&gt;All lots in an art auction are artworks (some lots are &quot;experiential&quot;, like a visit to an artist&#39;s studio).&lt;/li&gt;
&lt;li&gt;Only rich people buy art.&lt;/li&gt;
&lt;li&gt;Only rich people can afford to buy art, and everyone else just buys posters of &quot;real&quot; art.&lt;/li&gt;
&lt;li&gt;All artworks have a title (some are untitled).&lt;/li&gt;
&lt;li&gt;&quot;Untitled&quot; signifies an artwork has no title (some artworks are titled &quot;Untitled&quot;).&lt;/li&gt;
&lt;li&gt;All artwork titles can fit inside 512 characters (not true, &lt;a href=&quot;https://www.artsy.net/artwork/matt-goerzen-sockpuppet-theatre-representing-the-techniques-tools-and-environments-whereby-hackers-and-other-info-warriors-might-seek-to-parse-through-elsewhere-distorted-informational-domains-to-make-sense-of-them-and-also-possibly-to-acquire-by-illicit-or-clever-means-good-information-that-can-then-be-communicated-in-a-way-that-sheds-light-on-deceptions-but-can-also-be-difficult-to-evaluate-on-their-own-terms-due-to-the-elite-requisites-of-interpreting-such-knowledge-or-more-generalized-uncertaintities-regarding&quot;&gt;here is a counterexample&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;An artwork is associated with a natural, canonical category.&lt;/li&gt;
&lt;li&gt;An artwork belongs to only one gallery/collector/auction house at a time (provenance of artworks is complicated, and there is no canonical source of truth).&lt;/li&gt;
&lt;li&gt;Art should always be rendered at its maximum size (there are complex business constraints and art world norms that need to be considered).&lt;/li&gt;
&lt;li&gt;People buy art mostly for its visual qualities (most people buy art because of a story, because they understand what the artwork is trying to say, or because they simply can&#39;t stop thinking about it).&lt;/li&gt;
&lt;li&gt;People don&#39;t buy art from JPEGs (in fact, people buy art that hasn&#39;t even been created yet).&lt;/li&gt;
&lt;li&gt;&quot;My kid can paint that&quot; (&lt;a href=&quot;https://twitter.com/ashfurrow/status/707273704640798720&quot;&gt;but did they?&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;The art market needs technology because it&#39;s inefficient (the art market needs technology because technology can help expand the entire art world).&lt;/li&gt;
&lt;li&gt;Intermediaries in the art market are bad (eg. galleries: they enable artists to make works for years before they sell anything, they are the enabler, not the obstacle).&lt;/li&gt;
&lt;li&gt;There is one &quot;art world&quot; (there are thousands of galleries around the world, specializing in everything from contemporary jewelry and emerging conceptual art to Chinese scroll painting and regional landscapes).&lt;/li&gt;
&lt;li&gt;Your opinion on art doesn&#39;t matter, the industry will independently determine value of an artwork (everyone has opinions, your appreciation of art is &lt;em&gt;all&lt;/em&gt; about &lt;em&gt;you&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;The art world is hermetic and isn&#39;t relevant to my life (in fact the arts contribute billions of dollars to the economy, employ thousands of people, have a ripple effect on urban life, and are often a major source of inspiration for the TV, movies, and books we all consume on a daily basis).&lt;/li&gt;
&lt;li&gt;Gallerists are fancy people in a luxury business, living fancy lives (in fact, the average salary for a gallery owner is way lower than you think).&lt;/li&gt;
&lt;li&gt;Art and engineering are orthogonal (nope, just look at us!).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Do you have expertise in an area programmers often get wrong? Write a blog post and add it to &lt;a href=&quot;https://github.com/kdeldycke/awesome-falsehood&quot;&gt;the list of misconceptions&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/04/18/programmer-misconceptions-about-art/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/04/18/programmer-misconceptions-about-art/</guid>
        
        
        <category>best practices</category>
        
        <category>data</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Augmenting Artworks: AR at Artsy</title>
        <description>&lt;p&gt;In 2017, Apple released ARKit to universal acclaim. It&#39;s a solid foundation for application developers to build
Augmented Reality (AR) experiences without learning a whole new skillset in computer vision. Like a lot of Apple&#39;s
technology, it&#39;s a clever blend of existing projects: &lt;a href=&quot;https://developer.apple.com/documentation/scenekit&quot;&gt;SceneKit&lt;/a&gt;, &lt;a href=&quot;https://developer.apple.com/documentation/coremotion&quot;&gt;CoreMotion&lt;/a&gt;, &lt;a href=&quot;https://developer.apple.com/documentation/coreml&quot;&gt;CoreML&lt;/a&gt; and some very
clever camera work. From the developer&#39;s perspective, ARKit has an API which fits perfectly with the rest of Apple&#39;s
APIs. You spend most of your time working with a few delegate functions and you&#39;re good to go.&lt;/p&gt;

&lt;p&gt;For the last 2 months, I&#39;ve been working with ARKit on a replacement for our &lt;a href=&quot;https://ortastuff.s3.amazonaws.com/vids/eigen-vir.mp4&quot;&gt;View in Room&lt;/a&gt; feature on modern
iOS devices to support a &quot;View in &lt;em&gt;My&lt;/em&gt; Room&quot;. I&#39;m going to try cover how we approached the project, the abstractions we
created and give you a run through of how it works.&lt;/p&gt;

&lt;p&gt;We believe that our implementation is a solid improvement over similar features in other apps that allow users to place
artworks on walls, and we&#39;re making &lt;a href=&quot;https://github.com/artsy/eigen/tree/f897b3438bd07470bd88a790fc6d6a524f5756cb/Artsy/View_Controllers/ARVIR&quot;&gt;the source code available&lt;/a&gt; free and open-source under the MIT
license.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;div class=&quot;mobile-only&quot;&gt;
&lt;p&gt;
  &lt;strong&gt;Before you get started&lt;/strong&gt;, it looks like you&#39;re using a really small screen, 
  this post is built with larger screens in mind. You will be missing interactable elements which you &lt;strong&gt;really should see&lt;/strong&gt;.
&lt;/p&gt;
&lt;/div&gt;


&lt;a name=&quot;How.does.ARKit.work.&quot;&gt;&lt;/a&gt;
&lt;h2&gt;How does ARKit work?&lt;/h2&gt;

&lt;p&gt;You start up ARKit by creating an &lt;a href=&quot;https://developer.apple.com/documentation/arkit/arsession&quot;&gt;AR Session&lt;/a&gt; and passing it to an view on your screen. This will trigger
ARKit to open your camera looking through the phone&#39;s camera for reference points to determine where the phone is in the
world. Your app will use the reference points to attach SceneKit objects to places through the AR viewport. Let&#39;s look
at this as a diagram:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;diagram&quot;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;What-is-AR&quot;&gt;
    &lt;li&gt;You have a phone in a room&lt;/li&gt;
    &lt;li&gt;ARSession starts&lt;/li&gt;
    &lt;li&gt;It detects some feature points&lt;/li&gt;
    &lt;li&gt;You can then attach objects to those points&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;What is AR&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;radialGradient cx=&quot;73.2212612%&quot; cy=&quot;27.1693638%&quot; fx=&quot;73.2212612%&quot; fy=&quot;27.1693638%&quot; r=&quot;207.875515%&quot; id=&quot;radialGradient-1&quot;&gt;
            &lt;stop stop-color=&quot;#FFFFFF&quot; offset=&quot;0%&quot;&gt;&lt;/stop&gt;
            &lt;stop stop-color=&quot;#000000&quot; offset=&quot;100%&quot;&gt;&lt;/stop&gt;
        &lt;/radialGradient&gt;
        &lt;path d=&quot;M5.24032834,2.21494006 L10.0175781,0.45921461 L10.0175781,0.45921461 C13.878629,-0.959791237 18.1589608,1.01987744 19.5779666,4.88092836 C19.8803845,5.7037938 20.0351562,6.57358786 20.0351562,7.45026573 L20.0351562,38.1425845 L20.0351562,38.1425845 C20.0351562,41.4875521 17.9540723,44.4794008 14.8180048,45.6429681 L10.0175781,47.4240584 L10.0175781,47.4240584 C6.16921751,48.8519059 1.89200567,46.8896924 0.464158083,43.0413318 C0.157173464,42.2139413 8.98985986e-15,41.3384898 8.8817842e-15,40.4559851 C5.28025569e-15,32.0110213 2.64012785e-15,23.5660575 0,15.1210938 C1.84503416e-15,13.3220232 3.69006831e-15,11.5229527 5.53510247e-15,9.72388222 L7.10542736e-15,9.72388222 C9.6736429e-15,6.36986699 2.09219005,3.37193766 5.24032834,2.21494006 Z&quot; id=&quot;path-2&quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M5.24032834,3.21494006 L10.0175781,1.45921461 L10.0175781,1.45921461 C13.878629,0.0402087634 18.1589608,2.01987744 19.5779666,5.88092836 C19.8803845,6.7037938 20.0351562,7.57358786 20.0351562,8.45026573 L20.0351562,39.1425845 L20.0351562,39.1425845 C20.0351562,42.4875521 17.9540723,45.4794008 14.8180048,46.6429681 L10.0175781,48.4240584 L10.0175781,48.4240584 C6.16921751,49.8519059 1.89200567,47.8896924 0.464158083,44.0413318 C0.157173464,43.2139413 8.98985986e-15,42.3384898 8.8817842e-15,41.4559851 C5.28025569e-15,33.0110213 2.64012785e-15,24.5660575 0,16.1210938 C1.84503416e-15,14.3220232 3.69006831e-15,12.5229527 5.53510247e-15,10.7238822 L7.10542736e-15,10.7238822 C9.6736429e-15,7.36986699 2.09219005,4.37193766 5.24032834,3.21494006 Z&quot; id=&quot;path-3&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;What-is-AR&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;0-4_balls&quot; transform=&quot;translate(101.000000, 253.000000)&quot; fill=&quot;url(#radialGradient-1)&quot;&gt;
                &lt;circle id=&quot;Oval&quot; cx=&quot;28&quot; cy=&quot;61&quot; r=&quot;28&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-Copy&quot; cx=&quot;75.5&quot; cy=&quot;18.5&quot; r=&quot;18.5&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_camera&quot; transform=&quot;translate(60.000000, 41.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;path d=&quot;M280.613281,208.308594 L228.488281,36.859375 L158.785156,0.5 L0.89453125,49.28125 L0.89453125,266.316406 L39.9960938,282.289063 C51.9153646,268.739583 60.2330729,263.415365 64.9492188,266.316406 C72.0234375,270.667969 79.0976562,285.667969 72.0234375,292.890625 C67.3072917,297.705729 75.7643229,303.733073 97.3945312,310.972656 L273.246094,253.71875 L280.613281,208.308594 Z&quot; id=&quot;Path-5&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-4_features&quot; transform=&quot;translate(108.000000, 211.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;45&quot; cy=&quot;99&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;65&quot; cy=&quot;61&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;83&quot; cy=&quot;69&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;14&quot; cy=&quot;85&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;25&quot; cy=&quot;81&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;131.5&quot; cy=&quot;94.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;135.5&quot; cy=&quot;79&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;29&quot; cy=&quot;97&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;97&quot; cy=&quot;60&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;105.5&quot; cy=&quot;78.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;65&quot; cy=&quot;117&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;113&quot; cy=&quot;3&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;101&quot; cy=&quot;23&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy&quot; cx=&quot;84&quot; cy=&quot;12&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;76&quot; cy=&quot;48&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;64&quot; cy=&quot;29&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;40&quot; cy=&quot;39&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-5&quot; cx=&quot;48&quot; cy=&quot;20&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;83&quot; cy=&quot;29&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;25&quot; cy=&quot;60&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;3&quot; cy=&quot;58&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;121&quot; cy=&quot;39&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;97&quot; cy=&quot;42&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;37&quot; cy=&quot;117&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_phone&quot; transform=&quot;translate(325.000000, 247.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#3A3A3A&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-2&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M5.41280781,2.68424895 C2.46142817,3.7689342 0.5,6.57949295 0.5,9.72388222 L0.5,40.4559851 C0.5,41.2791197 0.646599691,42.0956756 0.932932058,42.8674038 C2.26472184,46.4568677 6.2541862,48.2870742 9.84365009,46.9552844 L14.6440767,45.1741941 C17.58414,44.0833498 19.5351562,41.2784917 19.5351562,38.1425845 L19.5351562,7.45026573 C19.5351562,6.6324392 19.3907743,5.82103436 19.1086577,5.05340784 C17.7849097,1.45154906 13.7919164,-0.395224566 10.1900576,0.928523495 L5.41280781,2.68424895 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-3&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M5.41280781,3.68424895 C2.46142817,4.7689342 0.5,7.57949295 0.5,10.7238822 L0.5,41.4559851 C0.5,42.2791197 0.646599691,43.0956756 0.932932058,43.8674038 C2.26472184,47.4568677 6.2541862,49.2870742 9.84365009,47.9552844 L14.6440767,46.1741941 C17.58414,45.0833498 19.5351562,42.2784917 19.5351562,39.1425845 L19.5351562,8.45026573 C19.5351562,7.6324392 19.3907743,6.82103436 19.1086577,6.05340784 C17.7849097,2.45154906 13.7919164,0.604775434 10.1900576,1.92852349 L5.41280781,3.68424895 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_anchors&quot; transform=&quot;translate(146.000000, 86.000000)&quot;&gt;
                &lt;path d=&quot;M26.1171875,153.894531 L26.1171875,75&quot; id=&quot;Path-4&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path-6&quot; stroke=&quot;#000000&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; fill=&quot;#000000&quot; cx=&quot;26&quot; cy=&quot;153&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;With ARKit at release in iOS 11.0, if enough feature points are detected in a series horizontally, then ARKit will also
send you some information about the what it considers to be a horizontal plane.&lt;/p&gt;

&lt;p&gt;Planes are what most AR apps use on iOS, the apps react to discovering a flat horizontal surface and then allows putting
3d objects on to it. You would then interact with these object by doing a hit test for the closest plane or feature
point to handle user interactions.&lt;/p&gt;

&lt;a name=&quot;Quick.glossary&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Quick glossary&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/arframe/2887449-rawfeaturepoints&quot;&gt;Feature Point&lt;/a&gt; - A physical point of reference created by ARKit. A feature point is found in a frame of the
camera&#39;s image. The point is converted into a 3D world coordinate space by image analysis that ARKit performs to track
the device&#39;s position, orientation, and movement. Taken together, these points roughly correlate to real-world objects
through the view of the camera.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/aranchor&quot;&gt;Anchor&lt;/a&gt; - An anchor is a developer tool for building on top of feature points. Anchors allow connections
between a real-world object and an augmented-reality object. Effectively, this provides the API to place objects in
&quot;the room.&quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/arplaneanchor&quot;&gt;Plane&lt;/a&gt; - An anchor to a rectangle in 3D space. A set of feature points detected in a continuous direction. You
can request for ARKit to find these for you, and common examples are tables, floors and walls.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/arskview/2875733-hittest&quot;&gt;Hit Test&lt;/a&gt; - Projects a line through the world from a location on the screen and oriented with the phone&#39;s world
position and angle. This gives you a list of objects that intersect the line.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;a name=&quot;AR.at.Artsy&quot;&gt;&lt;/a&gt;
&lt;h2&gt;AR at Artsy&lt;/h2&gt;

&lt;p&gt;We did some interesting work in the AR space already in 2017 with Microsoft, Studio Drift and the Armory Show using &lt;a href=&quot;http://fortune.com/2017/03/02/microsoft-hololens-art-show/&quot;&gt;the
Holo Lens&lt;/a&gt;. When ARKit came out, we explored whether we could reliably place an artwork on a wall, but came
to the conclusion that the technology was a bit too immature for us to build it reliably. The core problem was that
ARKit at release could only be used to find horizontal planes.&lt;/p&gt;

&lt;p&gt;Here&#39;s how our original approach worked:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;desktop-only&quot; style=&#39;display: flex; flex-flow:row; margin: 0px -60px;&#39;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;v1&quot;&gt;
    &lt;li&gt;Open up ARKit and let it discover the world&lt;/li&gt;
    &lt;li&gt;Detect the edge of a floor by asking a user to point at the floor near the wall&lt;/li&gt;
    &lt;li&gt;Find the edge furthest away&lt;/li&gt;
    &lt;li&gt;Attach a work to the floor closest to the wall&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;v1&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;path d=&quot;M15.5931447,21.0693125 L20.3703944,19.313587 L20.3703944,19.313587 C24.2314454,17.8945812 28.5117771,19.8742499 29.9307829,23.7353008 C30.2332008,24.5581662 30.3879726,25.4279603 30.3879726,26.3046382 L30.3879726,56.9969569 L30.3879726,56.9969569 C30.3879726,60.3419246 28.3068886,63.3337733 25.1708211,64.4973405 L20.3703944,66.2784308 L20.3703944,66.2784308 C16.5220338,67.7062784 12.244822,65.7440649 10.8169744,61.8957043 C10.5099898,61.0683138 10.3528163,60.1928622 10.3528163,59.3103575 C10.3528163,50.8653937 10.3528163,42.42043 10.3528163,33.9754662 C10.3528163,32.1763957 10.3528163,30.3773252 10.3528163,28.5782547 L10.3528163,28.5782547 C10.3528163,25.2242394 12.4450064,22.2263101 15.5931447,21.0693125 Z&quot; id=&quot;path-1&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;v1&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_camera&quot; transform=&quot;translate(60.000000, 235.000000)&quot;&gt;
                &lt;polygon id=&quot;Path-5&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot; points=&quot;228.488281 36.859375 158.785156 0.5 0.89453125 49.28125 0.89453125 76.3164063 29.2070312 95.1445313 131.007812 108.998047 220.933594 92.2890625&quot;&gt;&lt;/polygon&gt;
                &lt;polygon id=&quot;Path-2&quot; stroke=&quot;#E2D52A&quot; stroke-width=&quot;2&quot; fill-opacity=&quot;0.27100317&quot; fill=&quot;#E2D52A&quot; transform=&quot;translate(132.255859, 63.898437) scale(1, -1) translate(-132.255859, -63.898437) &quot; points=&quot;38.3632813 58.0195312 158.996094 100.660156 226.148438 74.03125 98.1503906 27.1367187&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_features&quot; transform=&quot;translate(89.000000, 260.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;66&quot; cy=&quot;66&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;86&quot; cy=&quot;28&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;104&quot; cy=&quot;36&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;35&quot; cy=&quot;52&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;46&quot; cy=&quot;48&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;152.5&quot; cy=&quot;61.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;156.5&quot; cy=&quot;46&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;50&quot; cy=&quot;64&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;27&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;126.5&quot; cy=&quot;45.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;107&quot; cy=&quot;69&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;83&quot; cy=&quot;49&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;97&quot; cy=&quot;15&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;71&quot; cy=&quot;24&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;65&quot; cy=&quot;32&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;130&quot; cy=&quot;3&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;46&quot; cy=&quot;27&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;16&quot; cy=&quot;43&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;142&quot; cy=&quot;6&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;9&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;4&quot; cy=&quot;53&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_phone&quot; transform=&quot;translate(257.431048, 288.284945) rotate(-37.000000) translate(-257.431048, -288.284945) translate(246.931048, 264.284945)&quot;&gt;&lt;/g&gt;
            &lt;g id=&quot;0-4_person&quot; transform=&quot;translate(238.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot; transform=&quot;translate(20.370394, 42.799490) rotate(-29.000000) translate(-20.370394, -42.799490) &quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-1&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M15.7656241,21.5386214 C12.8142445,22.6233066 10.8528163,25.4338654 10.8528163,28.5782547 L10.8528163,59.3103575 C10.8528163,60.1334921 10.999416,60.950048 11.2857484,61.7217762 C12.6175382,65.3112401 16.6070025,67.1414466 20.1964664,65.8096568 L24.996893,64.0285666 C27.9369564,62.9377223 29.8879726,60.1328641 29.8879726,56.9969569 L29.8879726,26.3046382 C29.8879726,25.4868116 29.7435906,24.6754068 29.4614741,23.9077803 C28.137726,20.3059215 24.1447327,18.4591479 20.5428739,19.7828959 L15.7656241,21.5386214 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M57.8662109,54.2951339 C57.2197037,47.2391468 56.4052506,43.8266412 55.4228516,44.0576172 C49.9941406,45.3339844 42.5444721,9.38688117 44.8359375,6.22265625 C48.6060532,1.01660156 83.0625,-7.31651228 81.84375,16.3310547 C81.03125,32.0960993 77.9322917,44.7507924 72.546875,54.2951339 C80.7701069,49.2018936 86.1395731,46.6552734 88.6552734,46.6552734 C92.428824,46.6552734 95.2041008,52.8013269 94.8476562,55.4792972 C94.6100265,57.2646107 93.5517583,70.7331002 91.6728516,95.8847656 C83.9235026,105.734375 75.6959635,110.609701 66.9902344,110.510742 C53.9316406,110.362305 41.5716684,104.533615 39.8232422,101.063477 C38.6576247,98.7500512 36.6400466,83.5553248 33.7705078,55.4792972 L36.8642578,46.6552734 L57.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_anchors&quot; transform=&quot;translate(151.000000, 124.000000)&quot;&gt;
                &lt;path d=&quot;M26.1171875,153.894531 L26.1171875,75&quot; id=&quot;Path-4&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M26.1171875,153.894531 L89,153.894531&quot; id=&quot;Path-4&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path-6&quot; stroke=&quot;#000000&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; fill=&quot;#000000&quot; cx=&quot;26&quot; cy=&quot;153&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-4_line&quot; transform=&quot;translate(98.000000, 263.000000)&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;
                &lt;path d=&quot;M0,39.7773437 L123,0&quot; id=&quot;Path-4&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;This could work, but it was hard to explain for a first time user. A user spent most of their time with their phone
pointed at the floor, then we had no way to know if feature points had been detected all the way to the floor edges.&lt;/p&gt;

&lt;p&gt;From there, we experimented with using the location of the iPhone as a point of reference:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;desktop-only&quot; style=&#39;display: flex; flex-flow:row; margin: 0px -60px;&#39;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;v2&quot;&gt;
  &lt;li&gt;Open up ARKit and let it discover the world&lt;/li&gt;
  &lt;li&gt;Ask a user to put their phone against the wall&lt;/li&gt;
  &lt;li&gt;When the camera is fully osbscured, use the last known point as an anchor&lt;/li&gt;
  &lt;li&gt;When the user pulls back and reconnects, place the work&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;v2&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;path d=&quot;M9.24616479,13.5906941 L14.0234146,11.8349687 L14.0234146,11.8349687 C17.8844655,10.4159628 22.1647972,12.3956315 23.5838031,16.2566824 C23.886221,17.0795478 24.0409927,17.9493419 24.0409927,18.8260198 L24.0409927,49.5183386 L24.0409927,49.5183386 C24.0409927,52.8633062 21.9599088,55.8551549 18.8238412,57.0187222 L14.0234146,58.7998124 L14.0234146,58.7998124 C10.175054,60.22766 5.89784212,58.2654465 4.46999453,54.4170859 C4.16300992,53.5896954 4.00583645,52.7142438 4.00583645,51.8317391 C4.00583645,43.3867753 4.00583645,34.9418116 4.00583645,26.4968478 C4.00583645,24.6977773 4.00583645,22.8987068 4.00583645,21.0996363 L4.00583645,21.0996363 C4.00583645,17.745621 6.0980265,14.7476917 9.24616479,13.5906941 Z&quot; id=&quot;path-1&quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M9.24616479,13.5906941 L14.0234146,11.8349687 L14.0234146,11.8349687 C17.8844655,10.4159628 22.1647972,12.3956315 23.5838031,16.2566824 C23.886221,17.0795478 24.0409927,17.9493419 24.0409927,18.8260198 L24.0409927,49.5183386 L24.0409927,49.5183386 C24.0409927,52.8633062 21.9599088,55.8551549 18.8238412,57.0187222 L14.0234146,58.7998124 L14.0234146,58.7998124 C10.175054,60.22766 5.89784212,58.2654465 4.46999453,54.4170859 C4.16300992,53.5896954 4.00583645,52.7142438 4.00583645,51.8317391 C4.00583645,43.3867753 4.00583645,34.9418116 4.00583645,26.4968478 C4.00583645,24.6977773 4.00583645,22.8987068 4.00583645,21.0996363 L4.00583645,21.0996363 C4.00583645,17.745621 6.0980265,14.7476917 9.24616479,13.5906941 Z&quot; id=&quot;path-2&quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M5.24032834,2.21494006 L10.0175781,0.45921461 L10.0175781,0.45921461 C13.878629,-0.959791237 18.1589608,1.01987744 19.5779666,4.88092836 C19.8803845,5.7037938 20.0351562,6.57358786 20.0351562,7.45026573 L20.0351562,38.1425845 L20.0351562,38.1425845 C20.0351562,41.4875521 17.9540723,44.4794008 14.8180048,45.6429681 L10.0175781,47.4240584 L10.0175781,47.4240584 C6.16921751,48.8519059 1.89200567,46.8896924 0.464158083,43.0413318 C0.157173464,42.2139413 8.98985986e-15,41.3384898 8.8817842e-15,40.4559851 C5.28025569e-15,32.0110213 2.64012785e-15,23.5660575 0,15.1210938 C1.84503416e-15,13.3220232 3.69006831e-15,11.5229527 5.53510247e-15,9.72388222 L7.10542736e-15,9.72388222 C9.6736429e-15,6.36986699 2.09219005,3.37193766 5.24032834,2.21494006 Z&quot; id=&quot;path-3&quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M5.24032834,2.21494006 L10.0175781,0.45921461 L10.0175781,0.45921461 C13.878629,-0.959791237 18.1589608,1.01987744 19.5779666,4.88092836 C19.8803845,5.7037938 20.0351562,6.57358786 20.0351562,7.45026573 L20.0351562,38.1425845 L20.0351562,38.1425845 C20.0351562,41.4875521 17.9540723,44.4794008 14.8180048,45.6429681 L10.0175781,47.4240584 L10.0175781,47.4240584 C6.16921751,48.8519059 1.89200567,46.8896924 0.464158083,43.0413318 C0.157173464,42.2139413 8.98985986e-15,41.3384898 8.8817842e-15,40.4559851 C5.28025569e-15,32.0110213 2.64012785e-15,23.5660575 0,15.1210938 C1.84503416e-15,13.3220232 3.69006831e-15,11.5229527 5.53510247e-15,9.72388222 L7.10542736e-15,9.72388222 C9.6736429e-15,6.36986699 2.09219005,3.37193766 5.24032834,2.21494006 Z&quot; id=&quot;path-4&quot;&gt;&lt;/path&gt;
        &lt;mask id=&quot;mask-5&quot; maskContentUnits=&quot;userSpaceOnUse&quot; maskUnits=&quot;objectBoundingBox&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;20.0351562&quot; height=&quot;47.8902345&quot; fill=&quot;white&quot;&gt;
            &lt;use xlink:href=&quot;#path-4&quot;&gt;&lt;/use&gt;
        &lt;/mask&gt;
        &lt;path d=&quot;M5.24032834,2.21494006 L10.0175781,0.45921461 L10.0175781,0.45921461 C13.878629,-0.959791237 18.1589608,1.01987744 19.5779666,4.88092836 C19.8803845,5.7037938 20.0351562,6.57358786 20.0351562,7.45026573 L20.0351562,38.1425845 L20.0351562,38.1425845 C20.0351562,41.4875521 17.9540723,44.4794008 14.8180048,45.6429681 L10.0175781,47.4240584 L10.0175781,47.4240584 C6.16921751,48.8519059 1.89200567,46.8896924 0.464158083,43.0413318 C0.157173464,42.2139413 8.98985986e-15,41.3384898 8.8817842e-15,40.4559851 C5.28025569e-15,32.0110213 2.64012785e-15,23.5660575 0,15.1210938 C1.84503416e-15,13.3220232 3.69006831e-15,11.5229527 5.53510247e-15,9.72388222 L7.10542736e-15,9.72388222 C9.6736429e-15,6.36986699 2.09219005,3.37193766 5.24032834,2.21494006 Z&quot; id=&quot;path-6&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;v2&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-1_camera&quot; transform=&quot;translate(47.000000, 93.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;path d=&quot;M202.794922,125.993164 L193.664063,0.98828125 L0.509765625,63.03125 L13.8945312,218.316406 L42.2070312,237.144531 L144.007812,250.998047 L233.933594,234.289063 C246.292625,217.862243 249.991193,201.020446 245.029297,183.763672 C240.067401,166.506898 225.989276,147.250062 202.794922,125.993164 Z&quot; id=&quot;Path-5&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-2_camera&quot; transform=&quot;translate(100.000000, 157.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;polygon id=&quot;Path-5&quot; points=&quot;98.3828125 35.6894531 85.1152344 0.529296875 13.2519531 20.7773438 0.330078125 86.7519531 59.4433594 106.298828 79.1210937 101.582031 107.460937 104.070313&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_features&quot; transform=&quot;translate(75.000000, 148.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;80&quot; cy=&quot;178&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;100&quot; cy=&quot;140&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;148&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;49&quot; cy=&quot;164&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-10&quot; cx=&quot;4&quot; cy=&quot;64&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;60&quot; cy=&quot;160&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy&quot; cx=&quot;33&quot; cy=&quot;72&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-5&quot; cx=&quot;67&quot; cy=&quot;97&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-9&quot; cx=&quot;80&quot; cy=&quot;80&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;166.5&quot; cy=&quot;173.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-13&quot; cx=&quot;66.5&quot; cy=&quot;60.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-14&quot; cx=&quot;22.5&quot; cy=&quot;118.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;170.5&quot; cy=&quot;158&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;64&quot; cy=&quot;176&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;132&quot; cy=&quot;139&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;140.5&quot; cy=&quot;157.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;121&quot; cy=&quot;181&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-12&quot; cx=&quot;133&quot; cy=&quot;4&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;97&quot; cy=&quot;161&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;111&quot; cy=&quot;127&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;85&quot; cy=&quot;136&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;79&quot; cy=&quot;144&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;144&quot; cy=&quot;115&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;60&quot; cy=&quot;139&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;30&quot; cy=&quot;155&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;156&quot; cy=&quot;118&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;132&quot; cy=&quot;121&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;18&quot; cy=&quot;165&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-11&quot; cx=&quot;64&quot; cy=&quot;34&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-2_phone&quot; transform=&quot;translate(257.431048, 288.284945) rotate(-37.000000) translate(-257.431048, -288.284945) translate(246.931048, 264.284945)&quot;&gt;&lt;/g&gt;
            &lt;g id=&quot;4-4_anchors&quot; transform=&quot;translate(140.000000, 173.000000)&quot; stroke=&quot;#000000&quot;&gt;
                &lt;path d=&quot;M26.1171875,45 L26.1171875,75&quot; id=&quot;Path-4&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path-6&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-5_person&quot; transform=&quot;translate(252.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-1&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M9.41864427,14.060003 C6.46726462,15.1446882 4.50583645,17.955247 4.50583645,21.0996363 L4.50583645,51.8317391 C4.50583645,52.6548737 4.65243614,53.4714297 4.93876851,54.2431578 C6.27055829,57.8326217 10.2600226,59.6628282 13.8494865,58.3310384 L18.6499132,56.5499482 C21.5899765,55.4591039 23.5409927,52.6542457 23.5409927,49.5183386 L23.5409927,18.8260198 C23.5409927,18.0081932 23.3966108,17.1967884 23.1144942,16.4291619 C21.7907461,12.8273031 17.7977528,10.9805295 14.1958941,12.3042775 L9.41864427,14.060003 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M43.8662109,54.2951339 C43.2197037,47.2391468 42.4052506,43.8266412 41.4228516,44.0576172 C35.9941406,45.3339844 28.5444721,9.38688117 30.8359375,6.22265625 C34.6060532,1.01660156 69.0625,-7.31651228 67.84375,16.3310547 C67.03125,32.0960993 63.9322917,44.7507924 58.546875,54.2951339 C66.7701069,49.2018936 72.1395731,46.6552734 74.6552734,46.6552734 C78.428824,46.6552734 81.2041008,52.8013269 80.8476562,55.4792972 C80.6100265,57.2646107 79.5517583,70.7331002 77.6728516,95.8847656 C69.9235026,105.734375 61.6959635,110.609701 52.9902344,110.510742 C39.9316406,110.362305 27.5716684,104.533615 25.8232422,101.063477 C24.6576247,98.7500512 22.6400466,83.5553248 19.7705078,55.4792972 L22.8642578,46.6552734 L43.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;0-1_person&quot; transform=&quot;translate(252.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-2&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M9.41864427,14.060003 C6.46726462,15.1446882 4.50583645,17.955247 4.50583645,21.0996363 L4.50583645,51.8317391 C4.50583645,52.6548737 4.65243614,53.4714297 4.93876851,54.2431578 C6.27055829,57.8326217 10.2600226,59.6628282 13.8494865,58.3310384 L18.6499132,56.5499482 C21.5899765,55.4591039 23.5409927,52.6542457 23.5409927,49.5183386 L23.5409927,18.8260198 C23.5409927,18.0081932 23.3966108,17.1967884 23.1144942,16.4291619 C21.7907461,12.8273031 17.7977528,10.9805295 14.1958941,12.3042775 L9.41864427,14.060003 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M43.8662109,54.2951339 C43.2197037,47.2391468 42.4052506,43.8266412 41.4228516,44.0576172 C35.9941406,45.3339844 28.5444721,9.38688117 30.8359375,6.22265625 C34.6060532,1.01660156 69.0625,-7.31651228 67.84375,16.3310547 C67.03125,32.0960993 63.9322917,44.7507924 58.546875,54.2951339 C66.7701069,49.2018936 72.1395731,46.6552734 74.6552734,46.6552734 C78.428824,46.6552734 81.2041008,52.8013269 80.8476562,55.4792972 C80.6100265,57.2646107 79.5517583,70.7331002 77.6728516,95.8847656 C69.9235026,105.734375 61.6959635,110.609701 52.9902344,110.510742 C39.9316406,110.362305 27.5716684,104.533615 25.8232422,101.063477 C24.6576247,98.7500512 22.6400466,83.5553248 19.7705078,55.4792972 L22.8642578,46.6552734 L43.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-3_person&quot; transform=&quot;translate(183.000000, 203.000000)&quot; fill=&quot;#80D7DA&quot;&gt;
                &lt;path d=&quot;M24.0957031,53.8487582 C23.4491959,46.7927711 22.6347428,43.3802655 21.6523438,43.6112415 C16.2236328,44.8876087 8.77396432,8.94050549 11.0654297,5.77628056 C14.8355454,0.570225875 49.2919922,-7.76288797 48.0732422,15.884679 C47.2607422,31.6497236 44.1617839,44.3044167 38.7763672,53.8487582 C46.9995991,48.7555179 52.3690653,46.2088977 54.8847656,46.2088977 C58.6583162,46.2088977 61.433593,52.3549512 61.0771484,55.0329215 C60.8395187,56.818235 59.7812505,70.2867245 57.9023438,95.4383899 C50.1529948,105.287999 41.9254557,110.163325 33.2197266,110.064366 C20.1611328,109.915929 7.80116056,104.087239 6.05273438,100.617101 C4.88711692,98.3036755 2.86953879,83.1089491 0,55.0329215 L3.09375,46.2088977 L24.0957031,53.8487582 Z&quot; id=&quot;Path-7&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-3_temp-phone&quot; transform=&quot;translate(155.000000, 195.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-3&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M5.41280781,2.68424895 C2.46142817,3.7689342 0.5,6.57949295 0.5,9.72388222 L0.5,40.4559851 C0.5,41.2791197 0.646599691,42.0956756 0.932932058,42.8674038 C2.26472184,46.4568677 6.2541862,48.2870742 9.84365009,46.9552844 L14.6440767,45.1741941 C17.58414,44.0833498 19.5351562,41.2784917 19.5351562,38.1425845 L19.5351562,7.45026573 C19.5351562,6.6324392 19.3907743,5.82103436 19.1086577,5.05340784 C17.7849097,1.45154906 13.7919164,-0.395224566 10.1900576,0.928523495 L5.41280781,2.68424895 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_wall&quot; transform=&quot;translate(155.000000, 195.000000)&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2&quot;&gt;
                &lt;use id=&quot;Rectangle&quot; mask=&quot;url(#mask-5)&quot; xlink:href=&quot;#path-4&quot;&gt;&lt;/use&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-2_phone&quot; transform=&quot;translate(163.000000, 203.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-6&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M5.41280781,2.68424895 C2.46142817,3.7689342 0.5,6.57949295 0.5,9.72388222 L0.5,40.4559851 C0.5,41.2791197 0.646599691,42.0956756 0.932932058,42.8674038 C2.26472184,46.4568677 6.2541862,48.2870742 9.84365009,46.9552844 L14.6440767,45.1741941 C17.58414,44.0833498 19.5351562,41.2784917 19.5351562,38.1425845 L19.5351562,7.45026573 C19.5351562,6.6324392 19.3907743,5.82103436 19.1086577,5.05340784 C17.7849097,1.45154906 13.7919164,-0.395224566 10.1900576,0.928523495 L5.41280781,2.68424895 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;We got this to a point where it was working most of the time. One of the core issues was that there&#39;s a lot of
guess-work at the end of the process. The artwork would usually be at the position of your phone, but it was rarely
oriented correctly. We experimented by placing the artwork a meter away, but in user testing very few people could do
that roughly in their head, and we opted to use the exact position of the phone. This meant that you had to move to
touch the wall, then come back to see if the artwork was placed correctly.&lt;/p&gt;

&lt;p&gt;This user flow was hard to explain, and it felt like we weren&#39;t setting people up to win. It was quite a debate about
whether we could ship with this or not because we wanted to ship &lt;a href=&quot;https://github.com/artsy/meta/blob/master/meta/what_is_artsy.md#quality-worthy-of-art&quot;&gt;Quality worthy of Art&lt;/a&gt;. Then we read about the
upcoming changes in ARKit 1.5. &lt;strong&gt;Vertical plane detection&lt;/strong&gt;. Or, &lt;em&gt;mostly&lt;/em&gt; wall detection. The debate over whether our
initial approach was good enough became moot.&lt;/p&gt;

&lt;p&gt;With the advent of vertical wall detection, we could change our flow to be a lot like what someone would have thought it
should be:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;desktop-only&quot; style=&#39;display: flex; flex-flow:row; margin: 0px -60px;&#39;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;v3&quot;&gt;
    &lt;li&gt;Open up ARKit and let it discover the world&lt;/li&gt;
    &lt;li&gt;Ask a user to point at a wall&lt;/li&gt;
    &lt;li&gt;Use the feature detection to detect a plane&lt;/li&gt;
    &lt;li&gt;Use that plane to place an artwork&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;v3&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;path d=&quot;M15.5931447,21.0693125 L20.3703944,19.313587 L20.3703944,19.313587 C24.2314454,17.8945812 28.5117771,19.8742499 29.9307829,23.7353008 C30.2332008,24.5581662 30.3879726,25.4279603 30.3879726,26.3046382 L30.3879726,56.9969569 L30.3879726,56.9969569 C30.3879726,60.3419246 28.3068886,63.3337733 25.1708211,64.4973405 L20.3703944,66.2784308 L20.3703944,66.2784308 C16.5220338,67.7062784 12.244822,65.7440649 10.8169744,61.8957043 C10.5099898,61.0683138 10.3528163,60.1928622 10.3528163,59.3103575 C10.3528163,50.8653937 10.3528163,42.42043 10.3528163,33.9754662 C10.3528163,32.1763957 10.3528163,30.3773252 10.3528163,28.5782547 L10.3528163,28.5782547 C10.3528163,25.2242394 12.4450064,22.2263101 15.5931447,21.0693125 Z&quot; id=&quot;path-1&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;v3&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_camera&quot; transform=&quot;translate(55.000000, 117.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;polygon id=&quot;Path-5&quot; points=&quot;218.78125 80.3027344 174.591797 0.3046875 0.55859375 24 5.89453125 194.316406 34.2070313 213.144531 136.007813 226.998047 225.933594 210.289063&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_features&quot; transform=&quot;translate(89.000000, 169.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;66&quot; cy=&quot;157&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;86&quot; cy=&quot;119&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;104&quot; cy=&quot;127&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;35&quot; cy=&quot;143&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;46&quot; cy=&quot;139&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;152.5&quot; cy=&quot;152.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;156.5&quot; cy=&quot;137&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;50&quot; cy=&quot;155&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;118&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-13&quot; cx=&quot;93&quot; cy=&quot;45&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-14&quot; cx=&quot;42&quot; cy=&quot;42&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-15&quot; cx=&quot;57&quot; cy=&quot;88&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-16&quot; cx=&quot;108&quot; cy=&quot;68&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-17&quot; cx=&quot;121&quot; cy=&quot;33&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-18&quot; cx=&quot;117.5&quot; cy=&quot;2.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-19&quot; cx=&quot;113.5&quot; cy=&quot;27.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-20&quot; cx=&quot;118.5&quot; cy=&quot;56.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-21&quot; cx=&quot;66.5&quot; cy=&quot;61.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;126.5&quot; cy=&quot;136.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;107&quot; cy=&quot;160&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;83&quot; cy=&quot;140&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy&quot; cx=&quot;7&quot; cy=&quot;94&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-5&quot; cx=&quot;19&quot; cy=&quot;68&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-9&quot; cx=&quot;7&quot; cy=&quot;39&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-10&quot; cx=&quot;46&quot; cy=&quot;62&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-11&quot; cx=&quot;46&quot; cy=&quot;16&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-23&quot; cx=&quot;22&quot; cy=&quot;54&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-12&quot; cx=&quot;77&quot; cy=&quot;74&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;97&quot; cy=&quot;106&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;71&quot; cy=&quot;115&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;65&quot; cy=&quot;123&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-22&quot; cx=&quot;22&quot; cy=&quot;25&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;130&quot; cy=&quot;94&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;46&quot; cy=&quot;118&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;16&quot; cy=&quot;134&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;142&quot; cy=&quot;97&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;100&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;4&quot; cy=&quot;144&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_phone&quot; transform=&quot;translate(257.431048, 288.284945) rotate(-37.000000) translate(-257.431048, -288.284945) translate(246.931048, 264.284945)&quot;&gt;&lt;/g&gt;
            &lt;g id=&quot;0-4_person&quot; transform=&quot;translate(238.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-1&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M15.7656241,21.5386214 C12.8142445,22.6233066 10.8528163,25.4338654 10.8528163,28.5782547 L10.8528163,59.3103575 C10.8528163,60.1334921 10.999416,60.950048 11.2857484,61.7217762 C12.6175382,65.3112401 16.6070025,67.1414466 20.1964664,65.8096568 L24.996893,64.0285666 C27.9369564,62.9377223 29.8879726,60.1328641 29.8879726,56.9969569 L29.8879726,26.3046382 C29.8879726,25.4868116 29.7435906,24.6754068 29.4614741,23.9077803 C28.137726,20.3059215 24.1447327,18.4591479 20.5428739,19.7828959 L15.7656241,21.5386214 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M57.8662109,54.2951339 C57.2197037,47.2391468 56.4052506,43.8266412 55.4228516,44.0576172 C49.9941406,45.3339844 42.5444721,9.38688117 44.8359375,6.22265625 C48.6060532,1.01660156 83.0625,-7.31651228 81.84375,16.3310547 C81.03125,32.0960993 77.9322917,44.7507924 72.546875,54.2951339 C80.7701069,49.2018936 86.1395731,46.6552734 88.6552734,46.6552734 C92.428824,46.6552734 95.2041008,52.8013269 94.8476562,55.4792972 C94.6100265,57.2646107 93.5517583,70.7331002 91.6728516,95.8847656 C83.9235026,105.734375 75.6959635,110.609701 66.9902344,110.510742 C53.9316406,110.362305 41.5716684,104.533615 39.8232422,101.063477 C38.6576247,98.7500512 36.6400466,83.5553248 33.7705078,55.4792972 L36.8642578,46.6552734 L57.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_work&quot; transform=&quot;translate(136.000000, 165.000000)&quot; stroke=&quot;#000000&quot;&gt;
                &lt;polygon id=&quot;Path-6&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-4-plane&quot; transform=&quot;translate(86.000000, 151.000000)&quot; stroke-width=&quot;2&quot; stroke=&quot;#E2D52A&quot; fill-opacity=&quot;0.27100317&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;polygon id=&quot;Path-2&quot; transform=&quot;translate(64.065430, 59.840820) scale(1, -1) translate(-64.065430, -59.840820) &quot; points=&quot;0.537109375 81.3066406 127.59375 119.625 127.59375 40.6816406 5.53710938 0.056640625&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;This seems almost perfect, except that it only works in theory. In practice, you don&#39;t get enough feature points on a
blank wall. Recommending user point their phone at a blank wall (the kind of wall you&#39;d place an artwork on) is likely
to end up in frustration. So instead, our user flow is:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;desktop-only&quot; style=&#39;display: flex; flex-flow:row; margin: 0px -60px;&#39;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;v4&quot;&gt;
    &lt;li&gt;Open up ARKit and let it discover the world&lt;/li&gt;
    &lt;li&gt;Ask a user to point at an existing object on a wall&lt;/li&gt;
    &lt;li&gt;Expand the discovered plane in all directions&lt;/li&gt;
    &lt;li&gt;Use the extended plane to place an artwork&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;v4&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;path d=&quot;M15.5931447,21.0693125 L20.3703944,19.313587 L20.3703944,19.313587 C24.2314454,17.8945812 28.5117771,19.8742499 29.9307829,23.7353008 C30.2332008,24.5581662 30.3879726,25.4279603 30.3879726,26.3046382 L30.3879726,56.9969569 L30.3879726,56.9969569 C30.3879726,60.3419246 28.3068886,63.3337733 25.1708211,64.4973405 L20.3703944,66.2784308 L20.3703944,66.2784308 C16.5220338,67.7062784 12.244822,65.7440649 10.8169744,61.8957043 C10.5099898,61.0683138 10.3528163,60.1928622 10.3528163,59.3103575 C10.3528163,50.8653937 10.3528163,42.42043 10.3528163,33.9754662 C10.3528163,32.1763957 10.3528163,30.3773252 10.3528163,28.5782547 L10.3528163,28.5782547 C10.3528163,25.2242394 12.4450064,22.2263101 15.5931447,21.0693125 Z&quot; id=&quot;path-1&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;v4&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
                &lt;polygon id=&quot;Path-9&quot; stroke=&quot;#BCEBED&quot; points=&quot;140 143.699219 140 220.496094 176.507812 208.332031 176.507812 132&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_camera&quot; transform=&quot;translate(55.000000, 117.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;polygon id=&quot;Path-5&quot; points=&quot;218.78125 80.3027344 174.591797 0.3046875 0.55859375 24 5.89453125 194.316406 34.2070313 213.144531 136.007813 226.998047 225.933594 210.289063&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_features&quot; transform=&quot;translate(89.000000, 156.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;66&quot; cy=&quot;170&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;86&quot; cy=&quot;132&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;104&quot; cy=&quot;140&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;35&quot; cy=&quot;156&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;46&quot; cy=&quot;152&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;152.5&quot; cy=&quot;165.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;156.5&quot; cy=&quot;150&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;50&quot; cy=&quot;168&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;131&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-13&quot; cx=&quot;93&quot; cy=&quot;58&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-14&quot; cx=&quot;100&quot; cy=&quot;66&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-15&quot; cx=&quot;57&quot; cy=&quot;101&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-16&quot; cx=&quot;108&quot; cy=&quot;81&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-17&quot; cx=&quot;81&quot; cy=&quot;34&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-18&quot; cx=&quot;77.5&quot; cy=&quot;3.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-19&quot; cx=&quot;73.5&quot; cy=&quot;28.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-20&quot; cx=&quot;118.5&quot; cy=&quot;69.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-21&quot; cx=&quot;66.5&quot; cy=&quot;74.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;126.5&quot; cy=&quot;149.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;107&quot; cy=&quot;173&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;83&quot; cy=&quot;153&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy&quot; cx=&quot;65&quot; cy=&quot;81&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-5&quot; cx=&quot;101&quot; cy=&quot;40&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-9&quot; cx=&quot;89&quot; cy=&quot;11&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-10&quot; cx=&quot;46&quot; cy=&quot;75&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-11&quot; cx=&quot;104&quot; cy=&quot;3&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-23&quot; cx=&quot;104&quot; cy=&quot;26&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-12&quot; cx=&quot;77&quot; cy=&quot;87&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;97&quot; cy=&quot;119&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;71&quot; cy=&quot;128&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;65&quot; cy=&quot;136&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-22&quot; cx=&quot;80&quot; cy=&quot;49&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;130&quot; cy=&quot;107&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;46&quot; cy=&quot;131&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;16&quot; cy=&quot;147&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;142&quot; cy=&quot;110&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;113&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;4&quot; cy=&quot;157&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_phone&quot; transform=&quot;translate(257.431048, 288.284945) rotate(-37.000000) translate(-257.431048, -288.284945) translate(246.931048, 264.284945)&quot;&gt;&lt;/g&gt;
            &lt;g id=&quot;0-4_person&quot; transform=&quot;translate(238.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-1&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M15.7656241,21.5386214 C12.8142445,22.6233066 10.8528163,25.4338654 10.8528163,28.5782547 L10.8528163,59.3103575 C10.8528163,60.1334921 10.999416,60.950048 11.2857484,61.7217762 C12.6175382,65.3112401 16.6070025,67.1414466 20.1964664,65.8096568 L24.996893,64.0285666 C27.9369564,62.9377223 29.8879726,60.1328641 29.8879726,56.9969569 L29.8879726,26.3046382 C29.8879726,25.4868116 29.7435906,24.6754068 29.4614741,23.9077803 C28.137726,20.3059215 24.1447327,18.4591479 20.5428739,19.7828959 L15.7656241,21.5386214 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M57.8662109,54.2951339 C57.2197037,47.2391468 56.4052506,43.8266412 55.4228516,44.0576172 C49.9941406,45.3339844 42.5444721,9.38688117 44.8359375,6.22265625 C48.6060532,1.01660156 83.0625,-7.31651228 81.84375,16.3310547 C81.03125,32.0960993 77.9322917,44.7507924 72.546875,54.2951339 C80.7701069,49.2018936 86.1395731,46.6552734 88.6552734,46.6552734 C92.428824,46.6552734 95.2041008,52.8013269 94.8476562,55.4792972 C94.6100265,57.2646107 93.5517583,70.7331002 91.6728516,95.8847656 C83.9235026,105.734375 75.6959635,110.609701 66.9902344,110.510742 C53.9316406,110.362305 41.5716684,104.533615 39.8232422,101.063477 C38.6576247,98.7500512 36.6400466,83.5553248 33.7705078,55.4792972 L36.8642578,46.6552734 L57.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_work&quot; transform=&quot;translate(94.000000, 166.000000)&quot; stroke=&quot;#000000&quot;&gt;
                &lt;polygon id=&quot;Path-6&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4-plane&quot; transform=&quot;translate(154.000000, 144.000000)&quot; stroke-width=&quot;2&quot; stroke=&quot;#E2D52A&quot; fill-opacity=&quot;0.27100317&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;polygon id=&quot;Path-2&quot; transform=&quot;translate(22.351563, 46.503906) scale(1, -1) translate(-22.351563, -46.503906) &quot; points=&quot;0.724609375 81.4941406 43.9785156 92.9433594 43.9785156 14.2070312 0.724609375 0.064453125&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-4-extended-plane&quot; transform=&quot;translate(10.000000, 106.000000)&quot; stroke=&quot;#7ED321&quot; stroke-dasharray=&quot;2&quot;&gt;
                &lt;polygon id=&quot;Path-10&quot; points=&quot;0.57421875 76.140625 288.720703 0.248046875 288.720703 94.5058594 0.57421875 187.464844&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;🎉 - you have the Artsy workflow for putting a work on the wall.&lt;/p&gt;

&lt;a name=&quot;Abstractions&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Abstractions&lt;/h2&gt;

&lt;p&gt;While we were not initially sure about how well ARKit would work out for us, we thought the best way to get our feet wet
would be to work with a contractor. We knew &lt;a href=&quot;http://www.lazerwalker.com&quot;&gt;@lazerwalker&lt;/a&gt; through the iOS dev community and asked if he
was interested in prototyping it out. He built out a demo application of the first design iteration, you can &lt;a href=&quot;https://github.com/lazerwalker/art-on-walls-prototype&quot;&gt;see it
here&lt;/a&gt; as it&#39;s MIT licensed.&lt;/p&gt;

&lt;p&gt;I took his prototype and &lt;a href=&quot;https://github.com/artsy/eigen/pull/2501&quot;&gt;merged it into our app&lt;/a&gt; Eigen. From there, I started to turn the prototype into
production code. We effectively had two state machines: one that was handling the internal state of the AR world, and
another which handled the user interface from the UIKit world. We kept these in sync by having two protocols:
&lt;code&gt;ARVIRInteractive&lt;/code&gt; and &lt;code&gt;ARVIRDelegate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;They didn&#39;t end up being that complex, you can see them in &lt;a href=&quot;https://github.com/artsy/eigen/blob/f897b3438bd07470bd88a790fc6d6a524f5756cb/Artsy/View_Controllers/ARVIR/AR/ARAugmentedVIRInteractionController.h&quot;&gt;&lt;code&gt;ARAugmentedVIRInteractionController.h&lt;/code&gt;&lt;/a&gt;. In fact,
the story of AR at Artsy is that most of this is not too complex. Which I think is a testament to how well thought-out
ARKit is.&lt;/p&gt;

&lt;p&gt;So to make it work, we have a reasonably complicated UIViewController subclass,
&lt;a href=&quot;https://github.com/artsy/eigen/blob/f897b3438bd07470bd88a790fc6d6a524f5756cb/Artsy/View_Controllers/Core/ARViewInRoomViewController.m&quot;&gt;&lt;code&gt;ARAugmentedVIRViewController.m&lt;/code&gt;&lt;/a&gt; which handles presenting a user interface above the camera, then an
interaction controller &lt;a href=&quot;https://github.com/artsy/eigen/blob/f897b3438bd07470bd88a790fc6d6a524f5756cb/Artsy/View_Controllers/ARVIR/AR/ARAugmentedVIRInteractionController.m&quot;&gt;&lt;code&gt;ARAugmentedVIRInteractionController.m&lt;/code&gt;&lt;/a&gt; which handles all of the interactions inside
AR. By using protocols to communicate between two, I could test out different AR interactions by duplicating the
existing interaction controller and iterating on a new object for a while. This made it possible to prototype a few
ideas, then switch between them - saving on dev time as this project wasn&#39;t a good fit for &lt;a href=&quot;http://artsy.github.io/series/react-native-at-artsy/&quot;&gt;React Native&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;React Native is really great for &lt;a href=&quot;http://artsy.github.io/blog/2018/03/17/two-years-of-react-native/&quot;&gt;nearly every screen we deal with&lt;/a&gt; typically. We tend to basically build pretty
screens of JSON. This experience is far from that. It requires constantly changing states between two very separate but
linked worlds. One of the biggest advantages to doing it in React Native would have been using it for cross-platform
work, but that&#39;s speculative as only ARKit supports vertical plane detection today. We&#39;d have had to either use &lt;a href=&quot;https://github.com/react-native-ar/react-native-arkit&quot;&gt;a
dependency&lt;/a&gt;, or build our own simpler bridge from ARKit to JS and maintain that. It just felt like a lot of work
for a one-off section of the app.&lt;/p&gt;

&lt;p&gt;Testing this code turned out to not be too valuable, I have tests that &lt;a href=&quot;https://github.com/artsy/eigen/tree/master/Artsy_Tests/View_Controller_Tests/ARVIR&quot;&gt;cover a lot of the UIKit level&lt;/a&gt; work but
I avoided writing tests for ARKit code. It was changing too often, and was often exploratory. Also, our tests run on iOS
10, which doesn&#39;t support ARKit anyway. So those tests would not run on CI.&lt;/p&gt;

&lt;a name=&quot;Demo&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Demo&lt;/h2&gt;

&lt;p&gt;Wonder what it looks like in production? Click through for a video of it in action in my &quot;cosy&quot; manhattan bedroom:&lt;/p&gt;

&lt;center&gt;
&lt;a href=&quot;http://files.artsy.net/videos/eigen-arvir-demo.mp4&quot;&gt;
&lt;img src=&quot;/images/ar/ar-vir-demo.png&quot; width=325&gt;
&lt;/a&gt;
&lt;/center&gt;


&lt;p&gt;We explicitly aimed to try and have this project as free as possible from dependencies so that others could re-use this
code. It&#39;s not &lt;em&gt;quite&lt;/em&gt; generic enough to warrant making it&#39;s own CocoaPod, but it&#39;s MIT licensed and most of the
dependencies are to do with user-interface styling and testing, which should be easily replaced in another codebase. Let
us know if you&#39;ve explored adding something it to your app or have questions!&lt;/p&gt;

&lt;p&gt; &lt;style type=&quot;text/css&quot;&gt;
.workflow li {
  width: 230px;
  padding: 20px;
  list-style:none;
  color: #80D7DA;
  border: 1px solid #80D7DA;
  margin-top:-1px;
}
.workflow li.active {
  border-left: 1px solid black;
  border-right: 1px solid black;
  color: black;
}
.diagram {
  display: flex;
  flex-flow:row;
  margin: 0px -60px;
}
ol {
  padding-left: 0;
  margin-top: -20px;
}
@media screen and (min-width: 900px) {
  body &gt; div {
    background-image: url(/images/ar/cover.svg);
    background-repeat: no-repeat;
    background-position: 0px 00px;
  }
}
&lt;/style&gt;&lt;/p&gt;

&lt;script&gt;
  $(() =&gt; {
    // When hovering on an .workflow li, use it&#39;s index
    // to disable groups in a correlating SVG. Groups in the SVG
    // all are prefixed with `start-end_name`.
    $(&quot;.workflow li&quot;).hover(function() {
        var thisIndex = $(this).index()  + 1
        var parentDataID = $(this).parent().data(&quot;id&quot;)
        $(this).parent().children().removeClass(&#39;active&#39;)
        $(this).addClass(&#39;active&#39;)

        $(&#39;g#&#39; + parentDataID +&#39; g&#39;).toArray().forEach(g =&gt; {
          if (!g.id.includes(&quot;-&quot;)) { return }

          var before = parseInt(g.id.split(&quot;-&quot;)[0])
          var after = parseInt(g.id.split(&quot;-&quot;)[1].split(&quot;_&quot;)[0])
          var shouldShow = before &lt;= thisIndex &amp;&amp; thisIndex &lt;= after

          g.style.display = shouldShow ? &quot;block&quot; : &quot;none&quot;
        })
    });
    
    // Select the first item in every SVG li
    $(&quot;.workflow li:first-child&quot;).mouseenter()
})&lt;/script&gt;



</description>
        <pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/03/18/ar/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/03/18/ar/</guid>
        
        
        <category>arkit</category>
        
        <category>ios</category>
        
        <category>native</category>
        
      </item>
    
      <item>
        <title>React Native, 2 years later</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://twitter.com/alloy/&quot;&gt;@alloy&lt;/a&gt; first mentioned React Native as an option for Artsy back &lt;a href=&quot;https://github.com/artsy/mobile/issues/22&quot;&gt;in March 2015&lt;/a&gt;, and in February 2016 he
made &lt;a href=&quot;https://github.com/artsy/emission/commit/b9154d4145feb49b38e713ee84594de04ea377e3#diff-9879d6db96fd29134fc802214163b95a&quot;&gt;our first commit&lt;/a&gt; to get the ball rolling. Since then, we&#39;ve grown a new codebase, &lt;a href=&quot;https://github.com/artsy/emission/&quot;&gt;Emission&lt;/a&gt;,
which has slowly taken over the responsibility for creating the UIViewControllers presented inside our iOS app.&lt;/p&gt;

&lt;p&gt;We&#39;ve come quite far from where we started, and I was asked if I could give a talk to summerize what we&#39;ve learned in
the last 2 years as a set of native developers using React Native.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://speakerdeck.com/orta/react-native-2-years-later&quot;&gt;slides are on speakerdeck&lt;/a&gt;, and I&#39;ve &lt;a href=&quot;https://github.com/artsy/artsy.github.io/issues/420&quot;&gt;opened comments&lt;/a&gt; for this post if people have questions. Jump
through to get to the video or watch it &lt;a href=&quot;https://www.prolificinteractive.com/iosoho/&quot;&gt;on Prolific&#39;s site&lt;/a&gt; for &lt;a href=&quot;https://www.meetup.com/iOSoho/&quot;&gt;iOSoho&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Table of Contents for the Video:&lt;/p&gt;

&lt;ul id=&quot;timers&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;330&quot;&gt;Why move? 5:30&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;520&quot;&gt;Why not Swift? 8:40&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;590&quot;&gt;What we expected vs what we have: 9:50&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;960&quot;&gt;Downsides: 16:00&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;1235&quot;&gt;Artsy Omakase: 20:35&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;1420&quot;&gt;Upsides: 23:40&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;1645&quot;&gt;In-App demo of Emission: 27:25&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;2195&quot;&gt;RN Brownfield Apps: 36:35&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;2379&quot;&gt;Our Deployment: 39:30&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;center id=&quot;video&quot;&gt;
  &lt;iframe src=&quot;https://player.vimeo.com/video/260417482&quot; width=&quot;100%&quot; height=&quot;600&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;




&lt;script src=&quot;https://player.vimeo.com/api/player.js&quot;&gt;&lt;/script&gt;


&lt;script&gt;
  $(() =&gt; {
    $(&#39;#timers a&#39;).click( function(e) {
      var time = $(this).attr(&quot;data-time&quot;);
      var iframe = document.querySelector(&#39;iframe&#39;);
      var player = new Vimeo.Player(iframe);
      player.setCurrentTime(time)
      e.stopPropagation()
    });
  })
&lt;/script&gt;



</description>
        <pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/03/17/two-years-of-react-native/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/03/17/two-years-of-react-native/</guid>
        
        
        <category>emission</category>
        
        <category>javascript</category>
        
        <category>react</category>
        
        <category>reaction</category>
        
        <category>reactnative</category>
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Integrating Redux and Socket.io</title>
        <description>&lt;p&gt;On the engineering team at Artsy, we&#39;ve built a CMS for both internal and external editors to write and publish &lt;a href=&quot;https://www.artsy.net/article/artsy-editorial-brooklyn-born-sisters-diego-rivera-dubbed-the-greatest-living-women-mural-painters&quot;&gt;articles&lt;/a&gt;. We have a team of a dozen in-house editors creating new content on a daily basis. As many people starting using the app simultaneously, something became apparent. Editors would unintentionally go and override each other’s work because there was no way to tell if someone else was currently editing an article. As a workaround, team members would be forced to edit drafts in another editor such as google docs and copy their work over once ready. This made for a lackluster collaborative experience.&lt;/p&gt;

&lt;p&gt;So we decided to implement a system that would make our editors more confident in our CMS by ensuring only one editor could go in and edit an article at any given time. I was tasked with coming up with an elegant technical solution for this feature. Here&#39;s the approach I took....&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;We decided to resolve this issue building an article locking mechanism. When an editor would start editing an article, all other users in sessions would be notified. One of the requirements for this new feature was for things needed to update without refreshing the page. In order to fulfill this, we needed to implement a system to push events from the server to clients.&lt;/p&gt;

&lt;p&gt;Based on the requirements presented, I looked at potential solutions for this. Right away, the HTML5 WebSocket API seemed like the perfect solution to keep all clients synced in realtime, however a few issues arose. For one, many proxies and firewalls block WebSocket connections, so it&#39;s not always an available option for clients. I needed to find another option to mitigate that problem. That&#39;s where &lt;a href=&quot;https://socket.io&quot;&gt;socket.io&lt;/a&gt; comes in.&lt;/p&gt;

&lt;p&gt;Socket.io, a battle tested library for creating real-time bidirectional communication channels, helps mitigate those problems. In a gist socket.io initially establishes a long-polling HTTP connection, and in parallel tries to upgrade it to WebSocket.&lt;/p&gt;

&lt;p&gt;By the time this project was proposed, we had already started the process of converting the app from using Coffeescript, Backbone + Jade to a modern javascript stack based on ES6, React for UI components and Redux for managing app state. Naturally, one of the goals was to leverage Redux to manage state for this feature. You&#39;ve probably at least heard of Redux as it has emerged as the industry standard way of implementing one-way data flows in apps. If you&#39;re not familiar with Redux and its architecture, here&#39;s an excellent &lt;a href=&quot;https://www.smashingmagazine.com/2016/06/an-introduction-to-redux/&quot;&gt;intro to redux&lt;/a&gt; article to familiarize yourself.&lt;/p&gt;

&lt;p&gt; So how do we go about integrating socket.io in the Redux-based state architecture we just designed. I thought the best would be to change as little as possible to the code structures developers familiar with Redux are already used to. Namely, use standard Redux actions creators and simply use a decorator to enhance them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2018-03-15-integrating-redux-and-socketio/example.gif&quot; alt=&quot;/images/2018-03-15-integrating-redux-and-socketio/example.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here&#39;s a simplified version of the &lt;a href=&quot;https://leanpub.com/javascriptallongesix/read#decorators&quot;&gt;function decorator&lt;/a&gt; which broadcasts redux actions via a socket connection to other connected clients.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// From client&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;socket.io-client&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;messageTypes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./messageTypes&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rootURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// Helper to emit a redux action to our websocket server&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emitAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;actionCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// This return the action object which gets sent to our backend&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// server via the socket connection&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actionCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;To recap the code above, &lt;code&gt;emitAction&lt;/code&gt; is a &lt;a href=&quot;https://leanpub.com/javascriptallongesix/read#decorators&quot;&gt;function decorator&lt;/a&gt; that enhances action creators to dispatch actions via the local store and also broadcast that same action to other connected clients. The following code snippet shows how it&#39;s being used to wrap a typical redux action creator.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// actions.js&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyMirror&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;client/lib/keyMirror&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emitAction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;client/apps/websocket/client&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;messageTypes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;client/apps/websocket/messageTypes&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyMirror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;START_EDITING_ARTICLE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;STOP_EDITING_ARTICLE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;startEditingArticle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emitAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;START_EDITING_ARTICLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;messageTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userStartedEditing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toISOString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;On the receiving end, we simply add a reducer to process the event from the action payload which we can then return a new state from.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;//reducers.js&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sharify&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;client/actions/editActions&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;updeep&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;articles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ARTICLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;articlesInSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ARTICLES_IN_SESSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;articlesReducer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;START_EDITING_ARTICLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;articlesInSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We can now use our &lt;code&gt;emitAction&lt;/code&gt; decorator function to enhance any number of action creators. All that&#39;s needed is to add a &lt;code&gt;key&lt;/code&gt; property to the action object. We can then decide to either process actions
 on a backend service or proxy them directly to other clients. You can find the remainder of the server implementation and our &lt;a href=&quot;https://github.com/artsy/positron/blob/master/src/client/apps/websocket/index.js&quot;&gt;event handlers&lt;/a&gt; in our &lt;a href=&quot;https://github.com/artsy/positron&quot;&gt;github repo&lt;/a&gt; along with instructions on how to run the code.&lt;/p&gt;

&lt;a name=&quot;Future.improvements&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Future improvements&lt;/h2&gt;

&lt;p&gt;There&#39;s an opportunity to extract this module for reuse in other projects and apps. Another logical improvement to this project would be to implement collaborative editing using this architecture. It would also be nice to include helpers for handling events on backend servers.&lt;/p&gt;

&lt;a name=&quot;Useful.links&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Useful links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://socket.io/docs/&quot;&gt;Socket.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substantial/updeep&quot;&gt;Updeep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/03/15/integrating-redux-and-socketio/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/03/15/integrating-redux-and-socketio/</guid>
        
        
        <category>javascript</category>
        
        <category>positron</category>
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Apogee Technical Retrospective</title>
        <description>&lt;p&gt;We&#39;ve previously covered &lt;a href=&quot;/blog/2018/02/02/artsy-apogee/&quot;&gt;what Apogee is&lt;/a&gt; and &lt;a href=&quot;/blog/2018/01/24/kubernetes-and-hokusai/&quot;&gt;how it&#39;s deployed&lt;/a&gt;, so all that&#39;s left to cover is the technology used to build it. As a refresher: Apogee is a Google Sheets Add-on we built to help our Auctions Ops team transform the data given to us by our partners into a format that our CMS can understand. This process, done manually up until now, takes a long time and is a perfect candidate for automation.&lt;/p&gt;

&lt;p&gt;Apogee had some really interesting technical challenges that I enjoyed solving, and I&#39;m excited to share some lessons I learned. So let&#39;s dive in!&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;We built a prototype as a &quot;pure&quot; Add-on, written only inside Google&#39;s sandbox, but that approach wouldn&#39;t work for us in production: the Add-on environment was just too difficult to work with. Google expects you to write Add-ons in their in-browser &lt;a href=&quot;http://script.google.com&quot;&gt;Script Editor&lt;/a&gt; and – while whether or not that editor is &lt;em&gt;good&lt;/em&gt; is a matter of preference – the environment isn&#39;t suited for collaborating or unit testing. Additionally, we could not get Add-on deploys automated, so we&#39;d like to minimize how often we &lt;em&gt;have&lt;/em&gt; to deploy.&lt;/p&gt;

&lt;p&gt;So we split things up. Instead of building all Apogee&#39;s logic into an Add-on, we decided to build two pieces: a very thin Add-on and a Rails server with all the real logic.&lt;/p&gt;

&lt;p&gt;(Because Apogee necessarily includes information about how our partners format their data, we decided not to open source it. Data formats are &lt;em&gt;probably&lt;/em&gt; not sensitive, but that&#39;s a judgement best left up to our partners.)&lt;/p&gt;

&lt;a name=&quot;Apogee.Add-on&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Apogee Add-on&lt;/h2&gt;

&lt;p&gt;The Add-on we built is very simple, by design. Our goal was to make an Add-on that was flexible enough such that we would need to deploy it less frequently than adding new parsers.&lt;/p&gt;

&lt;p&gt;Add-on responsibilities include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;fetching the available parsers from the server.&lt;/li&gt;
&lt;li&gt;setting up an Add-on user interface (a menu of partners, each with available parsers).&lt;/li&gt;
&lt;li&gt;responding to invocations from that interface.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Based on the parser selected by the user, Apogee gathers the required data from the current spreadsheet, sends it to the server for processing, and appends the results to the sheet. Pretty straightforward, you&#39;d think.&lt;/p&gt;

&lt;p&gt;Unfortunately, Google Add-ons are a bit... strange. The Add-on itself is executed in Google&#39;s datacentres (not the user&#39;s browser) and is written in &lt;a href=&quot;https://developers.google.com/apps-script/guides/services/#basic_javascript_features&quot;&gt;JavaScript 1.6-ish&lt;/a&gt;. Specifically, it runs with JavaScript 1.6, plus some features from 1.7, plus some other features from 1.8, and also &lt;a href=&quot;https://developers.google.com/apps-script/guides/services/advanced&quot;&gt;&quot;Google Advanced Services&quot;&lt;/a&gt;. The execution environment also lacks an event loop, which makes sense from Google&#39;s perspective (their servers need to know if a script execution has completed) but is still a bit unusual.&lt;/p&gt;

&lt;p&gt;Rather than deal with a weird version of JavaScript, we decided to write the Add-on in &lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; and compile down to something Google can execute. We also found &lt;a href=&quot;https://www.npmjs.com/package/@types/google-apps-script&quot;&gt;open source typings&lt;/a&gt; for the Google APIs, which helped a lot. Google also provides access to certain whitelisted libraries, including &lt;a href=&quot;https://lodash.com&quot;&gt;Lodash&lt;/a&gt;, which is handy.&lt;/p&gt;

&lt;p&gt;Add-ons also have a somewhat complex permissions and authentication model. The &lt;a href=&quot;https://developers.google.com/apps-script/add-ons/lifecycle&quot;&gt;documentation&lt;/a&gt; provided is a great illustration of why &lt;em&gt;complete&lt;/em&gt; documentation is not necessarily &lt;em&gt;effective&lt;/em&gt; documentation. If you already understand what you&#39;re doing, the docs are a good reference, but I found them difficult to learn from. I really like &lt;a href=&quot;https://twitter.com/kosamari/status/852319140060823553&quot;&gt;this explanation&lt;/a&gt; of how to structure documentation like unit tests.&lt;/p&gt;

&lt;p&gt;Permissions vary wildly depending on the execution context. For example, the &lt;code&gt;onOpen&lt;/code&gt; callback is able to make network requests when the script is run as an attachment to a spreadsheet, but not when deployed. This makes it difficult to populate our menu UI, which is based off an API response. I learned to not have confidence everything was working until I saw it work end-to-end.&lt;/p&gt;

&lt;p&gt;One other peculiarity of Google&#39;s API is how UI callbacks work. You could create a menu for your Add-on with the following code:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;SpreadsheetApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getUi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createAddonMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Do something&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;doSomething&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addToUi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;You&#39;ll notice that the callback function is specified by a &lt;em&gt;string&lt;/em&gt; representing a function name (and not as a function itself, which would be more idiomatic). So, for every menu item, there must exist a corresponding function in the global scope with a corresponding name. Sadly, no parameters are passed to these callbacks, so it&#39;s impossible for a function to determine which menu item it was invoked by. Therefore, every menu item &lt;em&gt;must&lt;/em&gt; have exactly &lt;em&gt;one&lt;/em&gt; corresponding function. That presents a problem for an Add-on with a dynamic menu.&lt;/p&gt;

&lt;p&gt;The Add-on isn&#39;t executed in a browser; we&#39;re running on Google&#39;s datacentres so let&#39;s just brute-force this. Our menu is a list of partner names, which is itself a submenu of parsers specific to that partner. That means that each menu item (and corresponding callback) can be indexed by two integers: a partner index and a operation index. So now we have a way to map from our user interface to a specific operation to perform inside &lt;em&gt;one&lt;/em&gt; common menu handler.&lt;/p&gt;

&lt;p&gt;Let&#39;s take a look at the actual code.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ts&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Operation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;columns&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;token&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Partner&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;operations&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// Sets up the Add-on menu and submenus.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setupAddon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ui&lt;/span&gt;: &lt;span class=&quot;kt&quot;&gt;Partner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;// Reduce the ui to a list of submenus.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addOnMenu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ui&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;partner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;partnerIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// Reduce the operations list to a list of menu items.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;menu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addSubMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;partner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;memo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;operationIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;memo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;partner$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;partnerIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Operation$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;operationIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SpreadsheetApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getUi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;partner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SpreadsheetApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getUi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createAddonMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;// Add the generated menu to the Add-on UI.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;addOnMenu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addToUi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Each menu has a callback function named something like &lt;code&gt;partnerXOperationY&lt;/code&gt;. Then we just generated a few thousand functions that match that format and call a shared handler &lt;em&gt;with&lt;/em&gt; &lt;code&gt;X&lt;/code&gt; and &lt;code&gt;Y&lt;/code&gt; as parameters. The generated code looks like this:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;partner0Operation0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;sharedHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;partner0Operation1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;sharedHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;partner0Operation2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;sharedHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sharedHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;partnerIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;operationIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// TODO: Look up the appropriate parser to use.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;It&#39;s not elegant, but it works. Actually, I think it does have a certain elegance, given the constraints it has to operate within.&lt;/p&gt;

&lt;p&gt;So that&#39;s it! The rest of the challenges were just weird permissions issues or config problems, but the Add-on was pretty easy to build. The file generated by the TypeScript compiler is only 166 lines long, and the file with all our menu callbacks is &quot;only&quot; 8000 lines long. Next, let&#39;s talk about the server.&lt;/p&gt;

&lt;a name=&quot;Apogee.Server&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Apogee Server&lt;/h2&gt;

&lt;p&gt;So, Rails&#39; philosophy is &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Convention_over_configuration&quot;&gt;convention over configuration&lt;/a&gt;&quot;, which is pretty great as long as you know the conventions. I&#39;d never run &lt;code&gt;rails new&lt;/code&gt; before. Also, that philosophy works best when you&#39;re building &lt;em&gt;conventional&lt;/em&gt; apps. Because Apogee is a bit unconventional, I was going to write Apogee in Sinatra before my colleague suggested I use Rails in &lt;a href=&quot;http://guides.rubyonrails.org/api_app.html&quot;&gt;API-only mode&lt;/a&gt; instead. It seemed a bit overkill, but I also didn&#39;t want to pass up the chance to finally learn Rails.&lt;/p&gt;

&lt;p&gt;The server has two endpoints:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/ui&lt;/code&gt; provides a list of partners and their respective parsers.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/columns&lt;/code&gt; accepts spreadsheet columns and returns processed data (cell contents and a background colour to indicate our confidence in parsed results).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We needed a way for the server to specify all its operations in a way that they could be invoked through the second endpoint. We decided to use a token-based approach: each parser has a token that can be used to invoke the parser later on. This dovetails with how I structured the parsers, too.&lt;/p&gt;

&lt;p&gt;Each partner is defined by a submodule within the &lt;code&gt;Apogee::Parser&lt;/code&gt; module, and each parser is defined by a class within that partner module. Let&#39;s take a look at some code.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;rb&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Apogee&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Parser&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Skinner&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;kp&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Apogee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BaseParser&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DimensionsParser&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;# Name to show in Add-on UI.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;menu_name&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;s2&quot;&gt;&amp;quot;Parse dimensions from Description column&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;# Columns required by the `/columns` endpoint.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;column_names&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;sx&quot;&gt;%w[Description]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;# Parse the columns, called from the `/columns` endpoint.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;c1&quot;&gt;# TODO: parse the columns.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Each class within a partner is expected to have those three class methods.&lt;/p&gt;

&lt;p&gt;So now that we have a defined structure for our parsers, we can use Ruby reflection to collect a list of partner modules:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;rb&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;no&quot;&gt;Parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;constants&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;const_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_a?&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Module&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;ss&quot;&gt;operations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;const_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;public_parsers&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Each module also has a &lt;code&gt;public_parsers&lt;/code&gt; function (inherited from &lt;code&gt;Apogee::BaseParser&lt;/code&gt;) which also uses reflection:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;rb&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;public_parsers&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nb&quot;&gt;constants&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;const_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_a?&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;const_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;ss&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;menu_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;ss&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;column_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;ss&quot;&gt;token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Digest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SHA256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base64digest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;This code collects all the Ruby classes inside a module into a data structure that can be consumed by the Apogee Add-on through the &lt;code&gt;/ui&lt;/code&gt; endpoint. As a bonus, the tokens are generated from the SHA256 hash of the fully-qualified parser class names. And we also avoid having to maintain a separate list of parsers that I would inevitably forget to update. Win-win.&lt;/p&gt;

&lt;p&gt;All that&#39;s left to do is to lookup a parser class from a token. This is as easy as finding the class with the matching token and calling its &lt;code&gt;parse&lt;/code&gt; function.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;rb&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partners&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:operations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatten&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;op&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;op&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:token&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;token&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;no&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;const_get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:klass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Neat!&lt;/p&gt;

&lt;p&gt;This approach is &lt;em&gt;good&lt;/em&gt;, but strikes me as overly object-oriented. &lt;em&gt;Most&lt;/em&gt; of the parsers we&#39;re going to write are going to do the same thing: they have the same three methods and the &lt;code&gt;parse&lt;/code&gt; method is basically just matching each spreadsheet cell against a regular expression. We can make a better abstraction.&lt;/p&gt;

&lt;p&gt;Since the parsers are defined by the presence of a class within a partner module, we can use metaprogramming to abstract away all the common pieces and add classes to the module programmatically. The implementation is too in-depth to explain in detail here, but our partner module above could be rewritten to look like the following:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;rb&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Apogee&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Parser&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Skinner&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;kp&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Apogee&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BaseParser&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;add_single_column_parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;ss&quot;&gt;class_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;DimensionsParser&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;ss&quot;&gt;menu_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Parse dimensions from Description column&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;ss&quot;&gt;column_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;ss&quot;&gt;regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;%r{REGEX GOES HERE}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;ss&quot;&gt;new_columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w[Height Width Depth Unit]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;# TODO: Process each cell.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;I created two such methods: one that uses a single regex, and another that uses multiple regexes (for more complex needs). I also wrote a handy &lt;code&gt;add_all_parser&lt;/code&gt; method which adds a sort of meta-parser, which collates the results from calling &lt;code&gt;parse&lt;/code&gt; on all the &lt;em&gt;other&lt;/em&gt; parsers in that module. Our Ops team just needs to click &quot;Parse everything&quot; and the entire spreadsheet is processed with all the parsers in seconds.&lt;/p&gt;

&lt;p&gt;And of course, since all our parsers are just Ruby classes, they were easy to unit test.&lt;/p&gt;

&lt;p&gt;I&#39;ve done metaprogramming in other languages, and it was a lot of fun to use it in Ruby. I ran the code by my colleagues who are more experienced in Ruby than I am, and documented everything thoroughly. It&#39;s a real shame the codebase isn&#39;t open source, because I&#39;m really proud of the approach and would love to share it with you.&lt;/p&gt;

&lt;a name=&quot;Apogee.Authentication&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Apogee Authentication&lt;/h2&gt;

&lt;p&gt;We needed to make sure that only the Add-on itself was invoking the server&#39;s endpoints. Not because the server has sensitive data – Apogee&#39;s server has no database and doesn&#39;t access any APIs – but just because it&#39;s good practice to limit access to services to only who needs them.&lt;/p&gt;

&lt;p&gt;We evaluated a bunch of prospective auth strategies, including (but not limited to) the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Whitelist Google datacentre IP addresses, block all others.&lt;/li&gt;
&lt;li&gt;HTTP Basic Auth.&lt;/li&gt;
&lt;li&gt;Shared secret.&lt;/li&gt;
&lt;li&gt;OAuth with Artsy&#39;s API, by the user upon Add-on installation.&lt;/li&gt;
&lt;li&gt;Something totally custom, or a combination of any of these.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;After thoughtful discussion, we decided on a solution that works for us. I&#39;m not going to specify what we used – not because I&#39;m that concerned about the security, but because each project and team will have their own needs. If you build a server, think carefully about what kind of authentication makes sense for you and your team.&lt;/p&gt;

&lt;a name=&quot;Conclusion&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Apogee was a really fun project. It had a defined scope, so it was a good first Rails project for me to tackle. The Add-on helps my colleagues on the Auctions Ops team do their jobs easier, so it was intrinsically rewarding to build. And it turns out that our Gallery Partnerships team also has to import a lot of partner data into Artsy&#39;s CMS, so I&#39;m now exploring ways Apogee can help them, too.&lt;/p&gt;

&lt;p&gt;As a closing note, I want to discuss something that&#39;s been on my mind lately. I&#39;ve been developing iOS apps &lt;a href=&quot;https://ashfurrow.com/blog/5-years-of-ios/&quot;&gt;since 2009&lt;/a&gt;, and have a &lt;a href=&quot;https://ashfurrow.com/books/&quot;&gt;very intimate knowledge&lt;/a&gt; of Objective-C, Swift, and UIKit. For a long time, I actually avoided learning new languages and frameworks because they intimidated me – starting over in a new framework, from scratch, felt like a step backward.&lt;/p&gt;

&lt;p&gt;I think this is a common frame of mind, among iOS developers, among all developers. But now I regret avoiding new technology for so long. The languages and tools that I knew had become part of my identity: I was an &quot;iOS Developer.&quot; That identity was a source of strength, but was also a limitation.&lt;/p&gt;

&lt;p&gt;Developers solve problems. Sometimes those problems are best solved with iOS apps. And sometimes, they&#39;re best solved with spreadsheet plugins. After &lt;a href=&quot;https://ashfurrow.com/blog/swift-vs-react-native-feels/&quot;&gt;realizing&lt;/a&gt; last year that I was limiting myself, I&#39;m still coming to terms with how that impacts my identity. But I&#39;ll say this: if &lt;em&gt;I&lt;/em&gt; can leave the safety blanket of the iOS world and build something completely new, so can you. Don&#39;t let your expertise and experience limit what you think you can build.&lt;/p&gt;
</description>
        <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/02/06/apogee-technical-retrospective/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/02/06/apogee-technical-retrospective/</guid>
        
        
        <category>rails</category>
        
        <category>ruby</category>
        
        <category>typescript</category>
        
      </item>
    
      <item>
        <title>Apogee: Doing More with Less</title>
        <description>&lt;blockquote&gt;&lt;p&gt;Apogee: the point in the orbit of two objects at which they are furthest apart.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In 2017, the Artsy Auctions Operations team coordinated and ran 190+ sales on our platform. This year, our ambitions are set even higher. But scaling up the number of sales we run will require scaling up our tools and processes, too. This post describes Apogee, a tool I built to help us scale our businesses processes. I never thought I would be so excited to build a spreadsheet plugin, but I honestly had a blast. So let&#39;s dive in!&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Running a sale on Artsy is no small feat. I mean, after all the contract negotiations you might think things get easier, but that&#39;s just the beginning of the work. All our auction partners have data in their own CMS systems, and they&#39;re all formatted slightly differently. We need to get the information for each lot in a sale into Artsy&#39;s CMS, and so a few years ago we built a batch-import app in Rails to do this (closed source, sorry). It works well, but expects data in a specific format.&lt;/p&gt;

&lt;p&gt;A lot of work is done by our Ops team to reformat spreadsheets they get from our partners to match the structure our batch import tool expects. All of our partners have different formats, and sales can include hundreds of lots. The reformatting process can take one person over a day, for large sales.&lt;/p&gt;

&lt;p&gt;Wouldn&#39;t it be cool to build some kind of server to bridge the gulf between Artsy&#39;s database and our partner&#39;s myriad systems?&lt;/p&gt;

&lt;p&gt;No, actually, it wouldn&#39;t. It would be a tremendous amount of work, from our side and from theirs. Back to the drawing board.&lt;/p&gt;

&lt;p&gt;In January, Ops arranged a meeting between us engineers and an auction partner. Ideally, a solution to &lt;em&gt;our&lt;/em&gt; problem would also make our partners&#39; lives easier, since exporting data from their systems is sometimes as arduous as importing it into ours. &lt;a href=&quot;https://www.skinnerinc.com&quot;&gt;Skinner&lt;/a&gt; was kind enough to walk us through their export process and provide us with some representative data.&lt;/p&gt;

&lt;p&gt;Perfect, now we have a starting point.&lt;/p&gt;

&lt;hr /&gt;

&lt;blockquote&gt;&lt;p&gt;If you&#39;re not familiar the 80/20 rule says, ‘Do a job until it&#39;s 80% done and then quit’.
—&lt;a href=&quot;https://www.youtube.com/watch?v=MSgR-hJjdTo#t=2m36s&quot;&gt;@searls&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The team&#39;s early brainstorming to the Ops import workflow was hampered by a kind of perfectionism. We evaluated, but decided against solutions because they didn&#39;t address all the edge cases. It finally clicked, for me anyway, when I realized that our tool didn&#39;t need to bridge the gulf between two &lt;em&gt;systems&lt;/em&gt;, but between two &lt;em&gt;workflows&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;And it didn&#39;t need to be perfect, not at all. Even an 80% reduction in the amount of time spent wrangling spreadsheet data would translate to &lt;em&gt;hours&lt;/em&gt; of time saved, per sale. That is, if we could find a way to make it ridiculously easy to add parsers for new partners.&lt;/p&gt;

&lt;p&gt;We built a quick prototype – less than two days work – to pull out data from Skinner&#39;s spreadsheets and format it into the structure that&#39;s easiest to import into Artsy. The prototype itself was a &lt;a href=&quot;https://developers.google.com/apps-script/add-ons/&quot;&gt;Google Sheets Add-on&lt;/a&gt;. There will be a follow-up post describing the technical evolution of this tool, but the important thing to note here is that we engineers had to go to where our Ops team already was. Previous discussions around improving Ops&#39; import workflows were centred around building entirely new workflows instead of improving the existing, functional workflows.&lt;/p&gt;

&lt;p&gt;The prototype was tested in production with two large sales Skinner and Artsy were running together. Parsing out &lt;em&gt;just&lt;/em&gt; the dimensions of the lots, for &lt;em&gt;just&lt;/em&gt; one of the sales, saved an hour of Ops&#39; time. Clearly, there was promise in this tool.&lt;/p&gt;

&lt;p&gt;Next steps were all technical, and we&#39;ll get into details in the next post, but building Apogee actually involved developing two pieces of technology: a Rails server, and an Add-on client. Because a tool to parse data from various partners necessarily contains those partners&#39; data formats, we decided not to open source Apogee. That&#39;s okay – we practice &lt;a href=&quot;https://ashfurrow.com/blog/open-source-ideology/&quot;&gt;open source &lt;em&gt;by default&lt;/em&gt;&lt;/a&gt;, not &lt;em&gt;by demand&lt;/em&gt;.&lt;/p&gt;

&lt;a name=&quot;Apogee.Server&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Apogee Server&lt;/h2&gt;

&lt;p&gt;It&#39;s difficult to discuss the server without first talking about the Add-on, so in short: Add-ons are difficult to maintain, to collaborate on, to unit test, and so on. So we decided early to build a very thin Add-on client and move all the heavy lifting to a backend server that we could develop within our existing technical framework. Our goal was to build an Add-on that needed to be updated less frequently than support for new partners was added.&lt;/p&gt;

&lt;p&gt;We needed a server. Most of this server&#39;s job was going to be running regular expressions, and Ruby&#39;s regex features are still a step above Node&#39;s. It&#39;s critical that writing new parsers be &lt;em&gt;ridiculously&lt;/em&gt; easy to write (and test!). That factored in a lot of technical decisions, which we&#39;ll discuss in more detail in the next Apogee post.&lt;/p&gt;

&lt;p&gt;So it&#39;s a Ruby server, but which framework?&lt;/p&gt;

&lt;p&gt;I thought about using Sinatra, since our server is very simple and Sinatra is a tech I&#39;ve &lt;a href=&quot;https://github.com/Moya/Aeryn&quot;&gt;used before&lt;/a&gt;, but after speaking with some colleagues, I decided on using Rails in API-only mode. Sticking to Rails would keep the project in-step with the rest of Artsy&#39;s Ruby server code – we don&#39;t have any Sinatra apps, but everyone here already knows Rails. Plus, Rails is &lt;em&gt;very&lt;/em&gt; boring and – consequently – &lt;em&gt;very&lt;/em&gt; stable. I like stability.&lt;/p&gt;

&lt;p&gt;Before a few weeks ago, I&#39;d never even run &lt;code&gt;rails new&lt;/code&gt;. Now, I&#39;m the proud point-person for an entire Rails server. I owe a lot to my colleagues for helping me along the way.&lt;/p&gt;

&lt;a name=&quot;Apogee.Add-on&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Apogee Add-on&lt;/h2&gt;

&lt;p&gt;The Add-on is an interesting piece of code. In addition to the strange environment for building and deploying Add-ons, you also have to deal with a strange runtime. How strange? Well, it&#39;s JavaScript, but not as we know it.&lt;/p&gt;

&lt;p&gt;Google Docs Add-ons run as &lt;a href=&quot;https://script.google.com&quot;&gt;Google Scripts&lt;/a&gt;, which are a more general-purpose cloud computing platform. They &lt;a href=&quot;https://developers.google.com/apps-script/guides/services/#basic_javascript_features&quot;&gt;execute a runtime&lt;/a&gt; based on JavaScript 1.6, which specific features from JavaScripts 1.7 and 1.8 ported in. Similar to the &lt;a href=&quot;http://danger.systems/js/&quot;&gt;Danger-JS&lt;/a&gt; 1.x runtime, there is no event loop. So, things are weird.&lt;/p&gt;

&lt;p&gt;Just because we can&#39;t fully automate deploys doesn&#39;t mean we can&#39;t automate &lt;em&gt;parts&lt;/em&gt; of the process. Specifically, I built the Add-on using &lt;a href=&quot;https://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; which is compiled down to a version of JavaScript that Google Scripts plays nice with. There are even open-source &lt;a href=&quot;https://www.npmjs.com/package/@types/google-apps-script&quot;&gt;typings&lt;/a&gt; available for the Google Scripts API.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I learned a lot from building Apogee, from a technical perspective, but the lessons I&#39;m most proud of learning have to do more with business processes. From the general approach of making data imports faster, to the specific programming languages used to build Apogee, all decisions were driven first and foremost by actual business needs (and not technology trends). Apogee is not exciting enough to make the front page of Hacker News, and in a weird way, I&#39;m proud of that.&lt;/p&gt;

&lt;p&gt;Artsy Auctions are at an inflection point; we need to scale up the number of auctions we run faster than we scale up the effort spends actually running them. 2018 is going to challenge the Auctions engineering team to help our colleagues accomplish more, while doing less. I&#39;m excited for that challenge.&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/02/02/artsy-apogee/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/02/02/artsy-apogee/</guid>
        
        
        <category>rails</category>
        
      </item>
    
      <item>
        <title>In the &#39;Whelp!&#39; of the Great Wave</title>
        <description>&lt;p&gt;This past week has found me working on a brand new Rails project. Now, if I was building this project for my personal needs, I would without a doubt deploy it to &lt;a href=&quot;https://www.heroku.com&quot;&gt;Heroku&lt;/a&gt; – for both the ease of use and the high level of abstraction that &lt;a href=&quot;https://www.heroku.com/dynos&quot;&gt;Dynos&lt;/a&gt; afford. But I&#39;m not building this for myself, I&#39;m building it for my team.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;While Heroku is easy to get started with, costs scale up quickly. And, as described in our &lt;a href=&quot;http://artsy.github.io/blog/2017/04/14/artsy-technology-stack-2017/&quot;&gt;2017 tech stack post&lt;/a&gt;, our team is moving more and more towards &lt;a href=&quot;https://kubernetes.io&quot;&gt;Kubernetes&lt;/a&gt;. I had almost no experience with Kubernetes before last week, and I was intimidated by the Kubernetes web UI. With some help from my colleague Isac, who wrote the &lt;a href=&quot;https://github.com/artsy/hokusai&quot;&gt;Hokusai&lt;/a&gt; tool, I was able to get a staging environment up and running in under a day.&lt;/p&gt;

&lt;p&gt;But let&#39;s step back first.&lt;/p&gt;

&lt;p&gt;My background is in iOS software development, so spinning up new servers isn&#39;t something I do often. When I &lt;em&gt;do&lt;/em&gt;, I usually use Heroku. After deploying to it, it feels like Kubernetes is a kind of hosted Heroku: it handles scaling up instances, managing worker/db/other instances, load-balancers, environment variables, promoting from staging to production – all that stuff. But Kubernetes&#39; sophistication comes with a sophisticated user interface.&lt;/p&gt;

&lt;p&gt;So basically, Hokusai is to Kubernetes what the Heroku command-line tool is to the Heroku platform.&lt;/p&gt;

&lt;p&gt;Hokusai provides &lt;a href=&quot;https://github.com/artsy/hokusai/blob/master/docs/Command_Reference.md&quot;&gt;a bunch of commands&lt;/a&gt; for interacting with the Kubernetes cluster. Deploying my new Rails app to Kubernetes involved a few steps, but most of the work was handled automatically by Hokusai.&lt;/p&gt;

&lt;p&gt;First, I installed and setup Hokusai locally (with required environment variables for AWS access). I then ran the following command to scaffold out everything.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;hokusai setup --aws-account-id ARTSY_ACCOUNT_ID --project-type ruby-rails
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;In addition to staging- and production-specific config files, this command creates a &lt;code&gt;Dockerfile&lt;/code&gt;. See, where Heroku uses Dynos as a high level of abstraction, Kubernetes uses &lt;a href=&quot;https://www.docker.com&quot;&gt;Docker&lt;/a&gt; images (as a slightly less high a level of abstraction). Docker is a technology I&#39;m familiar with, and I managed to configure the generated &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;hokusai/*.yml&lt;/code&gt; config files pretty quickly. At this point, I could run &lt;code&gt;hokusai dev start&lt;/code&gt; to start a development Docker container, or &lt;code&gt;hokusai test&lt;/code&gt; to run RSpec tests. Nothing fancy yet, but that verifies that everything is working so far.&lt;/p&gt;

&lt;p&gt;Next up was to use Hokusai in our CI environment. &lt;a href=&quot;https://circleci.com/docs/2.0/&quot;&gt;Circle CI 2.0&lt;/a&gt; is very Docker-oriented, so we set up everything using their &lt;a href=&quot;https://circleci.com/docs/2.0/workflows/&quot;&gt;Workflows&lt;/a&gt;. This is a much higher level of abstraction for CI configuration than I&#39;m used to, but I got the hang of it quickly. I created a job to run RSpec tests through Hokusai, a job to run &lt;a href=&quot;http://danger.systems&quot;&gt;Danger&lt;/a&gt;, a job to build and push a Docker image to our S3 bucket, and a job to deploy that image to the Kubernetes cluster. Finally, I added the workflows to build and deploy automatically after successful builds on the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;Here&#39;s a slightly redacted copy of our Circle config:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;37&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;38&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;39&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;40&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;41&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;42&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;43&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;44&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;45&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;46&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;47&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;48&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;49&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;50&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;51&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;52&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;53&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;54&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;55&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;56&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;57&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;58&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;59&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;60&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;61&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;62&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;63&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;64&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;65&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;66&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;67&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;68&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;69&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;70&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;71&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;72&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;73&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;74&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;75&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;76&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;yaml&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;artsy/hokusai:0.4.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;working_directory&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/REPO_NAME&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;add_ssh_keys&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;checkout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;setup_remote_docker&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hokusai test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;danger&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;circleci/ruby:2.5.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;working_directory&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/apogee&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;checkout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;restore_cache&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;v1-dependencies-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;v1-dependencies-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Install Dependencies&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;bundle install --with=ci --without development test --path vendor/bundle&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;save_cache&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;./vendor/bundle&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;v1-dependencies-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Danger&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;bundle exec danger&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;artsy/hokusai:0.4.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;add_ssh_keys&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;checkout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;setup_remote_docker&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Push&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hokusai registry push --tag $CIRCLE_SHA1 --force --overwrite&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;artsy/hokusai:0.4.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;add_ssh_keys&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;checkout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Configure&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hokusai configure --kubectl-version 1.6.3 --s3-bucket BUCKET_NAME --s3-key k8s/config --platform linux&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Deploy&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hokusai staging deploy $CIRCLE_SHA1&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;workflows&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;danger&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;l-Scalar-Plain&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;              &lt;span class=&quot;l-Scalar-Plain&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;l-Scalar-Plain&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;              &lt;span class=&quot;l-Scalar-Plain&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;requires&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;l-Scalar-Plain&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;              &lt;span class=&quot;l-Scalar-Plain&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;requires&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;push&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;The initial build on &lt;code&gt;master&lt;/code&gt; built and pushed the server image, but the deploy failed. This is an &lt;a href=&quot;https://github.com/artsy/hokusai/issues/50&quot;&gt;issue&lt;/a&gt; that&#39;s being tracked in Hokusai – I&#39;m sure it&#39;ll get addressed on the road to a 1.0. To explain, it&#39;s a Catch-22: we can&#39;t deploy until we have an image, but we only want to build images on CI, so the first deploy on CI is expected to fail.&lt;/p&gt;

&lt;p&gt;Once the initial image was pushed, I ran &lt;code&gt;hokusai staging env create&lt;/code&gt; locally to create the staging environment. I was able to set staging environment variables using &lt;code&gt;hokusai staging env set NAME=VALUE&lt;/code&gt;, but unlike Heroku, I had to manually restart the server using &lt;code&gt;hokusai staging refresh&lt;/code&gt; after adding the environment variables.&lt;/p&gt;

&lt;p&gt;At this point, my server was working behind a load balancer, but I still had to add a CNAME record for the &lt;code&gt;really-long-url.elb.amazonaws.com&lt;/code&gt; domain name. After some DNS propagation, everything worked fine!&lt;/p&gt;

&lt;p&gt;So that&#39;s it! I was apprehensive about moving to a totally new (to me) deploy infrastructure. But, it&#39;s a direction our engineering team has decided to go in, and there&#39;s no better time to migrate to a new deploy infrastructure than before your first deploy. With some encouragement and help from my team, I was able to get the entire thing working in under a day (next time will be a lot faster).&lt;/p&gt;

&lt;p&gt;I&#39;m very encouraged by Kubernetes. It offers really slick, enterprise-level scaling features in an open source tool. And I&#39;ve heard really great things about its community practices. Kubernetes is, however, a very specialized tool and its web interface doesn&#39;t make any sense to me. With Hokusai, I got a very programmer-friendly interface for a very DevOps-focused tool.&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/01/24/kubernetes-and-hokusai/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/01/24/kubernetes-and-hokusai/</guid>
        
        
        <category>danger</category>
        
        <category>hokusai</category>
        
        <category>kubernetes</category>
        
        <category>open-source</category>
        
      </item>
    
      <item>
        <title>Upgrading Volt to CircleCI 2.0</title>
        <description>&lt;p&gt;I was really excited about CircleCI 2.0, especially the &lt;a href=&quot;https://circleci.com/docs/2.0/workflows/&quot;&gt;workflows
features&lt;/a&gt;. It seemed to me that with the work they had done here,
really complicated builds would be able to be configured in a way that made more
sense than on 1.0. This was something that was causing me grief on one of our
projects so I upgraded to 2.0. It was pretty hard to get green and once we did,
we decided to downgrade back to 1.0. Here&#39;s why.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Volt is the internal name for the app that our Partners use to enter information
about their artworks and artists into the Artsy platform. It&#39;s a Rails app and
has a pretty big and slow test suite. Over time, we&#39;ve ended up with a good
number of things that run during CI for this project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://danger.systems/&quot;&gt;Danger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rubocop.readthedocs.io/&quot;&gt;RuboCop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/jest/&quot;&gt;Jest tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jejacks0n/teaspoon&quot;&gt;Teaspoon tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rspec.info/&quot;&gt;RSpec tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some of these things are fast and some are slow. Ok, fine, really only the view
specs are slow - running them in isolation takes around 20 minutes on my laptop.&lt;/p&gt;

&lt;p&gt;My goal was to separate out the fast stuff, run that in parallel and only if all
that passed would I run the view specs. This should get feedback to developers
faster when they&#39;ve broken something and not waste time running the slowest part
of the CI stack.&lt;/p&gt;

&lt;p&gt;Artsy has 7 containers with CircleCI and Volt takes up 6 of them, so being able
to break apart a run into pieces seemed like a good thing for the wider Artsy
engineering organization too - developers working on something else would spend
less time blocked by Volt runs and developers working on Volt shouldn&#39;t notice
anything. Foreshadowing!!&lt;/p&gt;

&lt;p&gt;Here&#39;s the CircleCI 2.0 &lt;a href=&quot;https://gist.github.com/jonallured/45032779506138186973af7cb94b5363&quot;&gt;config&lt;/a&gt; I ended up with and here&#39;s a pretty picture
of what our CircleCI 2.0 builds looked like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/circle-two-oh/volt-circle-two-workflow.png&quot; alt=&quot;/images/circle-two-oh/volt-circle-two-workflow.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I&#39;m really proud of this - it&#39;s cool and it was hard to figure out!&lt;/p&gt;

&lt;p&gt;But then we lived with it and noticed something that really slowed us down. Each
rounded rect in that picture is called a job and is scheduled along with
anything else you have going on at CircleCI. Let&#39;s talk about parallelism for a
moment. Take that second column - those jobs all run in parallel, but you can
also set any of your jobs to have also be parallelised. For instance, that
&lt;code&gt;fast_spec&lt;/code&gt; job was &lt;a href=&quot;https://gist.github.com/jonallured/45032779506138186973af7cb94b5363#file-config-yml-L114&quot;&gt;set to a parallelism of 6&lt;/a&gt;. That means in order
to run all of the jobs in column two, we&#39;d have to have a total of 11
containers!&lt;/p&gt;

&lt;p&gt;While tinkering with this, I used all sorts of values for the parallelism of the
&lt;code&gt;fast_specs&lt;/code&gt; job, even trying no parallelism.&lt;/p&gt;

&lt;p&gt;It didn&#39;t seem to matter - having these jobs in a queue along with whatever
other projects consume the Artsy containers meant that once the build step was
done and the next column of jobs kicked off, only some of the jobs would be
able to run and we&#39;d be stuck waiting for more containers. But those are fast
jobs, so they would finish pretty quickly. But then again, moving on to the
&lt;code&gt;view_specs&lt;/code&gt; job would be slow because it also wanted 6 containers to run in
~10 minutes.&lt;/p&gt;

&lt;p&gt;What this meant was that all told it often took 45 minutes of wall time to
finish one of these builds even though as CircleCI reports it, they only took
like 15 minutes.&lt;/p&gt;

&lt;p&gt;We reached out to CircleCI to explain as best we could our situation but didn&#39;t
get a lot of help there. They advised that going back to 1.0 might be wise for
now. This is fine - we can&#39;t expect all of CircleCI&#39;s features are going to be
perfect for us and our particular projects.&lt;/p&gt;

&lt;p&gt;For now, we&#39;re back to CircleCI 1.0 and have tried to achieve a similar setup,
but without the glamorous workflow functionality and cool diagram. I&#39;m looking
forward to seeing how CircleCI evolves their workflow feature and hope that it
may end up in a place that can work for this project.&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/01/19/upgrading-volt-to-circleci-two/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/01/19/upgrading-volt-to-circleci-two/</guid>
        
        
        <category>ci</category>
        
      </item>
    
      <item>
        <title>C4Q&amp;A: 2</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.c4q.nyc&quot;&gt;C4Q is&lt;/a&gt; C4Q is a non-for-profit hacker school based in NYC. We&#39;ve had members of the Artsy team help out by being TAs, running committees and steering the curriculum as Engineers in the industry for many years. In 2017, C4Q reached out to arrange a meetup between Artsy engineers and students who were learning Android and Web development. This year we ran a panel for the other half of the C4Q students who study iOS and Web.&lt;/p&gt;

&lt;p&gt;We got an entirely new set of panelists to cover similar topics as &lt;a href=&quot;/blog/2017/10/10/C4Q-QandA/&quot;&gt;last time&lt;/a&gt; - so if you&#39;re wondering
what it&#39;s like in the industry, and what makes an Artsy engineer. The video is after the link.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;center&gt;
&lt;iframe width=&#39;100%&#39; height=&#39;600&#39; src=&#39;https://www.youtube.com/embed/pp0vNokDzaQ&#39; frameborder=&#39;0&#39; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;


&lt;p&gt;Our twitter links in sitting order: &lt;a href=&quot;https://twitter.com/realmrblock&quot;&gt;@realmrblock&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sweir27&quot;&gt;@sweir27&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/yuki24&quot;&gt;@yuki24&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/cychi1210&quot;&gt;@cychi1210&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/orta&quot;&gt;@orta&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/acjay1&quot;&gt;@acjay1&lt;/a&gt; let us know if you have any more questions.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/01/10/C4Q-QandA-two/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/01/10/C4Q-QandA-two/</guid>
        
        
        <category>culture</category>
        
        <category>event</category>
        
        <category>panel</category>
        
        <category>teaching</category>
        
      </item>
    
      <item>
        <title>Express Reloadable: Optimizing Express.js Development Speed</title>
        <description>&lt;p&gt;In &lt;a href=&quot;artsy.github.io/blog/2017/09/05/Modernizing-Force/&quot;&gt;Modernizing Force&lt;/a&gt; we discussed some of the tools we&#39;ve been working with to modernize &lt;a href=&quot;https://www.artsy.net/&quot;&gt;Artsy.net&lt;/a&gt;&#39;s development environment, from introducing Babel and React to the creation of &lt;a href=&quot;https://github.com/artsy/stitch&quot;&gt;@artsy/stitch&lt;/a&gt;. Increasing overall development speed was another aim, and to that end we released &lt;a href=&quot;https://github.com/artsy/express-reloadable&quot;&gt;@artsy/express-reloadable&lt;/a&gt; which automatically hot-swaps Express.js code without the restart. In this post I&#39;d like to cover some of the issues we&#39;ve faced since then, and in particular our solution to library code-sharing in Express apps.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;It&#39;s common to share NPM packages across projects, and oftentimes packages are developed in parallel. Package &lt;code&gt;A&lt;/code&gt; depends on &lt;code&gt;B&lt;/code&gt;, but &lt;code&gt;B&lt;/code&gt; has a bug and you don&#39;t want to have to republish (and reinstall) the package in order to see changes made locally. &lt;code&gt;yarn link&lt;/code&gt; (or &lt;code&gt;npm link&lt;/code&gt;) was developed for instances like this and while it works great for stop and start processes where boot time is quick, it falls short if the development environment takes a while to load. In UI-rich environments like &lt;a href=&quot;https://github.com/artsy/positron&quot;&gt;Positron&lt;/a&gt; (our Publishing CMS called &quot;Writer&quot;) and &lt;a href=&quot;https://github.com/artsy/force&quot;&gt;Force&lt;/a&gt;, each boot would come at a high time-cost due to upfront compilation of assets. Tools like &lt;a href=&quot;https://github.com/remy/nodemon&quot;&gt;nodemon&lt;/a&gt; would automatically stop and start our server process when assets changed but that still didn&#39;t alleviate slow iteration times.&lt;/p&gt;

&lt;p&gt;To recap from a &lt;a href=&quot;/blog/2017/09/05/Modernizing-Force#iteration-time&quot;&gt;previous post&lt;/a&gt;, &lt;a href=&quot;https://github.com/artsy/express-reloadable&quot;&gt;@artsy/express-reloadable&lt;/a&gt; allows devs to immediately see changes to running Express.js app code:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createReloadable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isDevelopment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@artsy/express-reloadable&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDevelopment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mountAndReload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createReloadable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;mountAndReload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./api&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Changes made within the &lt;code&gt;api&lt;/code&gt; folder are detected and instantly hot-swapped in, and all that&#39;s required is a new http request; this is down from an average dev cycle of about 40 seconds for Artsy.net. However, we found an exception while building out Artsy&#39;s new &lt;a href=&quot;https://www.artsy.net/article/artsy-editorial-midwest-made-artists-mike-kelley-jim-shaw&quot;&gt;editorial pages&lt;/a&gt;, which involved sharing React components from our UI library &lt;a href=&quot;https://github.com/artsy/reaction&quot;&gt;Reaction&lt;/a&gt; &lt;a href=&quot;https://github.com/artsy/positron/blob/master/client/apps/edit/components/content/section_tool/index.jsx#L11&quot;&gt;between Positron&lt;/a&gt; &lt;a href=&quot;https://github.com/artsy/force/blob/master/desktop/apps/article/components/InfiniteScrollArticle.js#L9&quot;&gt;and Force&lt;/a&gt;. Even though we ran &lt;code&gt;yarn link @artsy/reaction&lt;/code&gt; in each consumer app, changes would not be detected and so we had to do a full restart.&lt;/p&gt;

&lt;p&gt;To address this, a new &lt;code&gt;watchModules&lt;/code&gt; feature &lt;a href=&quot;https://github.com/artsy/express-reloadable/pull/3&quot;&gt;was added&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;mountAndReload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./api&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;watchModules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;@artsy/reaction&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Similar to how files in &lt;code&gt;api/&lt;/code&gt; are hot-swapped in on change, symlinked NPM modules placed in the &lt;code&gt;watchModules&lt;/code&gt; array will now be reloaded, too.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/express-reloadable&quot;&gt;@artsy/express-reloadable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/positron&quot;&gt;Positron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/reaction&quot;&gt;Reaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/force&quot;&gt;Force&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 05 Dec 2017 14:18:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/12/05/Express-Reloadable-Update/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/12/05/Express-Reloadable-Update/</guid>
        
        
        <category>dx</category>
        
        <category>express</category>
        
        <category>express-reloadable</category>
        
        <category>node</category>
        
      </item>
    
  </channel>
</rss>
