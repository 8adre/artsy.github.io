<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artsy Engineering</title>
    <description></description>
    <link>http://artsy.net/</link>
    <atom:link href="http://artsy.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 24 Aug 2015 22:40:52 +0000</pubDate>
    <lastBuildDate>Mon, 24 Aug 2015 22:40:52 +0000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Cocoa Architecture: Hybrid Apps</title>
        <description>&lt;p&gt;As a part of going through the design patterns we&#39;ve found in the creation of the Artsy iOS apps, I&#39;d like to talk a bit about &lt;em&gt;Hybrid Applications&lt;/em&gt;. A hybrid application refers to an app that uses native code and web content intertwined. Our flagship iOS app, &lt;a href=&quot;https://github.com/artsy/eigen&quot;&gt;eigen&lt;/a&gt; is a hybrid app, and it seems to get more and more hybrid-y each release. Let&#39;s talk a little bit about the pros and cons of this approach.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;hr /&gt;

&lt;h1&gt;What is a Hybrid App&lt;/h1&gt;

&lt;p&gt;Above is the widest possible definition above, so let&#39;s dig in as this can be a contentious. There is a whole spectrum of which an app can be classed as a hybrid app. This ranges from more or less web-tech everywhere to 100% native code like Objective-C / Swift.&lt;/p&gt;

&lt;p&gt;A great example of the furthest to the web-side is &lt;a href=&quot;https://atom.io&quot;&gt;ATOM&lt;/a&gt;, the text editor. It&#39;s on the extreme side because all of the user interface is built using HTML + CSS, and almost all of the app is in javascript. The trade-off for them is that their developers can easy write cross-platform code, that will work reliably with technology that the vast majority of programmers use. This vastly reduces the barrier to entry for contributors and gives ATOM a really large community of programmers to draw from with respect to extending the app.&lt;/p&gt;

&lt;p&gt;An example of a purely native application would be &lt;a href=&quot;https://github.com/artsy/energy/&quot;&gt;Energy&lt;/a&gt;. It&#39;s over a hundred thousand plus lines of Objective-C. Yet under the hood, there&#39;s definitely some web-tech there. Prior to iOS7 &lt;code&gt;UILabel&lt;/code&gt;s, &lt;code&gt;UITextField&lt;/code&gt;s and &lt;code&gt;UITextField&lt;/code&gt;s &lt;a href=&quot;http://www.objc.io/issues/5-ios7/getting-to-know-textkit/&quot;&gt;used WebKit for rendering&lt;/a&gt;. Not to mention that when a Partner sends an email via Energy, the editor is a &lt;code&gt;UIWebView&lt;/code&gt;. However, from the app developer&#39;s perspective they are creating native interactions that are consistent with the rest of the operating system&#39;s behavior.&lt;/p&gt;

&lt;h1&gt;Eigen&lt;/h1&gt;

&lt;p&gt;When we started building Eigen, it was very obvious that we had a Sisyphean task ahead of us. We wanted to take the core ideas of the Artsy website,  &lt;em&gt;The Art World Online&lt;/em&gt;, and convert it into mobile, &lt;em&gt;The Art World in Your Pocket&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;That&#39;s not impossible, but the mobile team was a fraction of the Artsy development team. Any new features added to the website would need a mobile equivalent, and given the speed in which web developer&#39;s can ship, we&#39;d need to outnumber them to stand a chance at keeping up.&lt;/p&gt;

&lt;p&gt;So, we opted for building a highly integrated mobile website at the same time, it would use the same design language as the iOS app and can act as a way for Android devices to access Artsy.&lt;/p&gt;

&lt;h1&gt;Techniques for Doing It Well&lt;/h1&gt;

&lt;p&gt;So we&#39;ll be talking about our &lt;a href=&quot;https://github.com/artsy/eigen/blob/6bb44a01c1b23fb8e92c645c3091fd33725743c3/Artsy/View_Controllers/Web_Browsing/ARInternalMobileWebViewController.m&quot;&gt;ARInteralMobileViewController&lt;/a&gt; - which currently relies on &lt;code&gt;UIWebView&lt;/code&gt; but is in &lt;a href=&quot;https://github.com/artsy/eigen/pull/606&quot;&gt;the process of&lt;/a&gt; migrating to &lt;code&gt;WKWebkit&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Scroll like an &lt;a href=&quot;https://github.com/artsy/eigen/blob/6bb44a01c1b23fb8e92c645c3091fd33725743c3/Artsy/View_Controllers/Web_Browsing/ARExternalWebBrowserViewController.m#L39&quot;&gt;iOS app&lt;/a&gt; by setting the web view&#39;s &lt;code&gt;scrollView.decelerationRate = UIScrollViewDecelerationRateNormal&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use a simple design language to avoid the &lt;a href=&quot;http://tvtropes.org/pmwiki/pmwiki.php/Main/UncannyValley&quot;&gt;uncanny valley&lt;/a&gt;. Care about using the same &lt;a href=&quot;https://github.com/artsy/Artsy-UILabels&quot;&gt;typographical rules&lt;/a&gt; on everything including tabs, buttons and switches.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take over navigation. This means pushing a &lt;a href=&quot;https://github.com/artsy/eigen/blob/6bb44a01c1b23fb8e92c645c3091fd33725743c3/Artsy/View_Controllers/Web_Browsing/ARInternalMobileWebViewController.m#L180&quot;&gt;new view controller&lt;/a&gt; on the navigation stack every time a user intends to change context.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Take over common OS features. We take over &lt;a href=&quot;https://github.com/artsy/eigen/blob/master/Artsy/View_Controllers/Web_Browsing/ARInternalMobileWebViewController.m#L184-L190&quot;&gt;social sharing&lt;/a&gt;  instead of letting the web site send you to an external page, offering a native share sheet instead.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;Downsides&lt;/h1&gt;

&lt;p&gt;When you choose developer ease over user experience it&#39;s important to take into consideration some of the downsides.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Localisation is difficult. Cocoa offers a great localisation APIs. We can&#39;t use them, otherwise half of our app is correctly localised and the rest isn&#39;t.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Conforming to the operating system&#39;s Human Interface Guidelines is difficult, as you&#39;re relying less on foundations built with this in mind.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Web tech is slower, and threading APIs are generally poor. A difficulty here is that you are also complicating the technical stack upon which your app sits above. When relying on web-tech in a Mac app, it&#39;s common for that trade-off to show itself in excessive memory usage over time.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h1&gt;Evolution&lt;/h1&gt;

&lt;p&gt;One of the most interesting developments this year in the Cocoa world is Facebook&#39;s &lt;a href=&quot;https://cocoapods.org/pods/React&quot;&gt;react-native&lt;/a&gt;, a bridge between web technology and native code that doesn&#39;t rely on using the &lt;a href=&quot;http://www.quirksmode.org/dom/intro.html&quot;&gt;traditional DOM&lt;/a&gt; - freeing it from a lot of the common problems found in highly web-based apps.&lt;/p&gt;

&lt;p&gt;We&#39;re pretty optimistic about it on the mobile team. We&#39;re not quite willing to jump head-first into a &lt;a href=&quot;http://artsy.github.io/blog/2014/11/13/eidolon-retrospective/&quot;&gt;pre-1.0 technology&lt;/a&gt; again, but it shows a lot of promise.&lt;/p&gt;

&lt;p&gt;The fact that we were able to ship an app at all was because we could build the parts that meant the most to us native, then rely on web technologies to cover the rest of the ground. By being pragmatic in our approach to using web tech, we have the chance to stand on the shoulders of giants.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/08/24/Cocoa-Architecture:-Hybrid-Apps/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/08/24/Cocoa-Architecture:-Hybrid-Apps/</guid>
        
        
        <category>architecture</category>
        
        <category>eigen</category>
        
        <category>hybrid</category>
        
        <category>ios</category>
        
        <category>mobile</category>
        
      </item>
    
      <item>
        <title>Cocoa Architecture: ARSwitchboard</title>
        <description>&lt;p&gt;As a part of going through the design patterns we&#39;ve found in the creation of the Artsy iOS apps, I&#39;d like to introduce the Switchboard pattern. This evolved quite naturally out of &lt;a href=&quot;/blog/2015/08/15/Cocoa-Architecture:-Router-Pattern/&quot;&gt;ARRouter&lt;/a&gt; when applied to generating view controllers instead of API requests.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;hr /&gt;

&lt;h1&gt;Where we started&lt;/h1&gt;

&lt;p&gt;In what must be one of my best named commits, &lt;code&gt;b9ff28&lt;/code&gt; aka &lt;em&gt;&quot;CREATING THE VOID&quot;&lt;/em&gt; introduced an &lt;code&gt;ARSwitchboard&lt;/code&gt; to Eigen. Aside from this being the commit where I could finally write &lt;code&gt;[ARVoidViewController theVoid]&lt;/code&gt; it added support for tapping an Artwork on the home-screen and going to another view controller.&lt;/p&gt;

&lt;p&gt;We knew up-front that we needed to emulate the website&#39;s URL schemes, so we needed to come up with a way to support two ways of loading up a view controller. Here&#39;s what it looked like:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;37&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;38&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;39&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;40&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;41&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;42&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ARSwitchBoard&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setupRouter&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;artsyHosts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSSet&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;setWithObjects&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;art.sy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;artsyapi.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;artsy.net&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCRouter&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;/artwork/:id&amp;quot;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;@selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;loadArtworkFromURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:)];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;navigateToURL:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;isInternalURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCRouter&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;canRespondToRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCRouter&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;//        [self openInternalBrowser:url];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isInternalURL:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;hasPrefix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;www&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;substringFromIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artsyHosts&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;containsObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#pragma mark -&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#pragma mark Artworks&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadAttachmentCollection:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AttachmentCollection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;collection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ARVoidViewController&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theVoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;loadArtworkViewWithAttachmentCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadArtwork:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Artwork&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;artwork&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;AttachmentCollection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AttachmentCollection&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;collectionWithItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;@[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artwork&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;andIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;loadAttachmentCollection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadArtworkFromURL:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSDictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ARVoidViewController&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theVoid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;loadArtworkViewWithID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;It shows the pattern&#39;s humble origins quite well. The &lt;code&gt;ARSwitchboard&lt;/code&gt; provides an API that any object can call, and it will handle presenting the view controller. Offering an API that can either use arbitrary URLs or model objects.&lt;/p&gt;

&lt;h2&gt;Where the pattern evolved&lt;/h2&gt;

&lt;p&gt;I initially wrote this during my &quot;Class methods look prettier&quot; stage. Our &lt;code&gt;ARSwitchboard&lt;/code&gt; has evolved into using instance methods, and it uses a sharedInstance. This makes writing tests for the routing extremely simple for &lt;a href=&quot;https://github.com/artsy/energy/blob/master/ArtsyFolio%20Tests/Util/ARSwitchboardTests.m&quot;&gt;easy use cases&lt;/a&gt;, and possible &lt;a href=&quot;https://github.com/artsy/eigen/blob/2eb00a8050a69ab2e05ffeb11a2bbdcbadf9fb7e/Artsy_Tests/App_Tests/ARSwitchBoardTests.m&quot;&gt;for the complex&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The pattern was established pretty well by the time it was integrated &lt;a href=&quot;https://github.com/artsy/energy/blob/a35969d232d8309fd2aedaae35f2dbdf6d505004/Classes/Util/App/ARSwitchBoard.m&quot;&gt;into Energy&lt;/a&gt;. Some of it&#39;s highlights are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The sharedInstance is &lt;a href=&quot;https://github.com/artsy/energy/blob/a35969d232d8309fd2aedaae35f2dbdf6d505004/Classes/Util/App/ARSwitchBoard.m#L20-L31&quot;&gt;set up&lt;/a&gt; with some of the other singletons, from that point on it only acts on properties it owns.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It deals with setting up entire &lt;a href=&quot;https://github.com/artsy/energy/blob/a35969d232d8309fd2aedaae35f2dbdf6d505004/Classes/Util/App/ARSwitchBoard.m#L229-L259&quot;&gt;view hierarchies&lt;/a&gt;. Not just pushing another view on to a &lt;code&gt;UINavigationController&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Internal Routing&lt;/h2&gt;

&lt;p&gt;We try to make all view controllers that could represent a URL have two initializers; one that accepts a full model object and another that works off an ID. This means that we can provide as much context as we can initially, but can generate everything at runtime if you&#39;ve come from a push notification or from another app.&lt;/p&gt;

&lt;p&gt;We use an internal routing tool to do the heavy-lifting here, currently this is &lt;a href=&quot;https://cocoapods.org/pods/JLRoutes&quot;&gt;JLRoutes&lt;/a&gt; which we use to map URLs to blocks and dictionaries.&lt;/p&gt;

&lt;h2&gt;Difficulties&lt;/h2&gt;

&lt;p&gt;With Eigen we&#39;re trying to map the whole data-set of Artsy into a single app, which likely an architecture post of it&#39;s own. However, one of the issues we&#39;re having that really strains this metaphor is ambiguity in the routing system. For us this crops up in two places:
- The URL &lt;a href=&quot;https://github.com/artsy/eigen/pull/534&quot;&gt;routing structure&lt;/a&gt; you&#39;re mapping against can change.
- When one route could have &lt;a href=&quot;https://github.com/artsy/eigen/blob/2eb00a8050a69ab2e05ffeb11a2bbdcbadf9fb7e/Artsy/App/ARSwitchBoard.m#L156&quot;&gt;many types&lt;/a&gt; of data.&lt;/p&gt;

&lt;p&gt;Handling routes that changes is something we ended up building an &lt;a href=&quot;https://github.com/artsy/echo/blob/master/app/api/v1/presenters/route_presenter.rb&quot;&gt;API for&lt;/a&gt;. It provides a JSON package of routes and names, and Eigen updates its routing internally.&lt;/p&gt;

&lt;p&gt;Having one route represent multiple &lt;em&gt;potential&lt;/em&gt; view controllers is tricky. We didn&#39;t want to introduce asynchronicity to the &lt;code&gt;ARSwitchboard&lt;/code&gt;, so we use &lt;a href=&quot;https://github.com/artsy/eigen/blob/2eb00a8050a69ab2e05ffeb11a2bbdcbadf9fb7e/Artsy/View_Controllers/Fair/ARProfileViewController.m#L55-L66&quot;&gt;polymorphic view controllers&lt;/a&gt;. This is a technique where the view controller returned then looks deeper into what it is representing and using child view controllers, embeds the true view controller inside itself.&lt;/p&gt;

&lt;h2&gt;Future&lt;/h2&gt;

&lt;p&gt;Like all patterns, our &lt;code&gt;ARSwitchboard&lt;/code&gt; pattern is evolving. With Eigen we have  a complicated navigation stack, due to supporting app-wide tabs and hosting navigation controllers inside view controllers. This adds additional logic to pretty complicated code when we&#39;re dealing with URLs that could be root elements of a tab. So we are planning to eventually move the presentation aspect of the &lt;code&gt;ARSwitchboard&lt;/code&gt; into a separate object.&lt;/p&gt;

&lt;h2&gt;Alternatives&lt;/h2&gt;

&lt;p&gt;We didn&#39;t need an &lt;code&gt;ARSwitchboard&lt;/code&gt; in Eidolon. Which, so far always seems to be the exception in these architecture pattern posts. Instead we opted for Apple&#39;s &lt;a href=&quot;http://www.objc.io/issues/15-testing/dependency-injection/#which-di-framework-should-i-use&quot;&gt;Dependency Injection tool&lt;/a&gt;, Interface Builder + Storyboards. Energy pre-dates Storyboards, and they didn&#39;t feel like a good fit for Eigen.&lt;/p&gt;

&lt;p&gt;We found storyboards to be a really good replacement to this pattern when you have an established series of steps in your application with some well defined connections.&lt;/p&gt;

&lt;p&gt;As an example, our on-boarding process for Eigen probably should have been storyboarded, as it&#39;s a series of view controllers pushed incrementally. However given that the rest of Eigen is essentially a web of interconnected view controllers, we&#39;d be abusing the tool.&lt;/p&gt;

&lt;h2&gt;Wrap up&lt;/h2&gt;

&lt;p&gt;So the Switchboard is a way that we&#39;ve managed to contain some of the complexity around having web-like abilities to jump between any two view controllers. This pattern makes it easy to stub a switchboard in tests, and to easily test the routing itself.&lt;/p&gt;

&lt;p&gt;When I looked through some of the other open source iOS apps to compare the pattern, I couldn&#39;t find anything similar. So if you do have something similar, you should probably Open Source your app ;)&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Aug 2015 00:00:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/08/19/Cocoa-Architecture:-Switchboard-Pattern/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/08/19/Cocoa-Architecture:-Switchboard-Pattern/</guid>
        
        
        <category>architecture</category>
        
        <category>eidolon</category>
        
        <category>eigen</category>
        
        <category>energy</category>
        
        <category>ios</category>
        
        <category>mobile</category>
        
      </item>
    
      <item>
        <title>Cocoa Architecture: ARRouter</title>
        <description>&lt;p&gt;I want to talk about a pattern that we&#39;ve been using for the last few years on the Artsy Mobile team. This pattern pre-dates me joining Artsy by a few weeks, and was introduced into our codebase by &lt;a href=&quot;http://90wpm.com&quot;&gt;Ben Jackson&lt;/a&gt;, this was the &lt;code&gt;ARRouter&lt;/code&gt;&#39;s first method:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;newOAuthURLWithUsername&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;bp&quot;&gt;NSDictionary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSDictionary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initWithObjectsAndKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                              &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                              &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                              &lt;span class=&quot;n&quot;&gt;ARAuthClientID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;client_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                              &lt;span class=&quot;n&quot;&gt;ARAuthSecret&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;client_secret&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                              &lt;span class=&quot;s&quot;&gt;@&amp;quot;credentials&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@&amp;quot;grant_type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                              &lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initWithFormat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;%@%@&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AROAuthURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queryString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ARRouter&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;newURLWithPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url_string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;release&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Yep, that&#39;s pre-ARC, pre-Dictionary Literals, memory-managed code. We took this pattern and rolled with it for the next 4 years, this article is about where we&#39;ve taken it.&lt;/p&gt;

&lt;p&gt;Within Eigen, &lt;code&gt;ARRouter&lt;/code&gt; is one of our &lt;a href=&quot;https://github.com/artsy/eigen/blob/904e8abfc11ce6ea4b6e81f0e02684b755a280c3/Artsy/Networking/ARRouter.m&quot;&gt;biggest classes&lt;/a&gt;, coming in at almost 1,000 lines of code. Whereas in Energy, it sits at a &lt;a href=&quot;https://github.com/artsy/energy/blob/e51529250ede359c781042f222d5836eb9e8a979/Classes/Util/App/ARRouter.m&quot;&gt;more reasonable&lt;/a&gt; 300 lines. Eidolon does not have an ARRouter, what gives?&lt;/p&gt;

&lt;!-- more --&gt;


&lt;hr /&gt;

&lt;h2&gt;Pattern Evolution&lt;/h2&gt;

&lt;p&gt;We started out with a Router object as being something that can take a model object, and return a &lt;code&gt;NSURL&lt;/code&gt; corresponding to a server side end-point.&lt;/p&gt;

&lt;p&gt;This worked pretty well, we shipped a 1.0 of Energy with this pattern. However, it become obvious that we were putting a lot of extra knowledge about the type and the parameters of request into classes whose responsibility was not generating a route. For example, user account creation, and user account deletion would use the same &lt;code&gt;NSURL&lt;/code&gt; but have different HTTP methods.&lt;/p&gt;

&lt;p&gt;We migrated our networking stack to using AFNetworking &lt;code&gt;1.0&lt;/code&gt;, and started using CocoaPods instead of manually dragging and dropping code. With this in mind, we improved on the pattern and started returning &lt;code&gt;NSURLRequest&lt;/code&gt;s which better encapsulate the server end-point request we were trying to map in the Router.&lt;/p&gt;

&lt;p&gt;The pattern evolved when mixed with a &lt;a href=&quot;http://cocoadocs.org/docsets/AFNetworking/1.3.4/Classes/AFHTTPClient.html&quot;&gt;AFHTTPClient&lt;/a&gt; to act as the base URL resolver, allowing us to easily switch between staging and production environments, and as a central point for hosting all HTTP headers. This meant it was trivial to generate authenticated &lt;code&gt;NSURLRequest&lt;/code&gt;s.&lt;/p&gt;

&lt;p&gt;As it is presently, this pattern is working. We&#39;ve just wrapped up a new Pod, &lt;a href=&quot;https://github.com/artsy/Artsy_Authentication&quot;&gt;Artsy Authentication&lt;/a&gt;. It&#39;s a library that has an &lt;code&gt;ARRouter&lt;/code&gt; that behaves &lt;a href=&quot;https://github.com/artsy/Artsy_Authentication/blob/master/Pod/Classes/ArtsyAuthenticationRouter.h&quot;&gt;exactly like above&lt;/a&gt;. We continue to build new apps with the pattern.&lt;/p&gt;

&lt;h2&gt;Siblings&lt;/h2&gt;

&lt;p&gt;This pattern is standing the test of time, but that doesn&#39;t mean we&#39;re not actively trying to experiment within the domain. There are three interesting offshoots from our work on &lt;code&gt;ARRouter&lt;/code&gt; that are worth talking about.&lt;/p&gt;

&lt;h4&gt;Got the Routes like Swagger&lt;/h4&gt;

&lt;p&gt;The difference between Eigen&#39;s &lt;code&gt;ARRouter&lt;/code&gt; and Energy&#39;s &lt;code&gt;ARRouter&lt;/code&gt; is pretty simple. Eigen&#39;s networking scope is an order of magnitude larger. This is a reflection on the varied data that Eigen is interested in, while Energy has a tight scope on specifically Artsy Parter related data.&lt;/p&gt;

&lt;p&gt;During the new year of 2015, I explored the &lt;a href=&quot;https://github.com/orta/GotTheRoutesLikeSwagger&quot;&gt;idea of programmatically generating&lt;/a&gt; an &lt;code&gt;ARRouter&lt;/code&gt; as a CocoaPod, and then using CocoaPods&#39; subspecs to make it easy to define what collections of end-points you were interested in. This project is based on a standard in which an API is documented, &lt;a href=&quot;http://swagger.io&quot;&gt;Swagger&lt;/a&gt;. This meant as an API consumer, I can generate the types of &lt;code&gt;NSURLRequest&lt;/code&gt;s I would require from the API itself. It created files that looked like:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// Generated by Routes Like Swagger - 31/12/14&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ARRouter&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;(User)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// Retrieve a user by id.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// @return URLRequest for /api/v1/user/{id}.{format}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURLRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getUserWithID:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// Update an existing user.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// @return URLRequest for /api/v1/user/{id}.{format}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURLRequest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;updateUserWithID:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;snip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;This was a pretty nice expansion of the pattern, but overall felt a bit over-engineered and so, it was left as just an experiment.&lt;/p&gt;

&lt;h4&gt;Moya&lt;/h4&gt;

&lt;p&gt;When we started an entirely fresh application, we noted down all the networking-related pain points felt from Eigen and Energy. The Router pattern was pretty good, but we were finding that we were having problems with the API consuming part of the &lt;code&gt;NSURLRequest&lt;/code&gt;s. Mainly, a difficulty in testing, an inconsistency in how we would perform networking and that it didn&#39;t feel declarative.&lt;/p&gt;

&lt;p&gt;Moya is our attempt at fixing this. I won&#39;t go into depth on what Moya is, we&#39;ve &lt;a href=&quot;/blog/2014/09/22/transparent-prerequisite-network-requests/&quot;&gt;written articles&lt;/a&gt; on this already. The part that is interesting is that it obviates an ARRouter by using a collection of Swift enums - forcing developers to include all necessary metadata an an end-point.&lt;/p&gt;

&lt;h4&gt;HAL, and API v2&lt;/h4&gt;

&lt;p&gt;The Router pattern relies on the idea that you know all the routes ahead of time, and add support for them as you build out each part of the app. &lt;a href=&quot;http://stateless.co/hal_specification.html&quot;&gt;HAL, a Hypermedia Application Layer&lt;/a&gt; - can be approximated as being a self describing API. dB. wrote about it in &lt;a href=&quot;/blog/2014/09/12/designing-the-public-artsy-api/&quot;&gt;this blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This means that you ask the API how to get certain bits of data, and it will describe the ways in which you can access it.&lt;/p&gt;

&lt;p&gt;Artsy&#39;s future APIs are using this, and the Router pattern is, more or less, totally deprecated in this world. This is what an artwork&#39;s JSON data looks like in v2:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;37&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;38&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;39&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;40&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;41&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;42&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;43&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;44&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;45&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;46&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;47&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;48&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;49&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;50&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;51&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;52&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;53&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;54&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;55&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;4d8b92bb4eb68a1b2c00044a&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;created_at&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2010-11-15T16:32:38+00:00&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;updated_at&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2015-08-16T09:26:26+00:00&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Jeff Koons&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;sortable_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Koons Jeff&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;gender&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;male&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;birthday&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1955&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;hometown&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;York, Pennsylvania&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;location&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;New York, New York&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;nationality&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;American&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;_links&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;curies&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://d32dm0rphc51dk.cloudfront.net/Uqad2mGhbNGhAUgb8bUvIA/{rel}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;templated&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;thumbnail&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://d32dm0rphc51dk.cloudfront.net/Uqad2mGhbNGhAUgb8bUvIA/four_thirds.jpg&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;image:self&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;{?image_version}.jpg&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;templated&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;self&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://api.artsy.net/api/artists/4d8b92bb4eb68a1b2c00044a&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;permalink&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.artsy.net/artist/jeff-koons&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;artworks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://api.artsy.net/api/artworks?artist_id=4d8b92bb4eb68a1b2c00044a&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;published_artworks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://api.artsy.net/api/artworks?artist_id=4d8b92bb4eb68a1b2c00044a&amp;amp;published=true&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;similar_artists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://api.artsy.net/api/artists?similar_to_artist_id=4d8b92bb4eb68a1b2c00044a&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;similar_contemporary_artists&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://api.artsy.net/api/artists?similar_to_artist_id=4d8b92bb4eb68a1b2c00044a&amp;amp;similarity_type=contemporary&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;genes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;href&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://api.artsy.net/api/genes?artist_id=4d8b92bb4eb68a1b2c00044a&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;image_versions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;four_thirds&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;large&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;square&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;tall&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;You can see that via the _links section, curies and self-referential urls, you can build network client which traverses the API without built-in implicit knowledge.&lt;/p&gt;

&lt;p&gt;It&#39;s a really exciting pattern, and as client developers, we can work on improving standard API clients that work on all HAL APIs. Instead of something specific to Artsy&#39;s API. A lot of the most interesting work in the Cocoa space has been done by Kyle Fuller with &lt;a href=&quot;https://cocoapods.org/pods/Hyperdrive&quot;&gt;Hyperdrive&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Wrap Up&lt;/h3&gt;

&lt;p&gt;Given that we&#39;re not writing applications against the v2 API, yet. The Router pattern is working fine for us at Artsy. It can be a really nice way to abstract out a responsibility that may currently be sitting inside a very large API client that might be worth extracting out.&lt;/p&gt;

&lt;p&gt;Let us know what you think, send tweets to &lt;a href=&quot;https://twitter.com/ArtsyOpenSource&quot;&gt;@ArtsyOpenSource&lt;/a&gt; on twitter. Ps. it&#39;s pronounced &quot;rooter&quot;.&lt;/p&gt;
</description>
        <pubDate>Sat, 15 Aug 2015 00:00:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/08/15/Cocoa-Architecture:-Router-Pattern/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/08/15/Cocoa-Architecture:-Router-Pattern/</guid>
        
        
        <category>architecture</category>
        
        <category>eidolon</category>
        
        <category>eigen</category>
        
        <category>energy</category>
        
        <category>hal</category>
        
        <category>ios</category>
        
        <category>mobile</category>
        
      </item>
    
      <item>
        <title>Peer Lab</title>
        <description>&lt;p&gt;When I was living in Amsterdam, I participated in plenty of &lt;a href=&quot;https://appsterdam.rs&quot;&gt;Appsterdam&lt;/a&gt; events. Things like the weekly Meeten en Drinken. I even helped lead a class in Swift. One of the events I liked the most was called Peer Lab, organized every Saturday morning by &lt;a href=&quot;https://twitter.com/samuelgoodwin&quot;&gt;Samuel Goodwin&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The idea of Peer Lab is pretty simple, but also somewhat profound: developers gather in a physical space to work on things. If someone has a question, they ask the group. If you can help, you offer assistance. The goal is to foster a collaborative learning environment where everyone feels fulfilled.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Samuel held Peer Lab on Saturday mornings to dissuade recruiters from attending. The café where we met had wifi and good coffee, which is all you really need when you&#39;re trying to get something accomplished on a Saturday morning.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;http://photos.ashfurrow.com/autumn-in-amsterdam&#39;&gt;&lt;img src=&quot;/images/2015-08-10-peer-lab/amsterdam.jpg&quot; title=&quot;Amsterdam&quot; &gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;Before I moved to New York, I talked to Orta about organizing something similar at the Artsy offices. He was very receptive and excited to see it happen. I would be there every Saturday from 10:30-12:30 to host, and Artsy would provide the space, the wifi, and some free coffee and snacks. Pretty minimal costs. Orta offered the &lt;a href=&quot;http://www.meetup.com/CocoaPods-NYC/events/222362372/&quot;&gt;CocoaPods NYC meetup group&lt;/a&gt; as a place to promote the event. We&#39;ve also been mentioning it to people we meet at other tech events in New York.&lt;/p&gt;

&lt;p&gt;It&#39;s been about six months, and I feel that the Peer Lab has been a fantastic success. Every week, I get to meet developers – some regulars and some newcomers. We sit around, talk shop, code, and hang out until pizza arrives for lunch.&lt;/p&gt;

&lt;p&gt;From my perspective, it&#39;s been great. I get to meet other developers in a really chill setting, and it gets me out of the house early on Saturday. It sets an awesome tone for the rest of the weekend.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;https://instagram.com/p/5dlU_MyORN/&#39;&gt;&lt;img src=&quot;/images/2015-08-10-peer-lab/coffee.jpg&quot; title=&quot;Nothing like a cup of coffee&quot; &gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;Everyone seems to have a good time – people meet, chat, work away on their projects or open source or whatever. Attendance includes iOS experts, iOS beginners, and everyone in between. Non-iOS developers are always welcome, but the CocoaPods branding – and the network of people Orta and I know – make it somewhat iOS-centric. We&#39;re working on that.&lt;/p&gt;

&lt;p&gt;We&#39;ve been doing our best to create an inclusive environment, with an emphasis placed on &lt;a href=&quot;http://cocoapods.org/legal&quot;&gt;CocoaPods&#39; Code of Conduct&lt;/a&gt;. Importantly, the event creates a space where developers can meet, work, and socialize outside of the regular alcohol-soaked meetup scene. There&#39;s nothing wrong with booze at tech meetups, but it&#39;s nice to have a space where people can socialize outside that context.&lt;/p&gt;

&lt;p&gt;The Peer Lab is a cost-effective way for Artsy to get respect from the NYC developer scene. This is good for &lt;a href=&quot;http://ashfurrow.com/blog/sharing-is-selfish/&quot;&gt;all manner of reasons&lt;/a&gt;, and it only costs a pizza every week.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;https://instagram.com/p/31tKTiGZVC/&#39;&gt;&lt;img src=&quot;/images/2015-08-10-peer-lab/classroom.jpg&quot; width=&quot;1280&quot; title=&quot;The Classroom at Artsy&quot; &gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;So I&#39;m happy, the people who attend are happy, and Artsy is happy.&lt;/p&gt;

&lt;p&gt;But there&#39;s a problem.&lt;/p&gt;

&lt;p&gt;Not everyone can make it to Artsy&#39;s lower Manhattan office every Saturday morning. Some developers live too far away, or have family/work obligations Saturday morning.&lt;/p&gt;

&lt;p&gt;...&lt;/p&gt;

&lt;p&gt;I want to see more Peer Labs pop up across New York, and across the world. I want you, reader, to consider starting one. It&#39;s super easy to do, I promise!&lt;/p&gt;

&lt;p&gt;You don&#39;t even need a company or sponsor to organize something like this. You&#39;ll be surprised how easy it is.&lt;/p&gt;

&lt;p&gt;I have a few friends living near Toronto that get together weekly at a café to work together. They tweet about it and invite others. It&#39;s nothing formal, but it&#39;s valuable time for them.&lt;/p&gt;

&lt;p&gt;A Peer Lab by any other name is still an awesome idea.&lt;/p&gt;

&lt;p&gt;If you &lt;em&gt;are&lt;/em&gt; a company, and you&#39;re looking for an easy way to meet talented developers, hosting or sponsoring a Peer Lab is definitely worth considering. There are a &lt;em&gt;tonne&lt;/em&gt; of meetups in tech, but most revolve around evening drinks, maybe pizza, maybe a talk. A Peer Lab can help you stand out – even people who don&#39;t attend are thinking &quot;oh, that&#39;s cool.&quot;&lt;/p&gt;

&lt;p&gt;Nice job, company.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;https://instagram.com/p/yNNXtKJqrk/&#39;&gt;&lt;img src=&quot;/images/2015-08-10-peer-lab/couch.jpg&quot; width=&quot;1280&quot; title=&quot;Bart the Art Plant&quot; &gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;How to Peer Lab in four simple steps:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Pick a Time&lt;/strong&gt;. When are &lt;em&gt;you&lt;/em&gt; free to do this? Do you like working in the evenings? Awesome! Do it then. Are Sunday afternoons your jam? Sweet. Whenever works for you.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Find a Space&lt;/strong&gt;. This is easier than it sounds, trust me. As an organizer, you need a space that&#39;s convenient &lt;em&gt;for you&lt;/em&gt;. I use my workplace because I live nearby. Samuel used a café by his apartment. Anywhere that has wifi. Pick a place that works for your time – for example, if you&#39;re meeting in the morning, a place with coffee is a good idea.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Let the World Know&lt;/strong&gt;. Tweet it, send it to some friends, whatever works. You could ask your employer to pay for a Meetup account. Send details to popular developers in your city and ask them to help spread the word 🎉&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Show Up&lt;/strong&gt;. Most of success is just showing up. At the very least, you&#39;ve got a nice time to jam every week, and hopefully you&#39;ll meet some other people to jam with.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Keep things as simple as possible so Peer Lab stays something fun that you look forward to, and doesn&#39;t become a chore. Like I said, six months in and I still love it.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Peer Lab is a fun and rewarding activity. From my perspective, from attendees&#39; perspectives, and from Artsy&#39;s perspective. It&#39;s simply awesome.&lt;/p&gt;

&lt;p&gt;Whether you&#39;re a developer or a company, an expert or a beginner, I highly encourage you to start one of your own.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;https://ortastuff.s3.amazonaws.com/gifs/three-hands.gif&#39;&gt;&lt;img src=&quot;https://ortastuff.s3.amazonaws.com/gifs/three-hands.gif&quot; width=&quot;1280&quot; title=&quot;Thumbs Up&quot; &gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Aug 2015 10:57:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/08/10/peer-lab/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/08/10/peer-lab/</guid>
        
        
        <category>community</category>
        
        <category>ios</category>
        
        <category>mobile</category>
        
        <category>open source</category>
        
        <category>oss</category>
        
      </item>
    
      <item>
        <title>Open Sourcing Energy</title>
        <description>&lt;p&gt;The Artsy Mobile team is pretty aggressive in our stance on &lt;a href=&quot;http://code.dblock.org/2015/02/09/becoming-open-source-by-default.html&quot;&gt;Open Source by Default&lt;/a&gt;. We&#39;ve talked about it at &lt;a href=&quot;https://www.youtube.com/watch?v=2DvDeEZ0NDw&amp;amp;spfreload=10&quot;&gt;conferences&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=SjjvnrqDjpM&quot;&gt;around&lt;/a&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=zPbLYWmLPow&quot;&gt;the&lt;/a&gt; &lt;a href=&quot;https://speakerdeck.com/orta/ios-at-artsy&quot;&gt;world&lt;/a&gt;, in &lt;a href=&quot;http://www.objc.io/issues/22-scale/artsy&quot;&gt;renowned magazines&lt;/a&gt; and on &lt;a href=&quot;http://artsy.github.io/blog/2015/04/28/how-we-open-sourced-eigen/&quot;&gt;our blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&#39;s worth mentioning that we don&#39;t just talk externally about Open Source. Internally, the Mobile team runs talks about Open Source for the rest of the Artsy staff. As well, we discuss the tooling and business implications of having our work in public repos. Artsy strives for an open culture, in this case the development team, on the whole, is just further along in the process.&lt;/p&gt;

&lt;p&gt;The Open Source app idea started with an experiment in the Summer of 2014, asking, &quot;What does a truly Open Source App look like?&quot; The outcome of that was our Swift Kiosk app, &lt;a href=&quot;https://github.com/artsy/eidolon/&quot;&gt;Eidolon&lt;/a&gt;. Open from day one. We took the knowledge from that and applied it to our public facing app, &lt;a href=&quot;https://github.com/artsy/eigen/&quot;&gt;Eigen&lt;/a&gt;. Open from day 806. That made 2/3rds of our apps Open Source.&lt;/p&gt;

&lt;p&gt;I&#39;m going to talk about our final app, &lt;a href=&quot;https://github.com/artsy/energy&quot;&gt;Energy&lt;/a&gt;. Open from day 1433 and ~3500 commits.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/images/2015-08-01-open-sourcing-energy/ENERGY.png&quot; alt=&quot;ENERGY&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Energy is commonly known as &lt;a href=&quot;http://folio.artsy.net&quot;&gt;Artsy Folio&lt;/a&gt;. It&#39;s a tool for Artsy&#39;s Partners to showcase their artworks on the go, and quickly email them. Here&#39;s a beautiful splash showing it in action.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;http://folio.artsy.net/images/cover-bbf6fdf4.jpg&#39;&gt;&lt;img src=&quot;http://folio.artsy.net/images/cover-bbf6fdf4.jpg&quot; title=&quot;Folio overview&quot; &gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;This app comes from the pre-CocoaPods, pre-ARC, pre-UICollectionView and pre-Auto Layout days. It spent 3 years with no tests, but has come up to over 50% code coverage in the last year. It&#39;s testing suite is super fast, given that we learned a lot with Eigen&#39;s tests we stuck with five main principals:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;No un-stubbed HTTP requests.&lt;/li&gt;
&lt;li&gt;Avoid &lt;code&gt;will&lt;/code&gt;s in a test as much as possible.&lt;/li&gt;
&lt;li&gt;Never allow access to the main Core Data instance in tests&lt;/li&gt;
&lt;li&gt;Dependency Inject anything&lt;/li&gt;
&lt;li&gt;Use snapshots to test view controller states&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;On Opening Folio&lt;/h3&gt;

&lt;p&gt;Folio is interesting in that it has competitors. To some extent the Kiosk app does too, but the cost of entry there is really high in comparison. Folio on the other hand, has a handful of competing businesses who exist to &lt;em&gt;only&lt;/em&gt; build a Gallery/Museum/Collector portfolio app. In opening the code for Folio, we&#39;re not making it easy for people to copy and paste our business, it&#39;s very directly tied to Artsy&#39;s APIs and &lt;a href=&quot;http://www.dylanfareed.com/projects/artsy-cms/&quot;&gt;CMS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I commonly get questions about the process of Open Sourcing an app, so here&#39;s what happened after I decided it was time. First, I emailed my intent:&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;/images/2015-08-01-open-sourcing-energy/oss-energy-email.png&#39;&gt;&lt;img src=&quot;/images/2015-08-01-open-sourcing-energy/oss-energy-email.png&quot;&gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;The concepts I wanted to cover were: &quot;This is a codebase is worthy of art&quot;, &quot;We know what we&#39;re doing&quot;, &quot;This doesn&#39;t make it simple for someone to create a business off our product&quot; and &quot;I&#39;ve managed to get a lot of the source out already.&quot; I gave a month or so to ensure that I could have corridor chats with people, in order to be very certain around opinions. We had some discussions in the email thread about ways in which an open source&#39;d Energy would impact the team, and overall the reaction was positive. This wasn&#39;t surprising, the non-technical parts of the team are regularly kept up to date on thoughts like this.&lt;/p&gt;

&lt;p&gt;After the internal announcement I started looking at the codebase, what should be cleaned up. I don&#39;t believe a codebase is ever perfect ( just look at Eigen&#39;s &lt;a href=&quot;https://raw.githubusercontent.com/artsy/eigen/3f29f61f2b96f516e9ecf407818b82911b268694/HACKS.md&quot;&gt;HACKS.md&lt;/a&gt; ) but one thing I learned from the launch of Eigen is that we need a lot of beginner docs to help people get started. So I went into Energy&#39;s &lt;a href=&quot;https://github.com/artsy/energy/tree/master/docs&quot;&gt;docs&lt;/a&gt; directory and started comparing it to &lt;a href=&quot;https://github.com/artsy/eigen/tree/master/docs&quot;&gt;Eigen&lt;/a&gt;&#39;s.&lt;/p&gt;

&lt;p&gt;With the docs ready, we anticipated the repo change as we did &lt;a href=&quot;/blog/2015/04/28/how-we-open-sourced-eigen/&quot;&gt;with Eigen&lt;/a&gt;. This means making sure all loose pull requests were wrapped up. All code comments were audited. Then we used &lt;a href=&quot;https://github.com/google/github-issue-mover&quot;&gt;github-issue-mover&lt;/a&gt; to migrate important issues to the new repo. Then we deleted the &lt;code&gt;.git&lt;/code&gt; folder in the app, and &lt;code&gt;git init&lt;/code&gt; to create a new repo.&lt;/p&gt;

&lt;p&gt;Given that we have three Open source apps now, I wanted to give them a consistent branding when we talk about the apps from the context of the codebase. It&#39;s like programming, if you&#39;re writing a similar thing 3 times, definitely time to refactor.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;/images/2015-08-01-open-sourcing-energy/oss-design-sketch.png&#39;&gt;&lt;img src=&quot;/images/2015-08-01-open-sourcing-energy/oss-design-sketch.png&quot;&gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;Finally, I started working on the announcement blog post. Which you&#39;re reading. I&#39;ll send a &lt;a href=&quot;https://github.com/artsy/artsy.github.com/pull/119&quot;&gt;pull request&lt;/a&gt; for this blog post, then when it&#39;s merged. I&#39;ll make one more final look over how everything looks, then make the new Energy repo public.&lt;/p&gt;

&lt;h3&gt;On more than just Opening Source&lt;/h3&gt;

&lt;p&gt;Eigen, the public facing iOS app, allows people to log in with a trial user account. We also have a known API Key + Secret for the &lt;a href=&quot;https://github.com/artsy/eigen/blob/master/Makefile#L41-L42&quot;&gt;OSS app&lt;/a&gt;. With this, any developer can run a few commands and have a working application to play around in. This makes it easy to look around and see how things are done.&lt;/p&gt;

&lt;p&gt;Energy, however, requires you have a Artsy partner account. So opening it up would mean that an OSS developer hits the login screen and is stuck. In developing this app, I&#39;ve slowly been creating my own partner gallery account based on my paintings and photography. So now when you set up the app to be ran as an OSS app, it will pre-load a known database of artworks and metadata from my test gallery.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;/images/2015-08-01-open-sourcing-energy/ios-sim.png&#39;&gt;&lt;img src=&quot;/images/2015-08-01-open-sourcing-energy/ios-sim.png&quot;&gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;Its easy to imagine that Open Sourcing something is an end-point, but from our perspective it is a journey. We want to make sure that anyone can download this app, learn how and why it&#39;s structured and then run through the app with a debugger to get a deeper sense of how everything connects. Just releasing the code would have been underwhelming. Instead we&#39;re aiming high.&lt;/p&gt;

&lt;p&gt;I think that there is no higher compliment to your team and your code than opening it to the public.&lt;/p&gt;

&lt;p&gt;You should Open Source your app.&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Aug 2015 13:54:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/08/06/open-sourcing-energy/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/08/06/open-sourcing-energy/</guid>
        
        
        <category>energy</category>
        
        <category>ios</category>
        
        <category>mobile</category>
        
        <category>open source</category>
        
        <category>oss</category>
        
      </item>
    
      <item>
        <title>Notorious BUG – The Unbugged Sessions Part 1</title>
        <description>&lt;p&gt;When the odds are stacked against you, your mind is overflowing, and you are ready to just pop, there’s always practical
debugging tips to help you through a cloudy day.&lt;/p&gt;

&lt;p&gt;In this post I’ll take you through a debugging session where I reproduce a crash, for which we were receiving a bunch of
crash reports, but I was unable to reproduce by just using the application.&lt;/p&gt;

&lt;p&gt;It will cover the following topics:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Narrow down the breakpoint to the method invocation where the crash occurs.&lt;/li&gt;
&lt;li&gt;Locate the exact instruction that causes the crash.&lt;/li&gt;
&lt;li&gt;Look at the implementation of the method where the crash occurs.&lt;/li&gt;
&lt;li&gt;Simulate the crash.&lt;/li&gt;
&lt;/ul&gt;


&lt;!-- more --&gt;


&lt;h3&gt;The crash report&lt;/h3&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;Hardware Model:  iPhone5,2
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;OS Version:      iPhone OS 8.1.2 (12B440)
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Exception Type:  SIGSEGV
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Exception Codes: SEGV_ACCERR at 0x10
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Crashed Thread:  0
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Thread 0 Crashed:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;0   libobjc.A.dylib                      0x33034f46 objc_msgSend + 5
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;1   UIKit                                0x28d7e4bd -[UIScrollView _getDelegateZoomView] + 66
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;2   UIKit                                0x2599b757 -[UIScrollView _offsetForCenterOfPossibleZoomView:withIncomingBoundsSize:] + 42
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;[SNIP]
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;7   Artsy                                0x00107087 -[ARArtworkView setUpCallbacks] + 1238
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;[SNIP]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;This crash report was shortened for clarity sake, you can find the full report
&lt;a href=&quot;https://gist.github.com/alloy/cfaab5b754fdd2c551e0&quot;&gt;here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, this might not be the toughest nut to crack –if you’ve been doing UIKit development for a while, you may already
know that &lt;code&gt;UIScrollView&lt;/code&gt; does not weakify it’s &lt;code&gt;delegate&lt;/code&gt;– but instead of just going by experience and making some
changes, let’s see if we can’t figure out exactly what’s happening, for the sake of reproducing and confidently making
the right fix.&lt;/p&gt;

&lt;p&gt;The lines near the top of the stack trace tell me that it’s probably a message being sent to some garbage memory, i.e.
a released object, so that’s where I want to be poking around.&lt;/p&gt;

&lt;h3&gt;Getting at often called locations&lt;/h3&gt;

&lt;p&gt;So I want to get at the 2nd frame in the stack, but that method and the one at the 3rd frame get invoked &lt;em&gt;a lot&lt;/em&gt; while
navigating to the view I want to debug. There’s many ways to do this, but the simple approach I often take in these
cases is to set a breakpoint for the last frame in the stack that is &lt;em&gt;unique to the location that I want to get at&lt;/em&gt; and
then keep refining the breakpoints every time I hit one.&lt;/p&gt;

&lt;p&gt;In this case that starts off with a breakpoint in
&lt;a href=&quot;https://github.com/artsy/eigen/blob/1.7.0/Artsy/Classes/Views/ARArtworkView.m#L85&quot;&gt;our code&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;(lldb) b -[ARArtworkView setUpCallbacks]
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Breakpoint 1: where = Artsy`-[ARArtworkView setUpCallbacks] + 19 at ARArtworkView.m:101, address = 0x000000010e722853&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;With that set I then navigate to the view I want to get at and, once the breakpoint is hit, set the breakpoint for a
frame that’s even closer to the location I want to get at:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;Process 74926 stopped
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;* thread #1: tid = 0x1b5faf, 0x000000010e722853 Artsy`-[ARArtworkView setUpCallbacks](self=0x00007fc99c95b230, _cmd=0x000000010eb60e58) + 19 at ARArtworkView.m:101, queue = &#39;com.apple.main-thread&#39;, stop reason = breakpoint 1.1
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    frame #0: 0x000000010e722853 Artsy`-[ARArtworkView setUpCallbacks](self=0x00007fc99c95b230, _cmd=0x000000010eb60e58) + 19 at ARArtworkView.m:101
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;(lldb) b -[UIScrollView _offsetForCenterOfPossibleZoomView:withIncomingBoundsSize:]
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Breakpoint 2: where = UIKit`-[UIScrollView _offsetForCenterOfPossibleZoomView:withIncomingBoundsSize:], address = 0x00000001105c1fb7&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;And finally I repeat the process and set the breakpoint that I &lt;em&gt;really&lt;/em&gt; want to get to:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;(lldb) b -[UIScrollView _getDelegateZoomView]
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Breakpoint 3: where = UIKit`-[UIScrollView _getDelegateZoomView], address = 0x00000001105bf8cd&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;h3&gt;Locating the instruction that crashes by looking at the real &lt;em&gt;on-device&lt;/em&gt; framework (iPhoneOS SDK)&lt;/h3&gt;

&lt;p&gt;By this point, I’m left with the realization that I don’t have a device running iOS 8.1.x anymore –the above was all on
the simulator– and thus jumping through the code in a debugger on a device is not going to be reliable. Instead, I’m
going to take a look at the disassembly and (pseudo) decompiled code in &lt;a href=&quot;http://www.hopperapp.com&quot;&gt;Hopper&lt;/a&gt; –a tool I
highly suggest you go and buy &lt;strong&gt;right now&lt;/strong&gt;, it’s ridiculously cheap for the amount of time it will save you–.&lt;/p&gt;

&lt;p&gt;To be able to do so, though, I first had to get a copy of UIKit for one of the devices of which we received crash logs.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Firmware decryption keys&lt;/strong&gt;: keys for many variants are listed
&lt;a href=&quot;https://www.theiphonewiki.com/wiki/Firmware_Keys&quot;&gt;here&lt;/a&gt;. If the model you need is not listed you’ll have to manually
figure out the key, which is beyond the scope of this article.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Download firmware&lt;/strong&gt;: you can find links for all variants on
&lt;a href=&quot;https://www.theiphonewiki.com/wiki/Firmware&quot;&gt;this page&lt;/a&gt;. I chose iOS 8.1.2 for the 2nd revision of the iPhone 5
(iPhone 5,2), because the keys to decrypt that are known and it’s one of the devices and OS versions for which we had
received crash reports.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Decrypt image&lt;/strong&gt;: there are a bunch of tools that allow you to decrypt firmware images, which are listed
&lt;a href=&quot;https://www.theiphonewiki.com/wiki/Category:Decryption&quot;&gt;here&lt;/a&gt;. I’m using
&lt;a href=&quot;https://www.theiphonewiki.com/wiki/Dmg_(command&quot;&gt;xpwn’s ‘dmg’ tool&lt;/a&gt;) which you can get from
&lt;a href=&quot;https://github.com/planetbeing/xpwn/tree/master/dmg&quot;&gt;planetbeing’s GitHub repo&lt;/a&gt;. Once you’ve got the key from
&lt;a href=&quot;https://www.theiphonewiki.com/wiki/Firmware_Keys&quot;&gt;here&lt;/a&gt;, or have otherwise manually figured it out, you can decrypt
the disk image like so:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ unzip -d iPhone5,2_8.1.2 iPhone5,2_8.1.2_12B440_Restore.ipsw
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;$ cd iPhone5,2_8.1.2
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;$ /path/to/xpwn/dmg/dmg extract 058-09875-017.dmg decrypted.dmg -k 02e89744a7143b9bac48fd1adc32a8ed6bcf74d428d0861d790153accb96a413e1c3b8d8&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Extract UIKit from shared DYLD cache&lt;/strong&gt;: for performance reasons, Apple decided to create one big cache that
contains all of the commonly used frameworks, including UIKit. To get just UIKit, you’ll need to use any of the tools
listed &lt;a href=&quot;http://iphonedevwiki.net/index.php/Dyld_shared_cache#Cache_extraction&quot;&gt;here&lt;/a&gt;, I used
&lt;a href=&quot;https://github.com/kennytm/Miscellaneous/downloads&quot;&gt;dyld_decache&lt;/a&gt;:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ open decrypted.dmg
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;$ /path/to/dyld_decache-v0.1c -o Extracted -f UIKit /Volumes/SUOkemoTaos12B440.N42OS/System/Library/Caches/com.apple.dyld/dyld_shared_cache_armv7s
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;$ ls -l Extracted/System/Library/Frameworks/UIKit.framework/UIKit
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;-rw-r--r--  1 eloy  staff  12142776 Aug  1 10:50 Extracted/System/Library/Frameworks/UIKit.framework/UIKit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;With that out of the way, I can finally load that up in Hopper and look at the instruction. I can get the offset of
the instruction from the stack frame, specifically the ‘66’ in
&lt;code&gt;-[UIScrollView _getDelegateZoomView] + 66&lt;/code&gt;. This means that the instruction’s address is that of the function it is
located in &lt;em&gt;plus&lt;/em&gt; 66, which, as you can see in the below screenshot, is halfway through the &lt;code&gt;objc_msgSend&lt;/code&gt; call:&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;
&lt;a href=&#39;/images/2015-07-30-Notorious-BUG-1/Hopper-Disassembled.png&#39;&gt;
  &lt;img src=&quot;/images/2015-07-30-Notorious-BUG-1/Hopper-Disassembled.png&quot; alt=&quot;The assembly of the `-[UIScrollView _getDelegateZoomView]` method.&quot;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;


&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;


&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;


If you want to get into the details of what these instructions are doing, I suggest you read up on a blog post such as
[this article by Mike Ash](https://www.mikeash.com/pyblog/friday-qa-2011-12-30-disassembling-the-assembly-part-3-arm-edition.html).
The important part here is that you can easily see that it’s all related to sending the following message to the scroll
view’s delegate:

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;[delegate respondsToSelector:@selector(viewForZoomingInScrollView:)]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;

Hopper can give us (pseudo) decompiled code for this method, which looks like the following:

&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href=&#39;/images/2015-07-30-Notorious-BUG-1/Hopper-Decompiled.png&#39;&gt;
  &lt;img src=&quot;/images/2015-07-30-Notorious-BUG-1/Hopper-Decompiled.png&quot; alt=&quot;The pseudo-code of the `-[UIScrollView _getDelegateZoomView]` method.&quot;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;


&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;


&lt;p&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;Based on that, it’s clear to see that that’s what happens and so it’s the delegate that points to garbage, &lt;code&gt;0x10&lt;/code&gt; in
this crash report to be specific.&lt;/p&gt;

&lt;h3&gt;Simulating the crash&lt;/h3&gt;

&lt;p&gt;Now that I know what’s happening, it’s time to simulate the crash on the Simulator so that I can confidently make the
fix for what I think is going wrong.&lt;/p&gt;

&lt;p&gt;Based on the above, I now know that, on the Simulator, this crash would occur around the 16th instruction, which is
where the &lt;code&gt;-respondsToSelector:&lt;/code&gt; message gets sent, so I’ll jump to just before it, but &lt;em&gt;after&lt;/em&gt; where the &lt;code&gt;delegate&lt;/code&gt;
variable would get set:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;(lldb) disassemble --frame
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;UIKit&lt;code&gt;-[UIScrollView _getDelegateZoomView]:
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;-&amp;amp;gt; 0x1105bf8cd:  pushq  %rbp
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8ce:  movq   %rsp, %rbp
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8d1:  pushq  %r15
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8d3:  pushq  %r14
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8d5:  pushq  %rbx
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8d6:  pushq  %rax
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8d7:  movq   %rdi, %r14
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8da:  movq   0xd344ef(%rip), %rax      ; UIScrollView._zoomView
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8e1:  movq   (%r14,%rax), %rbx
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8e5:  testq  %rbx, %rbx
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8e8:  jne    0x1105bf97b               ; -[UIScrollView _getDelegateZoomView] + 174
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8ee:  movq   0xd344c3(%rip), %r15      ; UIScrollView._delegate
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8f5:  movq   (%r14,%r15), %rdi
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf8f9:  movq   0xd08228(%rip), %rdx      ; &quot;viewForZoomingInScrollView:&quot;
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf900:  movq   0xd02df9(%rip), %rsi      ; &quot;respondsToSelector:&quot;
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;   0x1105bf907:  callq  *0xac2783(%rip)           ; (void *)0x0000000111fe1000: objc_msgSend
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;[SNIP]
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;(lldb) step --count 13
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;Process 74926 stopped
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;* thread #1: tid = 0x1b5faf, 0x00000001105bf8f9 UIKit&lt;/code&gt;-[UIScrollView &lt;em&gt;getDelegateZoomView] + 44, queue = &#39;com.apple.main-thread&#39;, stop reason = instruction step into
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    frame #0: 0x00000001105bf8f9 UIKit&lt;code&gt;-[UIScrollView _getDelegateZoomView] + 44
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;UIKit&lt;/code&gt;-[UIScrollView &lt;/em&gt;getDelegateZoomView] + 44:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;   0x1105bf8f5:  movq   (%r14,%r15), %rdi
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;-&amp;gt; 0x1105bf8f9:  movq   0xd08228(%rip), %rdx      ; &quot;viewForZoomingInScrollView:&quot;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;   0x1105bf900:  movq   0xd02df9(%rip), %rsi      ; &quot;respondsToSelector:&quot;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;   0x1105bf907:  callq  &lt;em&gt;0xac2783(%rip)           ; (void &lt;/em&gt;)0x0000000111fe1000: objc_msgSend
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;   0x1105bf90d:  xorl   %ebx, %ebx&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;At this instruction, the object to which the message will be sent has been assigned to the &lt;code&gt;$rdi&lt;/code&gt; register, which in my
case is still the expected and valid object:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;(lldb) po $rdi
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&amp;lt;ARArtworkViewController: 0x7fc99c9681d0&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;At this point I can just override the register with the garbage shown in the crash report:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;(lldb) register write rdi 0x10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;And finally continue execution and let the crashing occur:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;(lldb) bt
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;* thread #1: tid = 0x1b5faf, 0x0000000111fe1005 libobjc.A.dylib&lt;code&gt;objc_msgSend + 5, queue = &#39;com.apple.main-thread&#39;, stop reason = EXC_BAD_ACCESS (code=1, address=0x10)
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;  * frame #0: 0x0000000111fe1005 libobjc.A.dylib&lt;/code&gt;objc_msgSend + 5
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    frame #1: 0x00000001105bf90d UIKit&lt;code&gt;-[UIScrollView _getDelegateZoomView] + 64
&amp;lt;/span&amp;gt;&amp;lt;span class=&#39;line&#39;&amp;gt;    frame #2: 0x00000001105c1fe9 UIKit&lt;/code&gt;-[UIScrollView _offsetForCenterOfPossibleZoomView:withIncomingBoundsSize:] + 50
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;[SNIP]
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    frame #7: 0x000000010e722853 Artsy`-[ARArtworkView setUpCallbacks] + 19
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;[SNIP]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;💥&lt;/p&gt;

&lt;p&gt;Perfect, an exact replica of the crash report, so now I know with confidence that the problem is that the
&lt;code&gt;ARArtworkViewController&lt;/code&gt; is released by the time that method is called.&lt;/p&gt;

&lt;h3&gt;Closing thoughts&lt;/h3&gt;

&lt;p&gt;The fix for this crash is simple and not really interesting for this post, as it’s all about the steps I took to arrive
there. I think these are way more interesting, as you can apply some/all of these in many different situations.&lt;/p&gt;

&lt;p&gt;But for completeness sake, the fix is to make sure that &lt;a href=&quot;https://github.com/artsy/eigen/blob/356b88d1ff035a9f0aa28f19e42255c7152a88f4/Artsy/View_Controllers/Artwork/ARArtworkViewController.m#L28&quot;&gt;the scroll view’s delegate gets nillified&lt;/a&gt;
before the view controller is released and &lt;em&gt;in addition&lt;/em&gt; it lead to me figuring out why the scroll view was still even
alive at that time, which was &lt;a href=&quot;https://github.com/artsy/eigen/commit/8db7b1e75563ee2ee7b547223cb02e1e646e7bd8&quot;&gt;a block retention-cycle&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Jul 2015 19:21:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/07/30/Notorious-BUG-Part-1/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/07/30/Notorious-BUG-Part-1/</guid>
        
        
        <category>debugging</category>
        
        <category>objective c</category>
        
      </item>
    
      <item>
        <title>How To Write Unit Tests Like a Brood Parasite</title>
        <description>&lt;p&gt;To a beginner, &lt;a href=&quot;http://ocmock.org/&quot;&gt;OCMock&lt;/a&gt; looks scary. The syntax is strange, the idea of stubbing seems complicated, and skirting around the need to use it at all times kind of works out for a while.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mock&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// three brackets!!&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OCMockObject&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;niceMockForClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;UINavigationItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// it has to be told to be nice?&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;All of this can be overwhelming for someone who just wants to write simple unit tests for a particular view controller.&lt;/p&gt;

&lt;p&gt;Once you look into the specifics of OCMock, however, things get less terrifying really quickly. It is helpful to compare OCMock’s approach to stubbing to the &lt;a href=&quot;https://vimeo.com/60553870&quot;&gt;behaviors of certain bird species&lt;/a&gt;. As always, the soothing voice of David Attenborough brings clarity and joy to even the most mundane puzzles of life’s journey.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;hr /&gt;

&lt;p&gt;For those who hate birds and videos of them, the cuckoo duck is known for leaving its eggs in the nests of other birds precisely as their unsuspecting victims lay their own. The new host parents cannot differentiate their offspring from those of the duck and inadvertently raise the duck chicks to maturity.&lt;/p&gt;

&lt;p&gt;In a similar fashion, OCMock can place trick objects in your &lt;del&gt;nest&lt;/del&gt; test code with whichever custom configuration suits your needs. The ‘host’ subject under test can’t differentiate these mock objects from the objects they’ve been written to use, and you can decide exactly how you’d like the mock objects to behave in your testing environment. This was especially helpful for a method I created that relies on information from an asynchronous network request. We’ll call it the &lt;code&gt;DataSource&lt;/code&gt; of a &lt;code&gt;StatusMonitor&lt;/code&gt; class.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;updatedStatus&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataSource&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getNewDataWithNetworkRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;/// some code that relies on this new data&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;In my view controller, I can use a &lt;code&gt;StatusMonitor&lt;/code&gt; to decide whether or not a notification should appear in my view:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;viewWillAppear&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;viewWillAppear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// show or hide a notification based on this status&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shouldShowNotification&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statusMonitor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updatedStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;When I’m writing tests for this view controller, I don’t care about &lt;code&gt;DataSource&lt;/code&gt; - I just want to make sure the view controller knows when to show or hide a notification correctly depending on the new value from its StatusMonitor. I’d really like to avoid making any network requests within these kinds of tests. This is where the bird strategy comes in.&lt;/p&gt;

&lt;p&gt;In my tests, I can create a decoy &lt;code&gt;StatusMonitor&lt;/code&gt; with its corresponding methods using OCMock.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;StatusMonitor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statusMonitor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ARCMSStatusMonitor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mockMonitor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OCMockObject&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;partialMockForObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;statusMonitor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mockMonitor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;andReturn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;@YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;hr /&gt;

&lt;p&gt;I can then assign mockMonitor to the &lt;code&gt;statusMonitor&lt;/code&gt; property of my view controller under test. In this way, the dependency on a network connection disappears, my view controller is happy, and my test can isolate the functionality I care about. OCMock provides some excellent documentation of what they mean by ‘nice’ and some other interesting things you can do with mock objects &lt;a href=&quot;http://ocmock.org/features/&quot;&gt;here&lt;/a&gt;. For those interested in David Attenborough, birds, or natural history in general, I recommend  &lt;a href=&quot;http://www.bbc.co.uk/nature/collections/p0048522&quot;&gt;Nature&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&quot;text-align:center;&quot;&gt;
&lt;img src = &quot;/images/2015-07-06-how-to-write-unit-tests-like-a-brood-parasite/attenborough.gif&quot;&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 06 Jul 2015 13:54:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/07/06/how-to-write-unit-tests-like-a-brood-parasite/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/07/06/how-to-write-unit-tests-like-a-brood-parasite/</guid>
        
        
        <category>beginners</category>
        
        <category>ios</category>
        
        <category>mobile</category>
        
        <category>ocmock</category>
        
        <category>open source</category>
        
        <category>oss</category>
        
        <category>testing</category>
        
      </item>
    
      <item>
        <title>An Eigenstate of Mind</title>
        <description>&lt;p&gt;Prior to starting at Artsy, I followed a few online tutorials on iOS development. But a simple application demonstrating how to &lt;a href=&quot;http://www.raywenderlich.com/85578/first-core-data-app-using-swift&quot;&gt;build a todo list&lt;/a&gt; didn&#39;t illustrate the nuances of a production codebase. Tutorials are an important learning tool for beginners, but can&#39;t possibly prepare you for everything you would encounter within an application like Artsy&#39;s.&lt;/p&gt;

&lt;p&gt;I was lucky to have a mentor at Artsy to help me get started, and I wrote this post to pass along the lessons I learned. This is meant to be a guide for iOS beginners to get to know an open source production codebase. I&#39;ll cover the Xcode project organization and where to find things.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;hr /&gt;

&lt;p&gt;Artsy names its GitHub repositories after physics terms. iOS apps all start with the letter &#39;e&#39;, and this one is called &lt;a href=&quot;https://github.com/artsy/eigen&quot;&gt;eigen&lt;/a&gt;. As Artsy&#39;s consumer-facing iOS app, users refer to it simply as &quot;Artsy&quot;.&lt;/p&gt;

&lt;p&gt;Eigen is divided into two projects: one that contains all eigen-specific code, and one that contains reusable libraries. We organize these two components using something called an Xcode workspace.&lt;/p&gt;

&lt;p&gt;The first time I opened eigen, the project wouldn&#39;t compile because it didn&#39;t have access to the components in the other project, the one with the libraries. To make sure that all the components you need are accessible in one place, Xcode organizes these projects under one workspace.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/2015-06-04-an-eigenstate-of-mind/structure.png&quot; /&gt;&lt;/center&gt;


&lt;p&gt;The Artsy project contains all the eigen-specific code. It&#39;s where you&#39;ll find all the classes, models, views, controllers, and resources like images and sounds. It&#39;s what makes eigen &lt;em&gt;eigen&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The Pods project is where the open source libraries used by eigen are kept. Artsy uses something called CocoaPods to organize these libraries, but that&#39;s beyond the scope of this post. For more information about CocoaPods, check out &lt;a href=&quot;https://cocoapods.org/about&quot;&gt;their site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Xcode organizes the different files of the Artsy project into folders. Let&#39;s take a look at each one.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/2015-06-04-an-eigenstate-of-mind/folders.png&quot; /&gt;&lt;/center&gt;


&lt;p&gt;The &lt;strong&gt;Documentation&lt;/strong&gt; folder contains instructions for iOS developers, such as how to started with eigen, how to deploy the application, and its changelog.&lt;/p&gt;

&lt;p&gt;Note that documentation isn&#39;t always part of the actual Xcode project. Sometimes it lives in the Finder folder, but Xcode doesn&#39;t know about it.&lt;/p&gt;

&lt;p&gt;The next folder is the &lt;strong&gt;Artsy&lt;/strong&gt; folder. This is aptly named since it contains only the code and resources specific to the Artsy iOS app. This is where you would find anything that the user would interact with: the user interface, images, and the inner workings of our app. Most work of our work is done here.&lt;/p&gt;

&lt;p&gt;Our automated tests live in the &lt;strong&gt;Artsy Tests&lt;/strong&gt; folder. Since we have multiple developers working on this app, automated tests ensure that when someone changes something, the app continues to function as expected.&lt;/p&gt;

&lt;p&gt;I find tests reassuring. As a beginner, tests provide peace of mind by letting me know if the changes I make have repercussions elsewhere.&lt;/p&gt;

&lt;p&gt;Those are the important folders, but there are a few others you may be curious about.&lt;/p&gt;

&lt;p&gt;Artsy has experimented with an Apple Watch extension, but it&#39;s nothing we&#39;ve shipped yet. The Artsy WatchKit folders don&#39;t contribute to the rest of the application, and can be ignored. For now.&lt;/p&gt;

&lt;p&gt;You&#39;ll notice the Frameworks, Products, and Pods folders. All three of them are generated by either Xcode or CocoaPods. They support the app, but a developer doesn&#39;t often work with them or their contents.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;This is a nice introduction to the structure of eigen, but this is only how &lt;em&gt;we&lt;/em&gt; do things. Just like how tutorials helping you get started aren&#39;t necessarily applicable in the workplace, this guide isn&#39;t a applicable to every project.&lt;/p&gt;

&lt;p&gt;I hope this makes eigen less intimidating. I had a mentor to walk me through things, and I hope this guide helps you explore the codebase, too. If you have any questions about how we do things, &lt;a href=&quot;https://github.com/artsy/eigen/issues/new&quot;&gt;get in touch&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Thu, 04 Jun 2015 18:00:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/06/04/an-eigenstate-of-mind/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/06/04/an-eigenstate-of-mind/</guid>
        
        
        <category>beginners</category>
        
        <category>eigen</category>
        
        <category>ios</category>
        
        <category>mobile</category>
        
        <category>open source</category>
        
        <category>oss</category>
        
      </item>
    
      <item>
        <title>How we Open Source&#39;d Eigen</title>
        <description>&lt;p&gt;It was 95 days ago, and I was sitting before of my computer in NYC. I loaded my terminal, opened &lt;a href=&quot;https://taptalk.me&quot;&gt;TapTalk&lt;/a&gt; on my phone, tapped on my collegue &lt;a href=&quot;http://ashfurrow.com&quot;&gt;Ash&#39;s&lt;/a&gt; avatar and held my finger there. I paused, this moment was a long time, it was worth waiting. I switched the camera from my face to the screen with the terminal open.&lt;/p&gt;

&lt;p&gt;This moment was probably the most nervous I had been in years. It showed &lt;code&gt;git push origin master&lt;/code&gt;. I said &quot;it&#39;s happening.&quot; I hit return. A new era in the Artsy mobile team had started. A few minutes later, I wrote this tweet:&lt;/p&gt;

&lt;center&gt;
&lt;blockquote class=&quot;twitter-tweet&quot; data-cards=&quot;hidden&quot; lang=&quot;en&quot;&gt;&lt;p&gt;We have open source’d the &lt;a href=&quot;https://twitter.com/artsy&quot;&gt;@Artsy&lt;/a&gt; iOS app.&amp;#10;&amp;#10;&lt;a href=&quot;https://t.co/c1SWtHmUgy&quot;&gt;https://t.co/c1SWtHmUgy&lt;/a&gt;&amp;#10;&amp;#10;🎉&lt;/p&gt;&amp;mdash; Ørta (@orta) &lt;a href=&quot;https://twitter.com/orta/status/558395611754819586&quot;&gt;January 22, 2015&lt;/a&gt;&lt;/blockquote&gt;
&lt;/center&gt;


&lt;p&gt;Let&#39;s go over the process we went through to get to that point.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Credit where credit is due, when we were &lt;a href=&quot;/blog/2014/11/13/eidolon-retrospective/&quot;&gt;working on Eidolon&lt;/a&gt;, our CTO &lt;a href=&quot;http://code.dblock.org/&quot;&gt;dB&lt;/a&gt; just casually tossed the idea that, really, Eigen should be open source too. Eigen is the code name for the &lt;a href=&quot;http://iphone.artsy.net/&quot;&gt;Artsy iOS app&lt;/a&gt;. This totally threw me for a loop, we were only just getting to a point where we could build an app from scratch in the open. Trying to get a project that had existed for years and had its own momentum converted would take a lot of thinking about.&lt;/p&gt;

&lt;p&gt;We devoted time at the end of 2014 to understand what the constraints were for getting the app opened. From a purely functional perspective we would have to start with a &lt;a href=&quot;https://github.com/artsy/mobile/issues/11&quot;&gt;drastic decision&lt;/a&gt; around the repo itself.&lt;/p&gt;

&lt;h3&gt;The Repo&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/2015-04-28-open-sourcing-your-apps/rise-and-fall.png&quot; alt=&quot;Rise And Fall&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We opted to go for a total repo switch, removing all history. There were a lot of places where keys could have been hiding within the app. To get this done we migrated the existing &lt;code&gt;eigen&lt;/code&gt; to &lt;code&gt;eigen-private&lt;/code&gt; on github, and did a fresh &lt;code&gt;git init&lt;/code&gt;. People who have joined Artsy Mobile post-OSS have never even cloned the &lt;code&gt;eigen-private&lt;/code&gt; repo. So I feel good about this call.&lt;/p&gt;

&lt;p&gt;We used the last few moments of the private repo to remove all of the default Apple copyright notices. We didn&#39;t feel they added anything on top of the git history, and made it feel like the founders of a project were more important than anyone working on improvements.&lt;/p&gt;

&lt;p&gt;It wasn&#39;t all smooth sailing with respect to the repo switch however. As the switch happened the WatchKit came out, and we had devoted quite a lot of time to building an app in it. Given that you &lt;a href=&quot;http://www.elischiff.com/blog/2015/3/24/fear-of-apple&quot;&gt;can&#39;t predict Apple&lt;/a&gt;&#39;s reactions, and you couldn&#39;t ship an app with an embedded watch app to the store, we opted to work on a branch from our private repo. &lt;a href=&quot;https://github.com/artsy/eigen/pull/302&quot;&gt;For months&lt;/a&gt;. In the end it was easier to have the two folders next to each other, then copy &amp;amp; paste over all the files and to set all the settings in the Xcode project again.&lt;/p&gt;

&lt;p&gt;One of the things that we found a bit sad about the transition to a new repo, is that it&#39;s hard to give past contributors recognition for their work. One of the ways we&#39;ve worked around this is by having a file &lt;a href=&quot;https://github.com/artsy/eigen/pull/409&quot;&gt;documenting past contributors&lt;/a&gt; in our repo.&lt;/p&gt;

&lt;h3&gt;Docs&lt;/h3&gt;

&lt;p&gt;We had to significantly update our README, and a lot of the process around bootstrapping. We wanted to reduce the friction to actually trying the app as much as possible. It&#39;s easy to look at the source on github but to be able to get it up and running quickly should be a really high priority. So our README is based on getting it up and running as an OSS project, not for someone internal who may push betas/releases.&lt;/p&gt;

&lt;p&gt;When we opened the repo, there &lt;a href=&quot;https://github.com/artsy/eigen/pulls?q=is%3Apr+is%3Aclosed+sort%3Acreated-asc&quot;&gt;were a lot&lt;/a&gt; of documentation fix PRs - thanks &lt;em&gt;segiddins&lt;/em&gt;, &lt;em&gt;neonichu&lt;/em&gt; and &lt;em&gt;dkhamsing&lt;/em&gt;. They have low barriers to entry, and fun to make for people looking through big projects. We still get them pretty regularly.&lt;/p&gt;

&lt;h3&gt;Secrets&lt;/h3&gt;

&lt;p&gt;There aren&#39;t large sections of the our app that we are keeping secret, though we have discussed ways in which we could. There is however a nice solution to having something different for OSS vs your internal team, API compatible CocoaPods. We &lt;a href=&quot;/blog/2014/06/20/artsys-first-closed-source-pod/&quot;&gt;do this&lt;/a&gt; for our fonts in all apps. We&#39;ve talked extensively about our &lt;a href=&quot;/blog/2015/01/21/cocoapods-keys-and-CI/&quot;&gt;tools for keeping&lt;/a&gt; API keys secret, so no need to go over that twice.&lt;/p&gt;

&lt;p&gt;Other than that we had already been opening any good abstractions as CocoaPods for anyone to use. All our dependencies were packaged outside of the app, we had no crazy internal SDKs or anything worth hiding within the codebase.&lt;/p&gt;

&lt;h3&gt;Selling the idea&lt;/h3&gt;

&lt;p&gt;It&#39;s one thing to think that it&#39;s possible, it&#39;s another to do it. I&#39;m glad that I am in a position where I can enact change. I felt no resistence in the process. I kept offering potential avenues for someone to stop me, too. I emailed the entire team as I started the process 2 weeks before it happened, I talked to anyone who might write issues or contribute from the design team. As I got further along the process and sent another email out that it was going to happen tomorrow. All I got were 👍 and 🎉s in &lt;a href=&quot;https://itunes.apple.com/us/app/gifs/id961850017?l=en&amp;amp;mt=12&quot;&gt;GIF&lt;/a&gt; form. So I kept moving forwards till that tweet above.&lt;/p&gt;

&lt;p&gt;From our dev team&#39;s perspective, this is not a brave new world. Our website, &lt;a href=&quot;https://github.com/artsy/force-public&quot;&gt;force&lt;/a&gt;, is open source. Though they operate under different constraints.&lt;/p&gt;

&lt;p&gt;From the perspective of Artsy, even though opening our code aligns very strongly with our &lt;a href=&quot;/blog/2015/03/31/the-culture-of-openness-artsy-mobile/&quot;&gt;values of openness&lt;/a&gt;, we are still a company. Opening up our codebase lets our competitors see what we&#39;re up to in advance, and &lt;a href=&quot;http://code.dblock.org/2015/02/09/becoming-open-source-by-default.html&quot;&gt;closed source&lt;/a&gt; is still the norm for apps. Opening our code and process is also opening ourselves to criticism.&lt;/p&gt;

&lt;h3&gt;Evolution of the team&lt;/h3&gt;

&lt;p&gt;3 months on the way we operate has changed. We&#39;re a lot more organized, and the Eigen repo is easily the most well run project on the mobile team. It has &lt;a href=&quot;https://github.com/artsy/eigen/milestones&quot;&gt;active milestones&lt;/a&gt;, that represent long term goals and the current sprint. We discuss a lot of the interesting cultural choices publicly on &lt;a href=&quot;https://github.com/artsy/eigen/issues/221&quot;&gt;issues&lt;/a&gt; and in our &lt;a href=&quot;https://github.com/artsy/mobile/issues&quot;&gt;mobile team repo&lt;/a&gt;. Having this app in the open, and the experience of doing so has also improved our workflow on other apps. Eidolon for example now runs with a similar structure.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2015-04-28-open-sourcing-your-apps/sprint-planning-issue.png&quot; alt=&quot;Sprint Planning Issue&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We found that people would use our issue structure to &lt;a href=&quot;https://github.com/artsy/eigen/issues/324&quot;&gt;ask&lt;/a&gt; &lt;a href=&quot;https://github.com/artsy/eigen/issues/313&quot;&gt;questions&lt;/a&gt; about Eigen itself. This was an unexpected positive outcome. It gave us a chance to re-think decisions and try to understand how we came to certain decisions that might not be documented anywhere.&lt;/p&gt;

&lt;p&gt;Our culture improved by open sourcing our app. As individuals, it&#39;s great to know that our work goes towards helping the larger community and all engineers love having a green profile.&lt;/p&gt;

&lt;center&gt;
&lt;img src=&quot;/images/2015-04-28-open-sourcing-your-apps/staying-green.png&quot; alt=&quot;Staying Green&quot;&gt;
&lt;/center&gt;


&lt;p&gt;If you&#39;ve not explored the idea of open sourcing your app, you should. We&#39;re happy to help out - &lt;a href=&quot;https://github.com/artsy/mobile/issues/new&quot;&gt;create an issue&lt;/a&gt;. Or contact me personally, my email is on my &lt;a href=&quot;https://github.com/orta&quot;&gt;github profile&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Apr 2015 00:00:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/04/28/how-we-open-sourced-eigen/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/04/28/how-we-open-sourced-eigen/</guid>
        
        
        <category>eigen</category>
        
        <category>ios</category>
        
        <category>keys</category>
        
        <category>mobile</category>
        
        <category>open source</category>
        
        <category>oss</category>
        
      </item>
    
      <item>
        <title>So You Want an SSL Certificate? A Pragmatic Handbook</title>
        <description>&lt;p&gt;Obtaining, reissuing and installing SSL certificates across various pieces of Artsy infrastructure (read about our tech stack &lt;a href=&quot;/blog/2015/03/23/artsy-technology-stack-2015/&quot;&gt;here&lt;/a&gt;) is a mind-numbing excercise dreaded by every platform engineer. Few people really understand what&#39;s going on, installing SSL certificates is right up there in the opaque world of user-unfriendliness, along with onboarding a new iOS developer in an organization with Xcode.&lt;/p&gt;

&lt;p&gt;Still, it can be done - below is our cookbook.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/images/2015-04-09-so-you-want-an-ssl-certificate/ev.png&#39;&gt;
&lt;img src=&#39;/images/2015-04-09-so-you-want-an-ssl-certificate/cert.png&#39;&gt;&lt;/p&gt;

&lt;!-- more --&gt;


&lt;h2&gt;Buying an SSL Certificate&lt;/h2&gt;

&lt;p&gt;We buy our SSL certificates from &lt;a href=&quot;https://www.rapidsslonline.com&quot;&gt;rapidsslonline.com&lt;/a&gt;. You&#39;ll be immediately overwhelmed and confused by the many brand names, including Symantec, RapidSSL, Thawte and GeoTrust and the mentions of &quot;no extra cost&quot;, &quot;cheap&quot; and &quot;quality&quot;. We buy two kinds of GeoTrust certificates: &lt;em&gt;GeoTrust True BusinessID with Extended Validation&lt;/em&gt; and &lt;em&gt;GeoTrust True BusinessID Wildcard&lt;/em&gt;. We typically get those for a at least 2 years, trying to balance the pain of installing them with the time it takes our short collective memory to forget how to obtain and deploy an SSL cert.&lt;/p&gt;

&lt;p&gt;When buying extended validation certificates you will need an administrative and a technical contact, a working company phone number and a public entry such as yellow pages. You&#39;ll need to begin by making a CSR, which is explained below.&lt;/p&gt;

&lt;h3&gt;GeoTrust SAN True BusinessID with Extended Validation&lt;/h3&gt;

&lt;p&gt;This certificate lets us have the green &lt;em&gt;Artsy Inc.&lt;/em&gt; pictured above and to list multiple domains - SAN stands for &lt;em&gt;Subject Alternative Names&lt;/em&gt;. To obtain it your company must have a public record with the Better Business Bureau or &lt;a href=&quot;http://www.yellowpages.com/new-york-ny/mip/art-sy-inc-467372877?lid=467372877&quot;&gt;YellowPages.com&lt;/a&gt; with a working phone number. You will have to fill out an &lt;a href=&quot;https://www.geotrust.com/support/true-businessid/ev-validation-requirements/acknowledgement-agreement.pdf&quot;&gt;Acknowledgement Agreement&lt;/a&gt;, that will make everything seem more legit. This certificate requires you to list hostnames. You can purchase additional names when needed and reissue the certificate - we typically include &lt;em&gt;www.artsy.net&lt;/em&gt;, &lt;em&gt;m.artsy.net&lt;/em&gt;, etc.&lt;/p&gt;

&lt;h3&gt;GeoTrust True BusinessID Wildcard&lt;/h3&gt;

&lt;p&gt;This certificate can be installed on &lt;em&gt;anything.example.com&lt;/em&gt; which is great for both test and production systems - we use SSL everywhere.&lt;/p&gt;

&lt;h2&gt;Obtaining Certificates&lt;/h2&gt;

&lt;h3&gt;Installing OpenSSL&lt;/h3&gt;

&lt;p&gt;Install OpenSSL (typically via &lt;code&gt;brew install openssl&lt;/code&gt;).&lt;/p&gt;

&lt;h3&gt;Organizing Files and Keeping it Safe&lt;/h3&gt;

&lt;p&gt;You will want to organize your certificate files into folders, by name, type and date. We typically place everything in a shared Dropbox folder that is only accessible to engineering operations. Ours looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/images/2015-04-09-so-you-want-an-ssl-certificate/files.png&#39;&gt;&lt;/p&gt;

&lt;h2&gt;Generating CSRs&lt;/h2&gt;

&lt;p&gt;For the examples below we&#39;ll use an &lt;em&gt;example.com&lt;/em&gt; domain.&lt;/p&gt;

&lt;p&gt;The first step is to generate a &lt;em&gt;Certificate Signing Request&lt;/em&gt; (CSR). The important information in the CSR is your location and the e-mail address.&lt;/p&gt;

&lt;h3&gt;Wildcard Certificates&lt;/h3&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ openssl req -new -newkey rsa:2048 -nodes -keyout example.com.key -out example.com.csr
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Generating a 2048 bit RSA private key
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;....................+++
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;..............+++
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;writing new private key to &#39;example.com.key&#39;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;-----
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;You are about to be asked to enter information that will be incorporated
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;into your certificate request.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;What you are about to enter is what is called a Distinguished Name or a DN.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;There are quite a few fields but you can leave some blank
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;For some fields there will be a default value,
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;If you enter &#39;.&#39;, the field will be left blank.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;-----
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Country Name (2 letter code) [AU]:US
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;State or Province Name (full name) [Some-State]:New York
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Locality Name (eg, city) []:New York
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Organization Name (eg, company) [Internet Widgits Pty Ltd]:Example, Inc.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Organizational Unit Name (eg, section) []:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Common Name (eg, YOUR name) []:*.example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Email Address []:it@example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Please enter the following &#39;extra&#39; attributes
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;to be sent with your certificate request
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;A challenge password []:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;An optional company name []:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;The above creates two files: &lt;em&gt;example.com.csr&lt;/em&gt; (the CSR) and &lt;em&gt;example.com.key&lt;/em&gt; (a private key to sign the CSR and the future certificate).&lt;/p&gt;

&lt;h3&gt;SAN Certificates&lt;/h3&gt;

&lt;p&gt;This is slightly different than for a wildcard certificate. From a new folder, copy the OpenSSL configuration file.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ cp /System/Library/OpenSSL/openssl.cnf .&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Edit the file as follows.&lt;/p&gt;

&lt;p&gt;Inside the &lt;em&gt;v3_req&lt;/em&gt; section uncomment &lt;em&gt;req_extensions&lt;/em&gt;. This will tell OpenSSL to include this section in the CSR.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;[req]
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;req_extensions = v3_req&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Create the &lt;em&gt;v3_req&lt;/em&gt; section with the following information along with the DNS names that will be used for the EV certificate. This can be changed later, and additional names can be bought, but will require re-issuing the certificate.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;[ v3_req ]
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;basicConstraints = CA:FALSE
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;keyUsage = nonRepudiation, digitalSignature, keyEncipherment
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;subjectAltName = @alt_names
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;[alt_names]
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;DNS.1 = example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;DNS.2 = www.example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;DNS.3 = m.example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;DNS.4 = api.example.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Generate the CSR.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ openssl req -new -out san.example.com.csr -newkey rsa:2048 -nodes -keyout san.example.com.key -config openssl.cnf
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Country Name (2 letter code) [US]:US
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;State or Province Name (full name) [New York]:New York
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Locality Name (eg, city) []:New York
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Organization Name (eg, company) [Example, Inc.]:Example, Inc.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Organizational Unit Name (eg, section) []:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Common Name (eg, YOUR name) []:example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Email Address []:it@example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Please enter the following &#39;extra&#39; attributes
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;to be sent with your certificate request
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;A challenge password []:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;An optional company name []:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;This creates &lt;em&gt;san.example.com.csr&lt;/em&gt; and &lt;em&gt;san.example.com.key&lt;/em&gt;. Check that it includes the correct information.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ openssl req -text -noout -in san.example.com.csr
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Subject: C=US, ST=New York, L=New York, O=Example, Inc./emailAddress=it@example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Requested Extensions:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  X509v3 Basic Constraints:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    CA:FALSE
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  X509v3 Key Usage:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Digital Signature, Non Repudiation, Key Encipherment
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  X509v3 Subject Alternative Name:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    DNS:example.com, DNS:www.example.com, DNS:m.example.com, DNS:api.example.com&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;h2&gt;Buying the Certificate&lt;/h2&gt;

&lt;p&gt;When buying a certificate you will be asked to copy-paste the contents of the CSR generated above. There will be some back-and-forth for the verification process over e-mail and phone. The GeoTrust authenticator will be happy to hear that your yellow pages listing&#39;s phone number matches their records.&lt;/p&gt;

&lt;h2&gt;Certificate E-Mail&lt;/h2&gt;

&lt;p&gt;Once issued you will receive an e-mail with the certificate. It contains the web server certificate (save it as &lt;em&gt;example.com.crt&lt;/em&gt;) and an intermediate certificate (save it as &lt;em&gt;example.com.intermediate.crt&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;For RapidSSL you will also need more intermediate CAs, currently obtained from &lt;a href=&quot;https://knowledge.rapidssl.com/support/ssl-certificate-support/index?page=content&amp;amp;id=AR1548&quot;&gt;here&lt;/a&gt;. You can get them as a bundle (we save it as &lt;em&gt;intermediate.crt&lt;/em&gt;) or separately (we save these as &lt;em&gt;intermediate-primary.crt&lt;/em&gt; and &lt;em&gt;intermediate-secondary.crt&lt;/em&gt;).&lt;/p&gt;

&lt;h2&gt;Installing Certificates&lt;/h2&gt;

&lt;h3&gt;Heroku&lt;/h3&gt;

&lt;p&gt;You need the &lt;a href=&quot;https://devcenter.heroku.com/articles/ssl-endpoint&quot;&gt;SSL endpoint addon&lt;/a&gt; to upload the certificate to Heroku. The certificate must be a concatenation of your certificate and all intermediaries. For our RapidSSL certificates this is usually made as follows.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ cat example.com.crt intermediate.crt &amp;gt; concatenated.crt
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;$ heroku certs:add concatenated.crt example.com.key --app example-app
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Adding SSL endpoint to example-app... done
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;example-app now served by tokyo-7171.herokussl.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Certificate details:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    subject: /serialNumber=xyz/OU=GT65834870/OU=See www.rapidssl.com/resources/cps (c)13/OU=Domain Control Validated - RapidSSL(R)/CN=*.example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    start date: 2013-01-13 18:21 EST
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    expire date: 2014-01-17 01:55 EST
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    common name(s): *.example.com, example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    issuer: /serialNumber=yz/OU=GT65834870/OU=See www.rapidssl.com/resources/cps (c)13/OU=Domain Control Validated - RapidSSL(R)/CN=*.example.com
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    SSL certificate is verified by a root authority.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;If you have a certificate already installed, update it.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ heroku certs:update concatenated.crt example.com.key --app example-app&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Heroku is known to patch common certificate issues during this process, such as certificates listed out of order.&lt;/p&gt;

&lt;h3&gt;OpsWorks&lt;/h3&gt;

&lt;p&gt;OpsWorks offers 3 SSL fields in the application configuration (choose &lt;em&gt;Apps&lt;/em&gt;, then &lt;em&gt;Edit&lt;/em&gt; the app):&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/images/2015-04-09-so-you-want-an-ssl-certificate/opsworks.png&#39;&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;SSL Certificate&lt;/em&gt; should be the same contents of the &lt;em&gt;concatenated.crt&lt;/em&gt; we made above.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;SSL Certificate key&lt;/em&gt; should be the contents of &lt;em&gt;example.com.key&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;SSL Certificates of Certification Authorities&lt;/em&gt; should be left empty.&lt;/p&gt;

&lt;p&gt;The OpsWorks application will need to be redeployed for the new certificates to be installed.&lt;/p&gt;

&lt;h3&gt;AWS ELB&lt;/h3&gt;

&lt;p&gt;Login to AWS, go to &lt;em&gt;EC2 Instances&lt;/em&gt;, click on &lt;em&gt;Load Balancers&lt;/em&gt;, find your load-balancer and choose the &lt;em&gt;Listeners&lt;/em&gt; tab. You can upload or choose a certificate here.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/images/2015-04-09-so-you-want-an-ssl-certificate/elb.png&#39;&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Private Key&lt;/em&gt; should be &lt;em&gt;example.com.key&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Public Key Certificate&lt;/em&gt; should be the contents of &lt;em&gt;example.com.crt&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Certificate Chain&lt;/em&gt; is the most problematic, it needs to list the entire chain, in our case it&#39;s a concatenation of &lt;em&gt;example.com.intermediate.crt&lt;/em&gt;, then &lt;em&gt;intermediate-primary.crt&lt;/em&gt;, and the root certificate for issuer of the latter, which is the Equifax Secure Certificate Authority from &lt;a href=&quot;https://www.geotrust.com/resources/root-certificates/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When the chain is incorrect the generic error message is &quot;Unable to validate the certificate chain.&quot; It took us a few tries and a bit of help from the &lt;a href=&quot;https://forums.aws.amazon.com/thread.jspa?threadID=175691&quot;&gt;AWS forums&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Reissuing a Certificate&lt;/h2&gt;

&lt;p&gt;Recently we had to upgrade our certificates from those signed using a SHA-1 hash algorithm to those signed with the SHA-256 algorithm, and had to change DNS names in the SAN certificate.&lt;/p&gt;

&lt;p&gt;Find the order on &lt;a href=&quot;https://www.rapidsslonline.com/client/orders.aspx&quot;&gt;RapidSSLOnline&lt;/a&gt; (you will likely have to change the start date of your search), and follow the link to reissue the certificate at the bottom. Create a new CSR, as for any new certificate. No need to choose a specific web server type and make sure to check SHA-256 for the signature method. You will need to go through all the same motions for a reissued certificate as for a new one.&lt;/p&gt;

&lt;h2&gt;Verifying  a Certificate&lt;/h2&gt;

&lt;p&gt;Verify that your certificate is correct and contains all the right intermediaries.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;$ openssl s_client -CApath /etc/ssl/certs/ -connect example.com:443
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;SSL-Session:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Protocol  : TLSv1
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Cipher    : AES256-SHA
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Session-ID: A746CC85733F16630CA9CBD12FD1A0379CEC22649C1558D12B575529815F8E67
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Session-ID-ctx:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Master-Key: 09EBFF52D4F673FA0FA5B6BD1151722CF96197711430BCA35B01D6AA2803F8904D834F4EEB151E6354601FEC55CDFDCA
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Key-Arg   : None
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Start Time: 1428507204
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Timeout   : 300 (sec)
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    Verify return code: 0 (ok)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;You want the &lt;em&gt;Verify return code: 0 (ok)&lt;/em&gt; message at the bottom. Pay attention to other errors, a common one may be &lt;em&gt;verify error:num=19:self signed certificate in certificate chain&lt;/em&gt;, which can be ignored and &lt;em&gt;verify error:num=20:unable to get local issuer certificate&lt;/em&gt;, which is a real problem and means you&#39;re missing an intermediate certificate.&lt;/p&gt;

&lt;p&gt;A simpler way to check is to use the &lt;a href=&quot;https://ssltools.geotrust.com/checker/views/certCheck.jsp&quot;&gt;GeoTrust SSL Checker&lt;/a&gt;. The certificate chain can go all the way up to the root, although including the root is not &lt;a href=&quot;http://security.stackexchange.com/questions/65332/ssl-root-certificate-optional&quot;&gt;technically necessary or recommended&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/images/2015-04-09-so-you-want-an-ssl-certificate/chain-equifax.png&#39;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/images/2015-04-09-so-you-want-an-ssl-certificate/chain-geotrust.png&#39;&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate>
        <link>http://artsy.net/blog/2015/04/09/so-you-want-an-ssl-certificate/</link>
        <guid isPermaLink="true">http://artsy.net/blog/2015/04/09/so-you-want-an-ssl-certificate/</guid>
        
        
        <category>devops</category>
        
        <category>ssl</category>
        
      </item>
    
  </channel>
</rss>
