<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artsy Engineering</title>
    <description></description>
    <link>http://artsy.github.io/</link>
    <atom:link href="http://artsy.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 29 Jan 2018 20:58:48 +0000</pubDate>
    <lastBuildDate>Mon, 29 Jan 2018 20:58:48 +0000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>In the &#39;Whelp!&#39; of the Great Wave</title>
        <description>&lt;p&gt;This past week has found me working on a brand new Rails project. Now, if I was building this project for my personal needs, I would without a doubt deploy it to &lt;a href=&quot;https://www.heroku.com&quot;&gt;Heroku&lt;/a&gt; – for both the ease of use and the high level of abstraction that &lt;a href=&quot;https://www.heroku.com/dynos&quot;&gt;Dynos&lt;/a&gt; afford. But I&#39;m not building this for myself, I&#39;m building it for my team.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;While Heroku is easy to get started with, costs scale up quickly. And, as described in our &lt;a href=&quot;http://artsy.github.io/blog/2017/04/14/artsy-technology-stack-2017/&quot;&gt;2017 tech stack post&lt;/a&gt;, our team is moving more and more towards &lt;a href=&quot;https://kubernetes.io&quot;&gt;Kubernetes&lt;/a&gt;. I had almost no experience with Kubernetes before last week, and I was intimidated by the Kubernetes web UI. With some help from my colleague Isac, who wrote the &lt;a href=&quot;https://github.com/artsy/hokusai&quot;&gt;Hokusai&lt;/a&gt; tool, I was able to get a staging environment up and running in under a day.&lt;/p&gt;

&lt;p&gt;But let&#39;s step back first.&lt;/p&gt;

&lt;p&gt;My background is in iOS software development, so spinning up new servers isn&#39;t something I do often. When I &lt;em&gt;do&lt;/em&gt;, I usually use Heroku. After deploying to it, it feels like Kubernetes is a kind of hosted Heroku: it handles scaling up instances, managing worker/db/other instances, load-balancers, environment variables, promoting from staging to production – all that stuff. But Kubernetes&#39; sophistication comes with a sophisticated user interface.&lt;/p&gt;

&lt;p&gt;So basically, Hokusai is to Kubernetes what the Heroku command-line tool is to the Heroku platform.&lt;/p&gt;

&lt;p&gt;Hokusai provides &lt;a href=&quot;https://github.com/artsy/hokusai/blob/master/docs/Command_Reference.md&quot;&gt;a bunch of commands&lt;/a&gt; for interacting with the Kubernetes cluster. Deploying my new Rails app to Kubernetes involved a few steps, but most of the work was handled automatically by Hokusai.&lt;/p&gt;

&lt;p&gt;First, I installed and setup Hokusai locally (with required environment variables for AWS access). I then ran the following command to scaffold out everything.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;hokusai setup --aws-account-id ARTSY_ACCOUNT_ID --project-type ruby-rails
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;In addition to staging- and production-specific config files, this command creates a &lt;code&gt;Dockerfile&lt;/code&gt;. See, where Heroku uses Dynos as a high level of abstraction, Kubernetes uses &lt;a href=&quot;https://www.docker.com&quot;&gt;Docker&lt;/a&gt; images (as a slightly less high a level of abstraction). Docker is a technology I&#39;m familiar with, and I managed to configure the generated &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;hokusai/*.yml&lt;/code&gt; config files pretty quickly. At this point, I could run &lt;code&gt;hokusai dev start&lt;/code&gt; to start a development Docker container, or &lt;code&gt;hokusai test&lt;/code&gt; to run RSpec tests. Nothing fancy yet, but that verifies that everything is working so far.&lt;/p&gt;

&lt;p&gt;Next up was to use Hokusai in our CI environment. &lt;a href=&quot;https://circleci.com/docs/2.0/&quot;&gt;Circle CI 2.0&lt;/a&gt; is very Docker-oriented, so we set up everything using their &lt;a href=&quot;https://circleci.com/docs/2.0/workflows/&quot;&gt;Workflows&lt;/a&gt;. This is a much higher level of abstraction for CI configuration than I&#39;m used to, but I got the hang of it quickly. I created a job to run RSpec tests through Hokusai, a job to run &lt;a href=&quot;http://danger.systems&quot;&gt;Danger&lt;/a&gt;, a job to build and push a Docker image to our S3 bucket, and a job to deploy that image to the Kubernetes cluster. Finally, I added the workflows to build and deploy automatically after successful builds on the &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt;

&lt;p&gt;Here&#39;s a slightly redacted copy of our Circle config:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;37&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;38&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;39&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;40&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;41&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;42&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;43&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;44&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;45&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;46&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;47&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;48&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;49&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;50&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;51&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;52&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;53&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;54&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;55&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;56&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;57&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;58&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;59&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;60&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;61&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;62&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;63&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;64&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;65&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;66&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;67&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;68&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;69&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;70&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;71&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;72&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;73&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;74&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;75&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;76&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;yaml&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;artsy/hokusai:0.4.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;working_directory&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/REPO_NAME&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;add_ssh_keys&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;checkout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;setup_remote_docker&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hokusai test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;danger&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;circleci/ruby:2.5.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;working_directory&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;~/apogee&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;checkout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;restore_cache&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;v1-dependencies-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;v1-dependencies-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Install Dependencies&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;bundle install --with=ci --without development test --path vendor/bundle&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;save_cache&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;./vendor/bundle&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;v1-dependencies-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Danger&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;bundle exec danger&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;artsy/hokusai:0.4.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;add_ssh_keys&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;checkout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;setup_remote_docker&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Push&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hokusai registry push --tag $CIRCLE_SHA1 --force --overwrite&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;artsy/hokusai:0.4.0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;add_ssh_keys&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;checkout&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Configure&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hokusai configure --kubectl-version 1.6.3 --s3-bucket BUCKET_NAME --s3-key k8s/config --platform linux&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Deploy&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hokusai staging deploy $CIRCLE_SHA1&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;workflows&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;danger&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;l-Scalar-Plain&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;              &lt;span class=&quot;l-Scalar-Plain&quot;&gt;ignore&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;l-Scalar-Plain&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;              &lt;span class=&quot;l-Scalar-Plain&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;requires&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;l-Scalar-Plain&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;              &lt;span class=&quot;l-Scalar-Plain&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;master&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;l-Scalar-Plain&quot;&gt;requires&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;push&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;The initial build on &lt;code&gt;master&lt;/code&gt; built and pushed the server image, but the deploy failed. This is an &lt;a href=&quot;https://github.com/artsy/hokusai/issues/50&quot;&gt;issue&lt;/a&gt; that&#39;s being tracked in Hokusai – I&#39;m sure it&#39;ll get addressed on the road to a 1.0. To explain, it&#39;s a Catch-22: we can&#39;t deploy until we have an image, but we only want to build images on CI, so the first deploy on CI is expected to fail.&lt;/p&gt;

&lt;p&gt;Once the initial image was pushed, I ran &lt;code&gt;hokusai staging env create&lt;/code&gt; locally to create the staging environment. I was able to set staging environment variables using &lt;code&gt;hokusai staging env set NAME=VALUE&lt;/code&gt;, but unlike Heroku, I had to manually restart the server using &lt;code&gt;hokusai staging refresh&lt;/code&gt; after adding the environment variables.&lt;/p&gt;

&lt;p&gt;At this point, my server was working behind a load balancer, but I still had to add a CNAME record for the &lt;code&gt;really-long-url.elb.amazonaws.com&lt;/code&gt; domain name. After some DNS propagation, everything worked fine!&lt;/p&gt;

&lt;p&gt;So that&#39;s it! I was apprehensive about moving to a totally new (to me) deploy infrastructure. But, it&#39;s a direction our engineering team has decided to go in, and there&#39;s no better time to migrate to a new deploy infrastructure than before your first deploy. With some encouragement and help from my team, I was able to get the entire thing working in under a day (next time will be a lot faster).&lt;/p&gt;

&lt;p&gt;I&#39;m very encouraged by Kubernetes. It offers really slick, enterprise-level scaling features in an open source tool. And I&#39;ve heard really great things about its community practices. Kubernetes is, however, a very specialized tool and its web interface doesn&#39;t make any sense to me. With Hokusai, I got a very programmer-friendly interface for a very DevOps-focused tool.&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Jan 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/01/24/kubernetes-and-hokusai/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/01/24/kubernetes-and-hokusai/</guid>
        
        
        <category>danger</category>
        
        <category>hokusai</category>
        
        <category>kubernetes</category>
        
        <category>open-source</category>
        
      </item>
    
      <item>
        <title>Upgrading Volt to CircleCI 2.0</title>
        <description>&lt;p&gt;I was really excited about CircleCI 2.0, especially the &lt;a href=&quot;https://circleci.com/docs/2.0/workflows/&quot;&gt;workflows
features&lt;/a&gt;. It seemed to me that with the work they had done here,
really complicated builds would be able to be configured in a way that made more
sense than on 1.0. This was something that was causing me grief on one of our
projects so I upgraded to 2.0. It was pretty hard to get green and once we did,
we decided to downgrade back to 1.0. Here&#39;s why.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Volt is the internal name for the app that our Partners use to enter information
about their artworks and artists into the Artsy platform. It&#39;s a Rails app and
has a pretty big and slow test suite. Over time, we&#39;ve ended up with a good
number of things that run during CI for this project:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://danger.systems/&quot;&gt;Danger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rubocop.readthedocs.io/&quot;&gt;RuboCop&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://prettier.io/&quot;&gt;Prettier&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://facebook.github.io/jest/&quot;&gt;Jest tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/jejacks0n/teaspoon&quot;&gt;Teaspoon tests&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rspec.info/&quot;&gt;RSpec tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some of these things are fast and some are slow. Ok, fine, really only the view
specs are slow - running them in isolation takes around 20 minutes on my laptop.&lt;/p&gt;

&lt;p&gt;My goal was to separate out the fast stuff, run that in parallel and only if all
that passed would I run the view specs. This should get feedback to developers
faster when they&#39;ve broken something and not waste time running the slowest part
of the CI stack.&lt;/p&gt;

&lt;p&gt;Artsy has 7 containers with CircleCI and Volt takes up 6 of them, so being able
to break apart a run into pieces seemed like a good thing for the wider Artsy
engineering organization too - developers working on something else would spend
less time blocked by Volt runs and developers working on Volt shouldn&#39;t notice
anything. Foreshadowing!!&lt;/p&gt;

&lt;p&gt;Here&#39;s the CircleCI 2.0 &lt;a href=&quot;https://gist.github.com/jonallured/45032779506138186973af7cb94b5363&quot;&gt;config&lt;/a&gt; I ended up with and here&#39;s a pretty picture
of what our CircleCI 2.0 builds looked like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/circle-two-oh/volt-circle-two-workflow.png&quot; alt=&quot;/images/circle-two-oh/volt-circle-two-workflow.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I&#39;m really proud of this - it&#39;s cool and it was hard to figure out!&lt;/p&gt;

&lt;p&gt;But then we lived with it and noticed something that really slowed us down. Each
rounded rect in that picture is called a job and is scheduled along with
anything else you have going on at CircleCI. Let&#39;s talk about parallelism for a
moment. Take that second column - those jobs all run in parallel, but you can
also set any of your jobs to have also be parallelised. For instance, that
&lt;code&gt;fast_spec&lt;/code&gt; job was &lt;a href=&quot;https://gist.github.com/jonallured/45032779506138186973af7cb94b5363#file-config-yml-L114&quot;&gt;set to a parallelism of 6&lt;/a&gt;. That means in order
to run all of the jobs in column two, we&#39;d have to have a total of 11
containers!&lt;/p&gt;

&lt;p&gt;While tinkering with this, I used all sorts of values for the parallelism of the
&lt;code&gt;fast_specs&lt;/code&gt; job, even trying no parallelism.&lt;/p&gt;

&lt;p&gt;It didn&#39;t seem to matter - having these jobs in a queue along with whatever
other projects consume the Artsy containers meant that once the build step was
done and the next column of jobs kicked off, only some of the jobs would be
able to run and we&#39;d be stuck waiting for more containers. But those are fast
jobs, so they would finish pretty quickly. But then again, moving on to the
&lt;code&gt;view_specs&lt;/code&gt; job would be slow because it also wanted 6 containers to run in
~10 minutes.&lt;/p&gt;

&lt;p&gt;What this meant was that all told it often took 45 minutes of wall time to
finish one of these builds even though as CircleCI reports it, they only took
like 15 minutes.&lt;/p&gt;

&lt;p&gt;We reached out to CircleCI to explain as best we could our situation but didn&#39;t
get a lot of help there. They advised that going back to 1.0 might be wise for
now. This is fine - we can&#39;t expect all of CircleCI&#39;s features are going to be
perfect for us and our particular projects.&lt;/p&gt;

&lt;p&gt;For now, we&#39;re back to CircleCI 1.0 and have tried to achieve a similar setup,
but without the glamorous workflow functionality and cool diagram. I&#39;m looking
forward to seeing how CircleCI evolves their workflow feature and hope that it
may end up in a place that can work for this project.&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Jan 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/01/19/upgrading-volt-to-circleci-two/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/01/19/upgrading-volt-to-circleci-two/</guid>
        
        
        <category>ci</category>
        
      </item>
    
      <item>
        <title>C4Q&amp;A: 2</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.c4q.nyc&quot;&gt;C4Q is&lt;/a&gt; C4Q is a non-for-profit hacker school based in NYC. We&#39;ve had members of the Artsy team help out by being TAs, running committees and steering the curriculum as Engineers in the industry for many years. In 2017, C4Q reached out to arrange a meetup between Artsy engineers and students who were learning Android and Web development. This year we ran a panel for the other half of the C4Q students who study iOS and Web.&lt;/p&gt;

&lt;p&gt;We got an entirely new set of panelists to cover similar topics as &lt;a href=&quot;/blog/2017/10/10/C4Q-QandA/&quot;&gt;last time&lt;/a&gt; - so if you&#39;re wondering
what it&#39;s like in the industry, and what makes an Artsy engineer. The video is after the link.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;center&gt;
&lt;iframe width=&#39;100%&#39; height=&#39;600&#39; src=&#39;https://www.youtube.com/embed/pp0vNokDzaQ&#39; frameborder=&#39;0&#39; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;


&lt;p&gt;Our twitter links in sitting order: &lt;a href=&quot;https://twitter.com/realmrblock&quot;&gt;@realmrblock&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sweir27&quot;&gt;@sweir27&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/yuki24&quot;&gt;@yuki24&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/cychi1210&quot;&gt;@cychi1210&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/orta&quot;&gt;@orta&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/acjay1&quot;&gt;@acjay1&lt;/a&gt; let us know if you have any more questions.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Jan 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/01/10/C4Q-QandA-two/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/01/10/C4Q-QandA-two/</guid>
        
        
        <category>culture</category>
        
        <category>event</category>
        
        <category>panel</category>
        
        <category>teaching</category>
        
      </item>
    
      <item>
        <title>Express Reloadable: Optimizing Express.js Development Speed</title>
        <description>&lt;p&gt;In &lt;a href=&quot;artsy.github.io/blog/2017/09/05/Modernizing-Force/&quot;&gt;Modernizing Force&lt;/a&gt; we discussed some of the tools we&#39;ve been working with to modernize &lt;a href=&quot;https://www.artsy.net/&quot;&gt;Artsy.net&lt;/a&gt;&#39;s development environment, from introducing Babel and React to the creation of &lt;a href=&quot;https://github.com/artsy/stitch&quot;&gt;@artsy/stitch&lt;/a&gt;. Increasing overall development speed was another aim, and to that end we released &lt;a href=&quot;https://github.com/artsy/express-reloadable&quot;&gt;@artsy/express-reloadable&lt;/a&gt; which automatically hot-swaps Express.js code without the restart. In this post I&#39;d like to cover some of the issues we&#39;ve faced since then, and in particular our solution to library code-sharing in Express apps.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;It&#39;s common to share NPM packages across projects, and oftentimes packages are developed in parallel. Package &lt;code&gt;A&lt;/code&gt; depends on &lt;code&gt;B&lt;/code&gt;, but &lt;code&gt;B&lt;/code&gt; has a bug and you don&#39;t want to have to republish (and reinstall) the package in order to see changes made locally. &lt;code&gt;yarn link&lt;/code&gt; (or &lt;code&gt;npm link&lt;/code&gt;) was developed for instances like this and while it works great for stop and start processes where boot time is quick, it falls short if the development environment takes a while to load. In UI-rich environments like &lt;a href=&quot;https://github.com/artsy/positron&quot;&gt;Positron&lt;/a&gt; (our Publishing CMS called &quot;Writer&quot;) and &lt;a href=&quot;https://github.com/artsy/force&quot;&gt;Force&lt;/a&gt;, each boot would come at a high time-cost due to upfront compilation of assets. Tools like &lt;a href=&quot;https://github.com/remy/nodemon&quot;&gt;nodemon&lt;/a&gt; would automatically stop and start our server process when assets changed but that still didn&#39;t alleviate slow iteration times.&lt;/p&gt;

&lt;p&gt;To recap from a &lt;a href=&quot;/blog/2017/09/05/Modernizing-Force#iteration-time&quot;&gt;previous post&lt;/a&gt;, &lt;a href=&quot;https://github.com/artsy/express-reloadable&quot;&gt;@artsy/express-reloadable&lt;/a&gt; allows devs to immediately see changes to running Express.js app code:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createReloadable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isDevelopment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@artsy/express-reloadable&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDevelopment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mountAndReload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createReloadable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;mountAndReload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./api&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Changes made within the &lt;code&gt;api&lt;/code&gt; folder are detected and instantly hot-swapped in, and all that&#39;s required is a new http request; this is down from an average dev cycle of about 40 seconds for Artsy.net. However, we found an exception while building out Artsy&#39;s new &lt;a href=&quot;https://www.artsy.net/article/artsy-editorial-midwest-made-artists-mike-kelley-jim-shaw&quot;&gt;editorial pages&lt;/a&gt;, which involved sharing React components from our UI library &lt;a href=&quot;https://github.com/artsy/reaction&quot;&gt;Reaction&lt;/a&gt; &lt;a href=&quot;https://github.com/artsy/positron/blob/master/client/apps/edit/components/content/section_tool/index.jsx#L11&quot;&gt;between Positron&lt;/a&gt; &lt;a href=&quot;https://github.com/artsy/force/blob/master/desktop/apps/article/components/InfiniteScrollArticle.js#L9&quot;&gt;and Force&lt;/a&gt;. Even though we ran &lt;code&gt;yarn link @artsy/reaction&lt;/code&gt; in each consumer app, changes would not be detected and so we had to do a full restart.&lt;/p&gt;

&lt;p&gt;To address this, a new &lt;code&gt;watchModules&lt;/code&gt; feature &lt;a href=&quot;https://github.com/artsy/express-reloadable/pull/3&quot;&gt;was added&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;mountAndReload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;./api&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;watchModules&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;@artsy/reaction&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Similar to how files in &lt;code&gt;api/&lt;/code&gt; are hot-swapped in on change, symlinked NPM modules placed in the &lt;code&gt;watchModules&lt;/code&gt; array will now be reloaded, too.&lt;/p&gt;

&lt;p&gt;References:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/express-reloadable&quot;&gt;@artsy/express-reloadable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/positron&quot;&gt;Positron&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/reaction&quot;&gt;Reaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/force&quot;&gt;Force&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 05 Dec 2017 14:18:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/12/05/Express-Reloadable-Update/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/12/05/Express-Reloadable-Update/</guid>
        
        
        <category>dx</category>
        
        <category>express</category>
        
        <category>express-reloadable</category>
        
        <category>node</category>
        
      </item>
    
      <item>
        <title>Engineering Blog Post Templates</title>
        <description>&lt;p&gt;Hello! My name is Ash and I work on the Auctions team at Artsy. I like to blog, and I like to tell people they should blog, too (you should blog btw). I&#39;ve been trying to increase how many blog posts get written by Artsy engineers for six months or so, but have only seen modest results. I&#39;ve been holding weekly office hours to help with writing, but it&#39;s not often attended. So I started reaching out to team members individually to suggest they write something, but they&#39;re very busy and often can&#39;t spare the time. Hmm.&lt;/p&gt;

&lt;p&gt;A simple solution came out of a discussion with other engineering teams surrounding how to build team culture. &lt;a href=&quot;https://twitter.com/sdhingra89&quot;&gt;Sonam Dhingra&lt;/a&gt; of &lt;a href=&quot;http://ustwo.com&quot;&gt;UsTwo&lt;/a&gt; solves the problem of &quot;not enough blog posts are getting written&quot; simply by providing templates that can be used to compose blog posts very quickly. Even if someone was in a hurry or not a confident writer, they could still contribute to the engineering blog. What a marvelous idea!&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;I took some time to write out three distinct blog post templates:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A &quot;regular&quot; post that authors fill in like Mad Libs.&lt;/li&gt;
&lt;li&gt;A &quot;long&quot; post where authors create standard intro-body-conclusion posts.&lt;/li&gt;
&lt;li&gt;An &quot;epic&quot; post where authors write a traditional narrative structure.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Each template fits a different niche, and we might add more as time goes on. The templates also include a note to authors about how the template is best used.&lt;/p&gt;

&lt;p&gt;The templates are available in &lt;a href=&quot;https://github.com/artsy/artsy.github.io&quot;&gt;our blog&#39;s repository&lt;/a&gt; – please feel free to use them in your own writing pursuits. Have a good one!&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/12/01/engineering-blog-post-templates/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/12/01/engineering-blog-post-templates/</guid>
        
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>Babel 7 + TypeScript</title>
        <description>&lt;p&gt;At Artsy we &amp;lt;3 &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. We use it with React Native via &lt;a href=&quot;https://github.com/artsy/emission&quot;&gt;Emission&lt;/a&gt; and on the web via &lt;a href=&quot;https://github.com/artsy/reaction&quot;&gt;Reaction&lt;/a&gt;. Until recently, however, projects that required the use of Babel had to implement convoluted tooling pipelines in order to work with the TypeScript compiler, increasing friction in an already complex landscape. (An example of this is Emission&#39;s use of Relay, which requires &lt;a href=&quot;https://facebook.github.io/relay/docs/babel-plugin-relay.html#setting-up-babel-plugin-relay&quot;&gt;babel-plugin-relay&lt;/a&gt; to convert &lt;code&gt;graphql&lt;/code&gt; literals into require calls.) Thankfully, those days &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-typescript&quot;&gt;are over&lt;/a&gt;. Read on for an example project, as well as some advice on how to avoid common pitfalls when working with the new beta version of Babel 7.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Babel configurations can be complicated. They take time to set up and maintain and can often contain some pretty &lt;a href=&quot;https://github.com/kentcdodds/babel-macros&quot;&gt;far-out features&lt;/a&gt; that make interop with other environments difficult. That&#39;s why we were elated when &lt;a href=&quot;https://github.com/babel/babylon/pull/523&quot;&gt;this PR&lt;/a&gt; appeared in the wild from &lt;a href=&quot;https://github.com/andy-ms&quot;&gt;@andy-ms&lt;/a&gt;, a developer on the TypeScript team, announcing a new parser for Babylon. &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-typescript&quot;&gt;@babel/preset-typescript&lt;/a&gt; arrived soon after and we felt it was finally time to give it a try. There was a catch, however: TypeScript support only works with Babel 7+!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TLDR; &lt;a href=&quot;https://github.com/damassi/babel-7-typescript-example&quot; target=&quot;_blank&quot;&gt;Check out the project on GitHub &gt;&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Here&#39;s list of setup issues we faced in no specific order:&lt;/p&gt;

&lt;a name=&quot;L1..New..babel.Namespace&quot;&gt;&lt;/a&gt;
&lt;h2&gt;1) New @babel Namespace&lt;/h2&gt;

&lt;p&gt;One of the first things Babel 7 users will notice is the package ecosystem now exists as a &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages&quot;&gt;monorepo&lt;/a&gt; and all NPM modules are namespaced behind the &lt;code&gt;@babel&lt;/code&gt; org address. Packages that used to be installed via&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;yarn add -D &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  babel-core &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  babel-preset-react &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  babel-preset-stage-3
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;are now installed via&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;yarn add -D &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  @babel/core &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  @babel/preset-react &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  @babel/preset-stage-3
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  ...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;which immediately creates upgrade conflicts between libraries that use Babel 6 and Babel 7. For example, &lt;code&gt;babel-jest&lt;/code&gt; internally points to &lt;code&gt;babel-core&lt;/code&gt; which supports a &lt;a href=&quot;https://github.com/facebook/jest/blob/master/packages/babel-jest/package.json#L19&quot;&gt;version range between 6 and 7&lt;/a&gt; -- but! -- &lt;code&gt;babel-core&lt;/code&gt; is now &lt;code&gt;@babel/core&lt;/code&gt; so this breaks.&lt;/p&gt;

&lt;p&gt;This wasn&#39;t immediately apparent at the time, and so we would often find errors like&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;Error: Could not find preset &lt;span class=&quot;s2&quot;&gt;&amp;quot;@babel/env&amp;quot;&lt;/span&gt; relative to directory
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;These errors appeared ambiguous because the folder structure was correct and commands like &lt;code&gt;yarn list @babel/preset-env&lt;/code&gt; yielded expected results:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;└─ @babel/preset-env@7.0.0-beta.32
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;✨  Done in 0.58s.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Why was the package not found? Digging deeper, it seemed like Babel 6 was still being used somewhere. Running &lt;code&gt;yarn list babel-core&lt;/code&gt; revealed the culprit:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;└─ babel-core@6.25.0
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;✨  Done in 0.58s.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Thankfully, &lt;a href=&quot;https://github.com/babel/babel-bridge&quot;&gt;babel-bridge&lt;/a&gt; exists to &quot;bridge&quot; the gap, but one can see how complications can and will arise. Further, not all packages have implemented this fix and so we had to rely on &lt;code&gt;yarn&lt;/code&gt;&#39;s new &lt;a href=&quot;https://yarnpkg.com/lang/en/docs/selective-version-resolutions/&quot;&gt;selective dependency resolution&lt;/a&gt; feature which overrides child dependency versions with a fixed number set directly in &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;resolutions&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;babel-core&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;^7.0.0-bridge.0&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;With this in place many of our errors disappeared and packages like &lt;code&gt;jest&lt;/code&gt; now worked like a charm.&lt;/p&gt;

&lt;a name=&quot;L2..Missing.ES2015.Features&quot;&gt;&lt;/a&gt;
&lt;h2&gt;2) Missing ES2015 Features&lt;/h2&gt;

&lt;p&gt;Another error we faced early on surrounded language features that worked with Babel &lt;em&gt;or&lt;/em&gt; TypeScript, but not with Babel &lt;em&gt;and&lt;/em&gt; TypeScript. For example, take an existing Babel project that points to &lt;code&gt;index.js&lt;/code&gt; as an entrypoint, configure it to support TypeScript via Babel 7, and then run it:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;babel-node index.js&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// index.js&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;@babel/register&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;extensions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.jsx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.ts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.tsx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;app/server.ts&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// app/server.ts&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;hi!&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Running&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;yarn start
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;babel-node index.js
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;hi!
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;✨  Done in 1.88s.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Everything seems to be working; our &lt;code&gt;.js&lt;/code&gt; entrypoint is configured to support &lt;code&gt;.ts&lt;/code&gt; extensions and we kick off the boot process.&lt;/p&gt;

&lt;p&gt;Let&#39;s now try to import a file from within &lt;code&gt;app/server.ts&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;




&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;yarn start
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yarn run v1.3.2
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;babel-node index.js
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;sites/src/index.tsx:1
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;exports, require, module, __filename, __dirname&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; import path from &lt;span class=&quot;s1&quot;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                                                              ^^^^^^
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;SyntaxError: Unexpected token import
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Maybe my &lt;code&gt;tsconfig.json&lt;/code&gt; file is misconfigured?&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;compilerOptions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;module&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;es2015&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Nope, all good. How about my &lt;code&gt;.babelrc&lt;/code&gt;?&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;presets&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;@babel/env&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;quot;targets&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nt&quot;&gt;&amp;quot;browsers&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;last 2 versions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;@babel/stage-3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;@babel/react&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;@babel/typescript&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We&#39;re using &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-env&quot;&gt;&lt;code&gt;@babel/preset-env&lt;/code&gt;&lt;/a&gt; which handles selecting the JS features we need, so thats not it. And anyways, doesn&#39;t TypeScript support &lt;code&gt;ES2015&lt;/code&gt; modules right out of the box?&lt;/p&gt;

&lt;p&gt;Continuing, how about specifying the extension list directly in &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;babel-node --extensions &amp;#39;.ts,.tsx&amp;#39; index.js&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Still no go 🙁&lt;/p&gt;

&lt;p&gt;Last try: Create a new entrypoint file that uses a &lt;code&gt;.ts&lt;/code&gt; extension and then use &lt;em&gt;that&lt;/em&gt; to boot the rest of the app:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;babel-node --extensions &amp;#39;.ts,.tsx&amp;#39; index.ts&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// index.ts&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./app/server&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;yarn start
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yarn run v1.3.2
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;babel-node index.js
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Hello /sites!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Once this change was in place, we could ditch &lt;code&gt;@babel/register&lt;/code&gt; and instead rely on the &lt;code&gt;--extensions&lt;/code&gt; configuration from &lt;code&gt;package.json&lt;/code&gt;, just like the &lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-typescript&quot;&gt;README&lt;/a&gt; suggests (doh! 🤦).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; If you&#39;re using &lt;a href=&quot;https://github.com/tleunen/babel-plugin-module-resolver&quot;&gt;&lt;code&gt;babel-plugin-module-resolver&lt;/code&gt;&lt;/a&gt; to support absolute path imports make sure to update the &lt;code&gt;extensions&lt;/code&gt; &lt;a href=&quot;https://github.com/tleunen/babel-plugin-module-resolver#options&quot;&gt;option&lt;/a&gt; with &lt;code&gt;.ts&lt;/code&gt; and &lt;code&gt;.tsx&lt;/code&gt;.&lt;/p&gt;

&lt;a name=&quot;L3..Type-Checking&quot;&gt;&lt;/a&gt;
&lt;h2&gt;3) Type-Checking&lt;/h2&gt;

&lt;p&gt;Lastly, since Babel 7 is now responsible for compiling our TypeScript files we no longer need to rely on TypeScript&#39;s own &lt;code&gt;tsc&lt;/code&gt; compiler to output JavaScript and instead just use it to type-check our code. Again, in &lt;code&gt;package.json&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;type-check&amp;quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&amp;quot;tsc&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;This reads in settings located in &lt;code&gt;tsconfig.json&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;compilerOptions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;noEmit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;pretty&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Notice the &lt;code&gt;noEmit&lt;/code&gt; flag? That tells &lt;code&gt;tsc&lt;/code&gt; not to output any JS and instead only check for correctness. The &quot;pretty&quot; flag gives us nicer type-checker output.&lt;/p&gt;

&lt;p&gt;While this seemed to be all that was needed, running &lt;code&gt;yarn type-check&lt;/code&gt; would throw an error:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;type-check&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;err&quot;&gt;yarn&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.3&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;tsc&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;err&quot;&gt;node_modules/@types/jest/index.d.ts(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1053&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;TS&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2304&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Cannot&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;Set&amp;#39;.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;mi&quot;&gt;1053&lt;/span&gt;         &lt;span class=&quot;err&quot;&gt;onRunComplete?(contexts:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Set&amp;lt;Context&amp;gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;results:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;AggregatedResult):&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Maybe&amp;lt;Promise&amp;lt;void&amp;gt;&amp;gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                                      &lt;span class=&quot;err&quot;&gt;~~~&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;err&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Command&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;failed&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Why is it TypeChecking my &lt;code&gt;node_modules&lt;/code&gt; folder when &lt;code&gt;rootDirs&lt;/code&gt; is set to &lt;code&gt;src&lt;/code&gt;? It looks like we missed a TypeScript setting:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;compilerOptions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;skipLibCheck&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;With that last missing piece everything now works:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;yarn &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;-check -w
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;yarn run v1.3.2
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tsc -w
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;src/index.tsx&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5,7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: error TS2451: Cannot redeclare block-scoped variable &lt;span class=&quot;s1&quot;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; const &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;foo: string&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; foo
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        ~~~~
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;src/index.tsx&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6,6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: error TS2345: Argument of &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;2&amp;#39;&lt;/span&gt; is not assignable to parameter of &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;string&amp;#39;&lt;/span&gt;.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;       ~
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Proper type-checking, but compilation handled by Babel 😎.&lt;/p&gt;

&lt;a name=&quot;L4..TypeScript.and.Flow&quot;&gt;&lt;/a&gt;
&lt;h2&gt;4) TypeScript and Flow&lt;/h2&gt;

&lt;p&gt;Unfortunately, the TypeScript and Flow plugins for Babel cannot be loaded at the same time, as there could be ambiguity about how to parse some code.&lt;/p&gt;

&lt;p&gt;This is usually ok, because the general advice is to compile your library code to vanilla JS before publishing (and thus strip type annotations), but there are packages that could still enable the Flow plugin.&lt;/p&gt;

&lt;p&gt;For example, &lt;a href=&quot;https://github.com/babel/babel/pull/6118&quot;&gt;the React Babel preset&lt;/a&gt; in the past would enable the Flow plugin without really needing it for its own source, but just as a default for consumers of React.&lt;/p&gt;

&lt;p&gt;This issue cannot really be worked around without patching the code that loads the plugin. Ideally this patch would be sent upstream so that the issue goes away for everybody.&lt;/p&gt;

&lt;p&gt;This issue can be worked around by either eliminating the dependency on the preset that loads the plugin, for instance by depending on the individual plugins directly, or if that’s not possible by patching the code. Ideally that patch should go upstream, of course, but if you need something immediate then we highly recommend &lt;a href=&quot;https://github.com/ds300/patch-package&quot;&gt;patch-package&lt;/a&gt;, as can be seen used in &lt;a href=&quot;https://github.com/artsy/emission/pull/780/files#diff-29cf179661e0495e62e9cd67dd0307dd&quot;&gt;this example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There’s even projects that publish their Flow annotated code &lt;em&gt;without&lt;/em&gt; compiling/stripping type annotations, the one we know of and use is &lt;a href=&quot;https://github.com/facebook/react-native/issues/7850#issuecomment-225415645&quot;&gt;React Native&lt;/a&gt;. There’s no way around this other than patching the code. You may think that you could use a plugin like &lt;a href=&quot;https://babeljs.io/docs/plugins/transform-flow-strip-types/&quot;&gt;babel-plugin-transform-flow-strip-types&lt;/a&gt;, but in reality that transform needs the Flow plugin to be able to do its work and thus is a no-go.&lt;/p&gt;

&lt;p&gt;The way we’ve worked around that is by &lt;a href=&quot;https://github.com/artsy/emission/pull/780/files#diff-b9cfc7f2cdf78a7f4b91a753d10865a2R36&quot;&gt;stripping Flow type annotations from &lt;em&gt;all&lt;/em&gt; dependencies&lt;/a&gt; at &lt;a href=&quot;https://github.com/artsy/emission/pull/780/files#diff-b9cfc7f2cdf78a7f4b91a753d10865a2R39&quot;&gt;dependency install time&lt;/a&gt; using the &lt;a href=&quot;https://github.com/flowtype/flow-remove-types&quot;&gt;&lt;code&gt;flow-remove-types&lt;/code&gt; tool&lt;/a&gt;. It can get a little slow on many files which is why we do a bunch of filtering to only process files that have &lt;code&gt;@flow&lt;/code&gt; directives, the downside is that some files don’t have directives like they should and so &lt;a href=&quot;https://github.com/artsy/emission/pull/780/files#diff-d6d30dd9bd4cdb1ac0d1268937508814R65&quot;&gt;we patch those to add them&lt;/a&gt; using the aforementioned &lt;a href=&quot;https://github.com/ds300/patch-package&quot;&gt;patch-package&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;L5..Limitations.in.TypeScript.support&quot;&gt;&lt;/a&gt;
&lt;h2&gt;5) Limitations in TypeScript support&lt;/h2&gt;

&lt;p&gt;It is important to note that you &lt;em&gt;may&lt;/em&gt; run into a few cases that TypeScript’s Babel plugin does/can not support. From &lt;a href=&quot;https://github.com/babel/babel/blob/master/packages/babel-plugin-transform-typescript/README.md#babelplugin-transform-typescript&quot;&gt;the plugin’s README&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Does not support &lt;code&gt;namespace&lt;/code&gt;s or &lt;code&gt;const enum&lt;/code&gt;s because those require type information to transpile.
Also does not support &lt;code&gt;export =&lt;/code&gt; and &lt;code&gt;import =&lt;/code&gt;, because those cannot be transpiled to ES.next.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The lack of namespace support hasn’t been a problem for us, we’re only using it in one place which could easily be changed to use regular ES6 modules as namespace. This is also why for instance the ‘recommended’ list of TSLint checks includes &lt;a href=&quot;https://palantir.github.io/tslint/rules/no-namespace/&quot;&gt;the &lt;code&gt;no-namespace&lt;/code&gt; rule&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;const enum&lt;/code&gt; feature is a runtime optimization that will cause the compiler to inline code. We don’t have a need for this at the moment, but &lt;a href=&quot;https://github.com/babel/babel/issues/6476&quot;&gt;some discussion&lt;/a&gt; is happening to possibly still being able to make use of this feature when compiling production builds with the TypeScript compiler instead.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;export =&lt;/code&gt; and &lt;code&gt;import =&lt;/code&gt; syntax is meant to &lt;a href=&quot;https://github.com/Microsoft/TypeScript-Handbook/blob/master/pages/Modules.md#export--and-import--require&quot;&gt;work with CommonJS and AMD modules&lt;/a&gt;; however, we strictly use ES6 modules.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/damassi/babel-7-typescript-example&quot;&gt;babel-7-typescript-example&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel/tree/master/packages/babel-preset-typescript&quot;&gt;babel-preset-typescript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/emission&quot;&gt;emission&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/artsy/reaction&quot;&gt;reaction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ds300/patch-package&quot;&gt;patch-package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 27 Nov 2017 14:18:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/11/27/Babel-7-and-TypeScript/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/11/27/Babel-7-and-TypeScript/</guid>
        
        
        <category>babel</category>
        
        <category>javascript</category>
        
        <category>typescript</category>
        
      </item>
    
      <item>
        <title>Git Reverts: Rolling Forward While Rolling Back</title>
        <description>&lt;p&gt;I don’t revert code changes often. Usually, I’m a fan of &quot;rolling forward&quot; with a fix, rather than rolling back. But sometimes, revert-and-fix is just the ticket. I had to do so recently, and it brought up some interesting challenges, so I thought I’d share.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Here’s the scenario. Some recent changes I was making to Gravity, our core API service, had a pretty big ripple effect. Gravity is a big app, with over 100k LOC, so the tests take a long time to run. For this reason, we have our CI server set up to only run the tests it thinks are applicable for the changes in each commit in a pull request. That way, we can get pretty fast feedback on individual commits. But because Ruby is dynamic, the detection of which tests to run is imperfect. So, we run all the tests when a PR is merged to &lt;code&gt;master&lt;/code&gt;, as a blocking step before the changes are actually deployed to our staging environment.&lt;/p&gt;

&lt;p&gt;This makes it possible to “break the build”, where the &lt;code&gt;master&lt;/code&gt; branch no longer is valid with respect to its tests, which is exactly what happened. The staging build of my changes failed, and it rendered our whole team unable to ship changes until the build was fixed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Eek!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No big deal, that’s what reverts are for, and GitHub makes it quite easy to revert a pull request. If nobody merged anything to &lt;code&gt;master&lt;/code&gt; that required conflict resolution with the changes in your PR, you can pretty much painlessly and immediately revert. Which I did.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Great!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Now I had time to fix those tests, without worrying about blocking anyone. I checked out the original branch and pretty quickly figured out what changes I needed to make to fix the tests. Then I pushed that branch up to origin to make a new PR.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Drat! Merge conflicts. Right, I need to either merge or rebase from &lt;code&gt;master&lt;/code&gt; to get everything up-to-date.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;And that’s when I hit the problem. Now that I had reverted my original changes, those &lt;em&gt;undos&lt;/em&gt; are considered the canonical history, rather than the original changes I had tried to make! So both &lt;code&gt;git merge master&lt;/code&gt; and &lt;code&gt;git rebase master&lt;/code&gt; left me with only the tiny fixes to the failing tests, but my actual meaningful changes still removed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Conundrum.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The solution I came up with was to &lt;em&gt;revert my revert&lt;/em&gt;. The PR that the original revert button created also presented a revert button after it was merged. So I hit that button, and it created an amusingly titled &lt;code&gt;Revert &quot;Revert “My original title””&lt;/code&gt;. I &lt;code&gt;git stash&lt;/code&gt;d my fixes, &lt;code&gt;git fetch&lt;/code&gt;d the branch GitHub created for this newest PR down to my local, and &lt;code&gt;git checkout&lt;/code&gt;d the this branch. This effectively was my original changes on top of their rollback, on top of those same changes — crucially, with changes other developers had made in the meantime mixed in there somewhere. I then &lt;code&gt;git stash pop&lt;/code&gt;d my fixes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Phew!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In conclusion, rolling back presents some interesting challenges, in the context of how Git considers history. If I&#39;ve messed up a local branch, I might just give up and &lt;code&gt;git reset --hard&lt;/code&gt; to get it back to a known good commit. But when it comes to the &lt;code&gt;master&lt;/code&gt; branch, you have to be able to wiggle your way out of tricky situations. GitHub’s reverts are a viable option for keeping the &lt;em&gt;history&lt;/em&gt; rolling forward as you undo and redo work.&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Oct 2017 14:18:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/10/26/Git-Reverts/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/10/26/Git-Reverts/</guid>
        
        
        <category>git</category>
        
        <category>github</category>
        
        <category>version control</category>
        
      </item>
    
      <item>
        <title>C4Q&amp;A</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://www.c4q.nyc&quot;&gt;C4Q is&lt;/a&gt; is a non-for-profit hacker school based in NYC. We&#39;ve had members of the Artsy team help
out by being TAs, running committees and steering the curriculum as Engineers in the industry for many years. C4Q recently
reached out to arrange a meetup between Artsy engineers and students who are learning Android and Web development.&lt;/p&gt;

&lt;p&gt;We thought it would be cool to have a talk from dB, our CTO, on what Artsy is and to also host a Q&amp;amp;A panel with our
engineers. For a lot of the students it was their first time meeting a team of engineers, so we anticipated a lot of
question time.&lt;/p&gt;

&lt;p&gt;In prepration for the event, I reached out to the internet for ideas on what sort of questions juniors would be interested
in hearing about, and people said they were also interested in hearing what we ended up being asked, and what our answers
were. This post has the youtube video of the opening talk, and our panel&#39;s Q &amp;amp; A session.&lt;/p&gt;

&lt;p&gt;It was really awesome to talk about how far we&#39;ve grown as individuals, and what is important in our engineering lives.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;center&gt;
&lt;iframe width=&#39;100%&#39; height=&#39;600&#39; src=&#39;https://www.youtube.com/embed/leiKlKXRvuk&#39; frameborder=&#39;0&#39; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;


&lt;p&gt;Our twitter links:  &lt;a href=&quot;https://twitter.com/orta&quot;&gt;@orta&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/craigspaeth&quot;&gt;@craigspaeth&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/kana_abe&quot;&gt;@kana_abe&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/dblockdotorg&quot;&gt;@dblockdotorg&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/xtina_starr&quot;&gt;@Xtina_Starr&lt;/a&gt; let us know if
you have any more questions.&lt;/p&gt;

&lt;p&gt;If you want more, there&#39;s also &lt;a href=&quot;/blog/2018/01/10/C4Q-QandA-two/&quot;&gt;part 2 with different engineers&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 Oct 2017 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/10/10/C4Q-QandA/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/10/10/C4Q-QandA/</guid>
        
        
        <category>culture</category>
        
        <category>event</category>
        
        <category>panel</category>
        
        <category>teaching</category>
        
      </item>
    
      <item>
        <title>What it Feels Like to Work in a Supportive Environment for Female Engineers</title>
        <description>&lt;p&gt;With the often overwhelming and downright discouraging reality that the tech industry isn’t a diverse and inclusive environment, I felt compelled to share what a productive, empathetic, and nurturing environment for female and female-identifying engineers looks like.&lt;/p&gt;

&lt;p&gt;I have just shipped a post over on the Life at Artsy blog about how: Our culture of empathy, our hiring process and our company values provide a competitive advantage. This all contributes to ensuring that all engineers regardless of gender feel valued.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/artsy-blog/what-it-feels-like-to-work-in-a-supportive-environment-for-female-engineers-3c994a001007&quot;&gt;Read on at the Life at Artsy Blog →&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/09/29/supportive-environment-for-female-engineers/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/09/29/supportive-environment-for-female-engineers/</guid>
        
        
        <category>culture</category>
        
        <category>people</category>
        
        <category>teams</category>
        
      </item>
    
      <item>
        <title>DevSwap: An Experiment in Randomizing Teams</title>
        <description>&lt;p&gt;A few weeks ago, every engineer at Artsy went to work for a different team for two full days. We called it DevSwap. In this post, I&#39;ll go over why and how we did it.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;If you’ve read about Artsy&#39;s &lt;a href=&quot;http://artsy.github.io/blog/2016/03/28/artsy-engineering-organization-stack/&quot;&gt;Engineering Team&lt;/a&gt; before, you might know that we organize ourselves into product teams that serve different parts of our business. Today, Artsy employs 26 engineers, spread across four product teams — Publishing, Auctions, Collector GMV, and Partner Success. We also have a Platform team that is responsible for systems, infrastructure, and data, among other things. Across these teams, we share systems and apps. To stay cohesive with one another, we also have what we call “practices,” which are cross-team groups that meet and discuss shared tech.&lt;/p&gt;

&lt;p&gt;Around two years ago, we didn&#39;t have product teams. Back then, most engineers worked in a variety of stacks. As our business models changed, so did the way we organized ourselves. Interestingly, the number of engineers has not changed drastically, but the way we work has. We have greater focus now that we are organized into product teams with specific business goals, but that means there aren&#39;t as many opportunities to work in other stacks.&lt;/p&gt;

&lt;p&gt;Earlier this summer, the engineering leads received some feedback from our engineers about wanting more cross-team collaboration and knowledge sharing. In our weekly engineering-wide meeting, we get to hear what features each team is working on, but it can sometimes feel like there&#39;s missing context. Within our practices, there is a better sense of the details, but usually the work itself is deeply nested in another team.&lt;/p&gt;

&lt;p&gt;We brainstormed several ideas related to knowledge sharing and cross-team collaboration. What stood out the most was that being in product teams meant fewer opportunities to work in other parts of the business. This led to the question: What would happen if we redistributed ourselves into entirely new teams?&lt;/p&gt;

&lt;a name=&quot;Setup&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Setup&lt;/h2&gt;

&lt;p&gt;Over the course of a few weeks, the engineer leads devised a plan for DevSwap. Here are some questions we asked ourselves:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How can we become closer as a team while learning something new?&lt;/li&gt;
&lt;li&gt;How can we keep ourselves as engineers nimble, flexible, and full-stack?&lt;/li&gt;
&lt;li&gt;How can we reduce risk in our systems by spreading knowledge?&lt;/li&gt;
&lt;li&gt;How can we have fun before summer is over?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For the first iteration, we decided to spend two full business days swapping. Every engineer  worked with a different team. Each team contained the same number of people as the original team. The leads of each team stayed to onboard, provide support and facilitate work.&lt;/p&gt;

&lt;p&gt;The Monday before DevSwap, we had an engineering-wide meeting to go over some guidelines and pick teams. Here are the guidelines we shared:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DevSwap will last 2 days. 🕑&lt;/li&gt;
&lt;li&gt;Product managers have been notified so don&#39;t worry about your regular work. Hopefully a new member will pick some up for you 😄.&lt;/li&gt;
&lt;li&gt;If possible, try and sit by your new team and if not, coordinate meeting times with remote members. 📞&lt;/li&gt;
&lt;li&gt;See this as a pairing opportunity! 👫&lt;/li&gt;
&lt;li&gt;In terms of work, it&#39;s business as usual. Your new lead will give you guidance. 💼&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In this meeting, we also had our leads &quot;pitch&quot; their teams. The goal of this was to get people excited about joining new teams and to get a sense of what projects they might work on. To choose the actual teams, each engineer picked their top three choices and we drew names out of a bucket. If their first choice was already full, we would place them in their next available choice. The following Monday and Tuesday, we were all writing code for different teams.&lt;/p&gt;

&lt;a name=&quot;So.what.happened.&quot;&gt;&lt;/a&gt;
&lt;h2&gt;So what happened?&lt;/h2&gt;

&lt;p&gt;Our EU engineers kicked off DevSwap on Monday, tackling both the struggle of learning new stacks and being remote (our headquarters is located in NYC). Leads mitigated the latter problem by prepping EU folks on Friday so they had some direction come Monday morning.&lt;/p&gt;

&lt;p&gt;There was lots of Slack-ing, Screenhero-ing, and pairing. It was wonderful to see people interact in a new environment with new goals, even if it was temporary. Some got to learn about &lt;em&gt;how&lt;/em&gt; teams operate and learned about issue prioritization and even attended meetings with stakeholders.&lt;/p&gt;

&lt;p&gt;Some people worked on modernizing codebases with projects like &lt;a href=&quot;https://github.com/artsy/positron/pull/1225&quot;&gt;server-side hot file swapping&lt;/a&gt; and the introduction of a GraphQL endpoint to our consignments app. Others worked on building features like &lt;a href=&quot;https://github.com/artsy/aprb/pull/104/files&quot;&gt;setting up Slack notifications&lt;/a&gt; when we receive customer feedback and adding ElasticSearch indexing to projects. We learned new languages &lt;a href=&quot;https://github.com/artsy/eigen/pull/2412&quot;&gt;by building features&lt;/a&gt; and updated &lt;a href=&quot;https://github.com/artsy/metaphysics/pull/702&quot;&gt;many&lt;/a&gt; &lt;a href=&quot;https://github.com/artsy/positron/pull/1235&quot;&gt;docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All work aside, the fact that we were having conversations with each other about the details of the technology while gaining a fresh perspective of someone else&#39;s experience was valuable.&lt;/p&gt;

&lt;a name=&quot;Feedback.from.Engineers&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Feedback from Engineers&lt;/h2&gt;

&lt;p&gt;I learned a lot and had fun, but I wondered what everyone else thought. At the end of the second day, I sent out a survey to all 26 engineers and received 14 responses. Here are some of those results:&lt;/p&gt;

&lt;p&gt;Did you get a chance to collaborate with someone you don&#39;t normally work with?&lt;/p&gt;

&lt;iframe width=&quot;600&quot; height=&quot;371&quot; seamless frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;https://docs.google.com/spreadsheets/d/e/2PACX-1vQoAQpvGiq2-5EJWz__vS0n4Iw9r3rY_eSEaPqKQzUlPnObnono-RFS4qLSjrmGTqGnbMOoQsA1L9WX/pubchart?oid=942845256&amp;amp;format=interactive&quot;&gt;&lt;/iframe&gt;


&lt;p&gt;&lt;br&gt;
Did you gain a better understanding of a piece of Artsy Engineering you don&#39;t normally interact with?&lt;/p&gt;

&lt;iframe width=&quot;600&quot; height=&quot;371&quot; seamless frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;https://docs.google.com/spreadsheets/d/e/2PACX-1vQoAQpvGiq2-5EJWz__vS0n4Iw9r3rY_eSEaPqKQzUlPnObnono-RFS4qLSjrmGTqGnbMOoQsA1L9WX/pubchart?oid=543941925&amp;amp;format=interactive&quot;&gt;&lt;/iframe&gt;


&lt;p&gt;&lt;br&gt;
If we were to swap again in 6 months, how long should it last?&lt;/p&gt;

&lt;iframe width=&quot;600&quot; height=&quot;371&quot; seamless frameborder=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;https://docs.google.com/spreadsheets/d/e/2PACX-1vQoAQpvGiq2-5EJWz__vS0n4Iw9r3rY_eSEaPqKQzUlPnObnono-RFS4qLSjrmGTqGnbMOoQsA1L9WX/pubchart?oid=1071239654&amp;amp;format=interactive&quot;&gt;&lt;/iframe&gt;


&lt;p&gt;&lt;br&gt;
&lt;br&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&quot;Would make the swap slightly longer -- was a short timeframe to get through a project.&quot;&lt;/p&gt;

&lt;p&gt;&quot;Onboarding took up most of the time. It was hard to get anything beyond that done.&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;One clear piece of feedback was the desire to spend more time on an assigned team. Some engineers had trouble onboarding, setting up projects, and accomplishing meaningful work within the two days. If engineers can&#39;t spin up a dev environment within a day, what does that mean for usability? These are solvable problems — we could think about dockerizing apps or having better READMEs. During the session, some folks went back to their old teams to help new members with problems. While this was great, it meant less time for their own learning. One option is to extend the duration of the swap. But by extending it too long, it could remove the hackathon mentality that kept people highly focused. It seems like a combination of tweaking the duration, providing better initial setup, and clearly communicating expectations might help for next time.&lt;/p&gt;

&lt;p&gt;We also requested feedback on the leads. Responding to a multiple choice question about what their newly assigned lead did best, most engineers chose &quot;Assisted me when I got stuck&quot; and &quot;Checked in with me frequently.&quot; The least chosen answers were &quot;Taught me something new&quot; and &quot;Made the work enjoyable.&quot; It&#39;s possible that taking more time to prepare for new teams (i.e. introduction meetings, dev environment setup workshop) could provide more opportunities for deeper learning.&lt;/p&gt;

&lt;p&gt;When we asked if there were any good takeaways that could be applied to your own team, we had some interesting answers.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&quot;Partner Success does a &#39;show &amp;amp; tell&#39; where you just casually mention something you learned, dev/tech related. That was fun. We should do that on [Collector Experience].&quot;&lt;/p&gt;

&lt;p&gt;&quot;Finally got to play with Redux in a production app, which I&#39;d be very happy to see implemented in &lt;a href=&quot;https://github.com/artsy/positron&quot;&gt;Positron&lt;/a&gt;.&quot;&lt;/p&gt;

&lt;p&gt;&quot;I&#39;ve been thinking a lot about GraphQL and what it could mean to the [Partner Success] team. Also thinking about what it means for Kinetic and how our projects talk to Gravity.&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Finally, what did people like most?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&quot;Working with people that I normally don&#39;t get a chance to work with on daily basis and also working on the areas of our systems. The fact that now each engineer knows how to setup and run another part of our system by itself is a huge win.&quot;&lt;/p&gt;

&lt;p&gt;&quot;The tight time period forces projects to be very granular. It also forces repo set-up time to be minimized (e.g., via setup/bootstrap scripts, docker, etc.).&quot;&lt;/p&gt;

&lt;p&gt;&quot;I liked feeling like I was able to figure out a codebase that was completely new to me and add value even in the short time that we had to work with. It made me feel like something intimidating was actually within my reach and that made me feel smart. :)&quot;&lt;/p&gt;

&lt;p&gt;&quot;I wasn&#39;t sure if we should expect to get much accomplished but was pleasantly surprised to ship a small but useful feature.&quot;&lt;/p&gt;

&lt;p&gt;&quot;Awesome idea, it feels great to be part of the team that takes risks like this to increase teamwork and knowledge share among engineers and give engineers chance to get out of their comfort zone.&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Despite a few issues with onboarding and timing, it seems that most people found DevSwap to be valuable. This feedback gives us a lot to consider when planning the next one. We hope to bring it back soon!&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/09/11/DevSwap/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/09/11/DevSwap/</guid>
        
        
        <category>culture</category>
        
        <category>people</category>
        
        <category>teams</category>
        
      </item>
    
  </channel>
</rss>
