<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artsy Engineering</title>
    <description></description>
    <link>http://artsy.github.io/</link>
    <atom:link href="http://artsy.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 09 Jun 2017 23:05:25 +0100</pubDate>
    <lastBuildDate>Fri, 09 Jun 2017 23:05:25 +0100</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Encrypting ActiveRecord Fields Without Downtime.</title>
        <description>&lt;p&gt;After examining the data stored in one of our high-throughput systems, we realized it might include sensitive user data. To reduce the number of people that are technically able to access the data and reduce the risks associated with a potential data theft, decided to encrypt certain database fields.&lt;/p&gt;

&lt;a name=&quot;Our.Goal&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Our Goal&lt;/h1&gt;

&lt;p&gt;Encrypt sensitive fields without any downtime.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;a name=&quot;Approach&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Approach&lt;/h1&gt;

&lt;p&gt;While we wanted to encrypt existing rows, new rows were constantly being added. In order to achieve zero downtown we have devised the following path:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Add new &lt;em&gt;encrypted&lt;/em&gt; fields to the database.&lt;/li&gt;
&lt;li&gt;Start populating new &lt;em&gt;encrypted&lt;/em&gt; fields with &lt;em&gt;encrypted&lt;/em&gt; values while still populating &lt;em&gt;un-encrypted&lt;/em&gt; fields.&lt;/li&gt;
&lt;li&gt;In the background, migrate existing records by populating their &lt;em&gt;encrypted&lt;/em&gt; fields.&lt;/li&gt;
&lt;li&gt;Refactor to use &lt;em&gt;encrypted&lt;/em&gt; fields.&lt;/li&gt;
&lt;li&gt;Drop &lt;em&gt;un-encrypted&lt;/em&gt; fields.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Each step above was relatively simple and was tested properly before moving to the next step.&lt;/p&gt;

&lt;a name=&quot;Choosing.an.Encryption.Library&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Choosing an Encryption Library&lt;/h2&gt;

&lt;p&gt;We looked at a few gems, mainly &lt;a href=&quot;https://github.com/attr-encrypted/attr_encrypted&quot;&gt;attr_encrypted&lt;/a&gt;, &lt;a href=&quot;https://github.com/jmazzi/crypt_keeper&quot;&gt;crypt_keeper&lt;/a&gt; and &lt;a href=&quot;https://github.com/rocketjob/symmetric-encryption&quot;&gt;symmetric-encryption&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While all these libraries were reliable, we used &lt;a href=&quot;https://github.com/rocketjob/symmetric-encryption&quot;&gt;symmetric-encryption&lt;/a&gt;, based on its robust &lt;a href=&quot;https://rocketjob.github.io/symmetric-encryption/&quot;&gt;documentation&lt;/a&gt;, ease of use and easy integration with other libraries (in our case &lt;code&gt;ActiveRecord&lt;/code&gt;). It provides some useful &lt;a href=&quot;https://rocketjob.github.io/symmetric-encryption/rake_tasks.html&quot;&gt;Rake tasks&lt;/a&gt; for configurations inside/outside of Heroku. Overall &lt;code&gt;symmetric-encryption&lt;/code&gt; seemed really 🔒 .&lt;/p&gt;

&lt;a name=&quot;Configuration&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;config/symmetric-encryption.yml&lt;/code&gt; file is used to define what algorithm to use and where to find the related keys for different environments.&lt;/p&gt;

&lt;p&gt;Symmetric Encryption uses OpenSSL to encrypt and decrypt the data which means we are able to use any of the algorithms supported by OpenSSL. We used &lt;code&gt;aes-256-cbc&lt;/code&gt; which is also the recommended default algorithm.&lt;/p&gt;

&lt;p&gt;In order to create a new set of keys:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;bash&#39;&gt;&lt;span class=&#39;line&#39;&gt;rails generate symmetric_encryption:new_keys production
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Above command will create an encryption key and an Initialization Vector (&lt;a href=&quot;https://en.wikipedia.org/wiki/Initialization_vector&quot;&gt;IV&lt;/a&gt;). Generated key &lt;strong&gt;must not&lt;/strong&gt; be committed into source code. Depending on how your application is deployed, there are two approaches for storing this key. In both scenarios encryption keys are encrypted before storing on file/environment variable. Secret used for encrypting the encryption key itself can be committed into source code.&lt;/p&gt;

&lt;p&gt;To access sensitive data, a malicious party would require access to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The database,&lt;/li&gt;
&lt;li&gt;Our source code,&lt;/li&gt;
&lt;li&gt;Encryption keys from files or configuration&lt;/li&gt;
&lt;/ul&gt;


&lt;a name=&quot;Outside.of.Heroku&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Outside of Heroku&lt;/h3&gt;

&lt;p&gt;Key can be stored in a file on disk outside of source code. We can use &lt;code&gt;key_filename&lt;/code&gt; in configuration &lt;code&gt;yml&lt;/code&gt; to point to this file. In this scenario we would use the operating system to limit access to key file.&lt;/p&gt;

&lt;p&gt;Here is a sample configuration file:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;yaml&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;#config/symmetric_encryption.yml&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;production&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# Since the key to encrypt and decrypt with must NOT be stored along with the&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# source code, we only hold a RSA key that is used to unlock the file&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# containing the actual symmetric encryption key&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# Sample RSA Key, DO NOT use this RSA key, generate a new one using&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;#    openssl genrsa 2048&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;private_rsa_key&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;     &lt;span class=&quot;no&quot;&gt;-----BEGIN RSA PRIVATE KEY-----&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;     &lt;span class=&quot;no&quot;&gt;MIIEpAIBAAKCAQEAxIL9H/jYUGpA38v6PowRSRJEo3aNVXULNM....&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;     &lt;span class=&quot;no&quot;&gt;r1URaMAun2PfAB4g2N/kEZTExgeOGqXjFhvvjdzl97ux2cTyZhaTXg==&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;     &lt;span class=&quot;no&quot;&gt;-----END RSA PRIVATE KEY-----&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# List Symmetric Key files in the order of current / latest first&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;ciphers&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;     &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;# Filename containing Symmetric Encryption Key encrypted using the&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;# RSA public key derived from the private key above&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;l-Scalar-Plain&quot;&gt;key_filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/etc/rails/.rails.key&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;l-Scalar-Plain&quot;&gt;iv_filename&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/etc/rails/.rails.iv&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;# Encryption cipher_name&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#   Recommended values:&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#      aes-256-cbc&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#         256 AES CBC Algorithm. Very strong&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#         Ruby 1.8.7 MRI Approximately 100,000 encryptions or decryptions per second&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#         JRuby 1.6.7 with Ruby 1.8.7 Approximately 22,000 encryptions or decryptions per second&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#      aes-128-cbc&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#         128 AES CBC Algorithm. Less strong.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#         Ruby 1.8.7 MRI Approximately 100,000 encryptions or decryptions per second&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;c1&quot;&gt;#         JRuby 1.6.7 with Ruby 1.8.7 Approximately 22,000 encryptions or decryptions per second&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cipher_name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;aes-256-cbc&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;On.Heroku&quot;&gt;&lt;/a&gt;
&lt;h3&gt;On Heroku&lt;/h3&gt;

&lt;p&gt;Since the filesystem on Heroku is &lt;a href=&quot;https://devcenter.heroku.com/articles/dynos#ephemeral-filesystem&quot;&gt;ephemeral&lt;/a&gt;, &lt;code&gt;symmetric-encryption&lt;/code&gt; suggests to set encryption key as an environment variable. Configuration is same as above except we replace &lt;code&gt;key_filename&lt;/code&gt; with &lt;code&gt;encrypted_key: &quot;&amp;lt;%= ENV[&#39;PRODUCTION_ENCRYPTION_KEY1&#39;] %&amp;gt;&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You can use the following rake task to generate a Heroku-specific configuration file:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;yaml&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;rails g symmetric_encryption:heroku_config&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;This creates a &lt;code&gt;config/symmetric-encryption.yml&lt;/code&gt; file and also outputs commands you can run to set the &lt;em&gt;encrypted&lt;/em&gt; encryption key on Heroku as an environment variable.&lt;/p&gt;

&lt;a name=&quot;ActiveRecord.Integration&quot;&gt;&lt;/a&gt;
&lt;h3&gt;ActiveRecord Integration&lt;/h3&gt;

&lt;p&gt;Symmetric Encryption provides a seamless integration with &lt;code&gt;ActiveRecord&lt;/code&gt;. We can use &lt;code&gt;attr_encrypted&lt;/code&gt; helper method to define &lt;em&gt;encrypted&lt;/em&gt; fields. Let&#39;s say we wanted to encrypt a &lt;code&gt;Note&lt;/code&gt; model that has &lt;code&gt;note&lt;/code&gt; and &lt;code&gt;subject&lt;/code&gt;. You can add the following to your &lt;code&gt;ActiveRecord&lt;/code&gt; model:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/note.rb&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;attr_encrypted&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:note&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;attr_encrypted&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:subject&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;This means whenever you set &lt;code&gt;note&lt;/code&gt; for this model &lt;code&gt;symmetric-encryption&lt;/code&gt; will set &lt;code&gt;encrypted_note&lt;/code&gt; field in the database. Whenever you retrieve an instance of this model, &lt;code&gt;symmetric-encryption&lt;/code&gt; will decrypt &lt;code&gt;encrypted_note&lt;/code&gt; field and you can access &lt;em&gt;decrypted&lt;/em&gt; value by just accessing &lt;code&gt;note&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In our case we couldn&#39;t use this helper immediately. Using encrypted_attr would prevent us from directly accessing the existing, un-encrypted fields in our database (which is necessary through step 3 in our approach). To work around this, we started by adding. a &lt;code&gt;before_validation&lt;/code&gt; callback to our model to set encrypted fields based on un-encrypted ones.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/note.rb&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;before_validation&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:encrypt_notes_fields&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;encrypt_note_fields&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypted_note&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SymmetricEncryption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypted_subject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SymmetricEncryption&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;In the above code &lt;code&gt;SymmetricEncryption.encrypt(note, true, true, :string)&lt;/code&gt; means encrypt &lt;code&gt;note&lt;/code&gt; field, use random IV(Initialization Vector), compress the string and also use string when decrypting.&lt;/p&gt;

&lt;p&gt;Once we got to the 4th step and stopped populating/reading un-encrypted fields we can easily switch above to&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;# app/models/note.rb&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;attr_encrypted&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:note&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;attr_encrypted&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:subject&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Query.encrypted.fields&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Query encrypted fields&lt;/h1&gt;

&lt;p&gt;Generally when we encrypt a field we can&#39;t do a partial query on the content of that field. On the other hand if we use the same IV each time we encrypt a value, we can do an exact match query. Using same IV means encrypting the same value always end up with the same encrypted string. If exact match query is not something you need, the recommended approach is to use random IV for each encryption.&lt;/p&gt;

&lt;a name=&quot;Conclusion&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;With this approach we were able to encrypt a database with ~1.5 million rows without any downtime in about a week.&lt;/p&gt;
</description>
        <pubDate>Tue, 30 May 2017 11:03:00 +0100</pubDate>
        <link>http://artsy.github.io/blog/2017/05/30/database-encryption/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/05/30/database-encryption/</guid>
        
        
        <category>database</category>
        
        <category>encryption</category>
        
        <category>security</category>
        
      </item>
    
      <item>
        <title>iOS Retrospectives</title>
        <description>&lt;p&gt;In the 1990s, Harvard researcher Amy Edmonson made the unexpected discovery that in hospitals, &lt;a href=&quot;https://www.researchgate.net/publication/250959492_Learning_from_Mistakes_Is_Easier_Said_Than_Done_Group_and_Organizational_Influences_on_the_Detection_and_Correction_of_Human_Error&quot;&gt;higher performing teams reported making more mistakes&lt;/a&gt;. This is unexpected because one would assume that &lt;em&gt;better&lt;/em&gt; performers would make &lt;em&gt;fewer&lt;/em&gt; mistakes. In fact, the number of mistakes isn&#39;t what distinguishes higher-performing teams, but rather it&#39;s their attitude towards discussing – and learning from – their failures.&lt;/p&gt;

&lt;p&gt;I&#39;ve spent the past eight months reading more about &lt;a href=&quot;https://en.wikipedia.org/wiki/Psychological_safety&quot;&gt;psychological safety&lt;/a&gt;: the shared belief that team members won&#39;t be punished for speaking up with mistakes or questions or ideas. As a result, I&#39;ve been trying to operationalize psychological safety on my own team, and part of that includes discussing and learning from our mistakes. At Artsy, we candidly discuss site outages or production bugs on the web, but haven&#39;t historically been great at communicating about iOS problems.&lt;/p&gt;

&lt;p&gt;I want to start doing more retrospectives after things go wrong. So this week, I held my first iOS retrospective.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;It consisted of three parts:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Preparation.&lt;/li&gt;
&lt;li&gt;A meeting.&lt;/li&gt;
&lt;li&gt;Follow-up.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Let&#39;s discuss each one. And remember: the most important part of a bug retrospective is to &lt;em&gt;learn&lt;/em&gt;. Encourage others to ask questions, or propose ideas.&lt;/p&gt;

&lt;a name=&quot;Prep.Work&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Prep Work&lt;/h3&gt;

&lt;p&gt;Prep work involved adapting Artsy&#39;s &lt;a href=&quot;https://artsy.github.io/blog/2014/11/19/how-to-write-great-outage-post-mortems/&quot;&gt;site outage post-mortem&lt;/a&gt; for this less serious bug. I drafted a short document with the following information:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Summary&lt;/strong&gt;: A short paragraph about what happened, and a timeline of when the bug was reported, when it was first introduced, when it was fixed, and when the fix was submitted to the App Store. Include screenshots if available.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cause&lt;/strong&gt;: Technical details about the cause of the problem. Include code snippets if appropriate.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resolution&lt;/strong&gt;: Technical details about the fix for the problem, including links to pull requests. The fix was one-line, so I included a git diff as well.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Post-Mortem&lt;/strong&gt;: A discussion of what contributed to the bug, and how can the team can avoid those problems in the future.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Remember, each section is frame around learning from what went wrong with the goal of preventing similar issues from happening in the future.&lt;/p&gt;

&lt;p&gt;The preparation took me about a half hour, but would have been faster if I had taken more notes earlier. The bug in question had taken place three weeks ago – I wish I had held the retrospective earlier.&lt;/p&gt;

&lt;a name=&quot;Meeting&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Meeting&lt;/h3&gt;

&lt;p&gt;I invited our Auctions dev team to the meeting and our product manager, but I made it clear that everyone&#39;s attendence was optional. During the meeting, I went through the retrospective document I had prepared, answered some questions, and took some notes for further follow-up.&lt;/p&gt;

&lt;a name=&quot;Follow-up&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Follow-up&lt;/h3&gt;

&lt;p&gt;After the meeting, I addressed the follow-up items. In our case, this involved fixing a problem where our staging servers use data that&#39;s not reprepsentive of the data used in production. Additionally, we&#39;ve made changes to how we test certain scenarious in our iOS app.&lt;/p&gt;

&lt;p&gt;Finally, I shared the document with the wider team. In this case, it was the Auctions Operations team. As a developer, I want to empower my teammates to understand why software sometimes behaves unexpectedly.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;So when should you do a retrospective? The answer is &quot;probably more often than you do now.&quot; I know our team could benefit from more of them, and I think the Artsy Engineering team could too. I&#39;m not concerned about doing them too often – I would rather that than not doing them enough.&lt;/p&gt;

&lt;p&gt;Remember that the benefits of a retrospective aren&#39;t limited to learning from a single mistake; retrospectives encourage a &lt;em&gt;culture&lt;/em&gt; of learning from mistakes, which (as Edmonson discovered in hospital settings) is far more valuable.&lt;/p&gt;
</description>
        <pubDate>Sat, 27 May 2017 00:00:00 +0100</pubDate>
        <link>http://artsy.github.io/blog/2017/05/27/ios-retrospectives/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/05/27/ios-retrospectives/</guid>
        
        
        <category>eigen</category>
        
        <category>ios</category>
        
      </item>
    
      <item>
        <title>Relay Mutations</title>
        <description>&lt;blockquote&gt;&lt;p&gt;Hey there everyone, it took us two years to &lt;a href=&quot;https://github.com/artsy/metaphysics/pull/583&quot;&gt;make our&lt;/a&gt; GraphQL implementation support any mutations. We opted to keep it read-only for quite a long time because we use GraphQL to consolidate multiple APIs, but as we start new projects as GraphQL + databases then understanding mutations becomes much more important.&lt;/p&gt;

&lt;p&gt;Last month, I talked with the team at &lt;a href=&quot;https://www.graph.cool/&quot;&gt;Graph.cool&lt;/a&gt; about having them talk through Relay mutations comprehensively as a guest post on the Artsy Engineering blog. So, I&#39;m really excited to introduce this great post on the topic by &lt;a href=&quot;http://twitter.com/nikolasburk&quot;&gt;Nikolas Burk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;-- Orta&lt;/p&gt;&lt;/blockquote&gt;

&lt;a name=&quot;The.Magic.behind.Relay.Mutations&quot;&gt;&lt;/a&gt;
&lt;h1&gt;The Magic behind Relay Mutations&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://facebook.github.io/relay/&quot;&gt;Relay&lt;/a&gt; is a powerful GraphQL client for React and React Native applications. It was open sourced by Facebook alongside GraphQL in 2015 and is a great tool for supporting you with managing your app&#39;s data layer.&lt;/p&gt;

&lt;p&gt;In this post, we are going to explore how Relay mutations work by looking at a React Native app. The code can be found on &lt;a href=&quot;https://github.com/graphcool-examples/react-native-relay-pokedex-example&quot;&gt;GitHub&lt;/a&gt;. Our sample application is a simple &lt;em&gt;Pokedex&lt;/em&gt;, where users can manage their Pokemons.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/S21GfEo.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Note: We&#39;re going to assume a basic familiarity with GraphQL in this article. If you haven&#39;t heard of GraphQL before, the &lt;a href=&quot;www.graphql.org&quot;&gt;documentation&lt;/a&gt; and the &lt;a href=&quot;http://artsy.github.io/blog/2016/06/19/graphql-for-mobile/&quot;&gt;GraphQL for iOS Developers&lt;/a&gt; post are great places to start. If you&#39;re interested in learning more about Relay in general, head over to &lt;a href=&quot;www.learnrelay.org&quot;&gt;Learn Relay&lt;/a&gt; for a comprehensive tutorial.&lt;/p&gt;&lt;/blockquote&gt;

&lt;!-- more --&gt;


&lt;p&gt;If you want to run the example with your own GraphQL server, you can use &lt;a href=&quot;https://www.graph.cool/graphql-up/&quot;&gt;graphql-up&lt;/a&gt; to quickly spin one up yourself from within your browser. Simply click the pink button and follow the instructions on the website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.graph.cool/graphql-up/new?source=https://raw.githubusercontent.com/graphcool-examples/react-native-relay-pokedex-example/master/pokedex.schema&quot;&gt;&lt;img src=&quot;http://static.graph.cool/images/graphql-up.svg&quot; alt=&quot;graphql-up&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;a name=&quot;Relay.-.A.brief.Overview&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Relay - A brief Overview&lt;/h2&gt;

&lt;p&gt;Relay is the most sophisticated GraphQL client available at the moment. Like GraphQL, it has been used and battle-tested internally by Facebook for many years before it was open sourced.&lt;/p&gt;

&lt;p&gt;Relay surely isn&#39;t the easiest framework to learn - but when used correctly, it takes care of managing large parts of your app&#39;s data layer in a consistent and reliable manner! It therefore is particularly well-suited for complex applications with lots of data interdependencies and provides outstanding longterm developer productivity.&lt;/p&gt;

&lt;a name=&quot;Declarative.API.and.Colocation&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Declarative API and Colocation&lt;/h3&gt;

&lt;p&gt;With Relay, React components specify their data requirements in a declarative fashion, making use of GraphQL &lt;em&gt;fragments&lt;/em&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;A &lt;a href=&quot;https://learngraphql.com/basics/fragments&quot;&gt;GraphQL fragment&lt;/a&gt; is a selection of fields on a GraphQL type. You can use them to define &lt;em&gt;reusable sub-parts&lt;/em&gt; of queries or mutations.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Considering the &lt;code&gt;PokemonDetails&lt;/code&gt; view above, we need to display the Pokemon&#39;s name and image. The fragment that represents these data requirements looks as follows:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;fragment PokemonDetails on Node {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  ... on Pokemon {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    id
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    name
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    url
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Note that the &lt;code&gt;id&lt;/code&gt; is required so that Relay can identify the objects in the cache, so it&#39;s included in the payload as well (even if it&#39;s not displayed on the UI).&lt;/p&gt;

&lt;p&gt;These fragments are kept in the same file as the React component, so UI and data requirements are &lt;em&gt;colocated&lt;/em&gt;. Relay then uses a &lt;a href=&quot;https://facebook.github.io/react/docs/higher-order-components.html&quot;&gt;higher-order component&lt;/a&gt; called &lt;a href=&quot;https://facebook.github.io/relay/docs/guides-containers.html#content&quot;&gt;&lt;code&gt;Relay.Container&lt;/code&gt;&lt;/a&gt;, to wrap the component along with its data requirements. From this point, the developer doesn&#39;t have to worry about the data any more! It will be fetched behind the scenes and is made available to the component via its props.&lt;/p&gt;

&lt;a name=&quot;Build-time.Schema.Validation&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Build-time Schema Validation&lt;/h3&gt;

&lt;p&gt;Another great feature of Relay that ensures developer productivity is  &lt;em&gt;schema validation&lt;/em&gt;. At build time, Relay checks your GraphQL queries, fragments and mutations to ensure their compatibility with the GraphQL API. It is thus able to catch any typos or other schema-related errors before you run (or even worse: deploy) your app, saving your users from unpleasant experiences. Note that the schema validation step requires a &lt;a href=&quot;https://facebook.github.io/relay/docs/guides-babel-plugin.html&quot;&gt;Babel Relay Plugin&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;Mutations.in.Relay&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Mutations in Relay&lt;/h2&gt;

&lt;a name=&quot;GraphQL.Recap&quot;&gt;&lt;/a&gt;
&lt;h3&gt;GraphQL Recap&lt;/h3&gt;

&lt;p&gt;In GraphQL, a &lt;em&gt;mutation&lt;/em&gt; is the only way to create, update or delete data on the server - they effectively are the GraphQL abstraction for &lt;em&gt;changing state&lt;/em&gt; in your backend.&lt;/p&gt;

&lt;p&gt;As an example, creating a new Pokemon in our sample app uses the following mutation:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;mutation CreatePokemon($name: String!, $url: String!) {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  createPokemon(input: {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    name: $name,
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    url: $url
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  }) {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    # payload of the mutation (will be returned by the server)
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    pokemon {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      id 
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Notice that mutations, similar to queries, also require a &lt;em&gt;payload&lt;/em&gt; to be specified. This payload represents the information that we&#39;d like to have returned from the server after the mutation was performed. In the above example, we&#39;re asking for the &lt;code&gt;id&lt;/code&gt; of the new &lt;code&gt;pokemon&lt;/code&gt;.&lt;/p&gt;

&lt;a name=&quot;The.Magic:.Declarative.Mutations.....&quot;&gt;&lt;/a&gt;
&lt;h3&gt;The Magic: Declarative Mutations 🔮&lt;/h3&gt;

&lt;p&gt;Relay doesn&#39;t (yet) give the developer the ability to manually modify the data that it stores internally. Instead, with every change, it requires a declarative &lt;em&gt;description&lt;/em&gt; of how the local cache should be updated after the change happened in the form of a &lt;a href=&quot;https://facebook.github.io/relay/docs/guides-mutations.html#content&quot;&gt;mutation&lt;/a&gt; and then takes care of the update under the hood.&lt;/p&gt;

&lt;p&gt;The description is provided by subclassing &lt;code&gt;Relay.Mutation&lt;/code&gt; and implementing (at least) four methods that help Relay to properly update the local store:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getMutation()&lt;/code&gt;: the name of the mutation (from the GraphQL schema)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getVariables()&lt;/code&gt;: the input variables for the mutation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getFatQuery()&lt;/code&gt;: a GraphQL query that fetches all data that potentially was changed due to the mutation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getConfigs()&lt;/code&gt;: a precise specification how the mutation should be incorporated into the cache&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In the following, we&#39;ll take a deeper look at the different kinds of mutations in our sample app, which are used for creating, updating and deleting Pokemons.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Note: We&#39;re using the &lt;a href=&quot;https://www.graph.cool/docs/reference/relay-api/overview-aizoong9ah&quot;&gt;Graphcool Relay API&lt;/a&gt; for this example. If you used &lt;code&gt;graphql-up&lt;/code&gt; to create your own backend, you can explore the API by pasting the endpoint for the Relay API into the address bar of a browser.&lt;/p&gt;&lt;/blockquote&gt;

&lt;a name=&quot;Creating.a.new.Pokemon:..code.RANGE_ADD..code.&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Creating a new Pokemon: &lt;code&gt;RANGE_ADD&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://i.imgur.com/yskx5KU.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let&#39;s walk through the different methods and understand what information we have to provide so that Relay can successfully merge the newly created Pokemon into its store.&lt;/p&gt;

&lt;p&gt;The first two methods, &lt;code&gt;getMutation()&lt;/code&gt; and &lt;code&gt;getVariables()&lt;/code&gt; are relatively obvious and can be retrieved directly from the documentation where the API is described.&lt;/p&gt;

&lt;p&gt;The implementations look as follows:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getMutation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mutation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createPokemon&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Notice that the &lt;code&gt;props&lt;/code&gt; of a &lt;code&gt;Relay.Mutation&lt;/code&gt; are passed through its constructor. Here, we simply provide the &lt;code&gt;name&lt;/code&gt; and the &lt;code&gt;url&lt;/code&gt; of the Pokemon that is to be created.&lt;/p&gt;

&lt;p&gt;Now, on to the interesting parts. In &lt;code&gt;getFatQuery()&lt;/code&gt;, we need to specify the parts that might change due to the mutation. Here, we simply specify the &lt;code&gt;viewer&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getFatQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;fragment&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CreatePokemonPayload&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;viewer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;allPokemons&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Notice that &lt;em&gt;every&lt;/em&gt; subfield of &lt;code&gt;allPokemons&lt;/code&gt; is also automatically included with this approach. In our example app, &lt;code&gt;allPokemons&lt;/code&gt; is the only point we expect to change after our mutation is performed.&lt;/p&gt;

&lt;p&gt;Finally, in &lt;code&gt;getConfigs()&lt;/code&gt;, we need to specify the &lt;a href=&quot;https://facebook.github.io/relay/docs/guides-mutations.html#mutator-configuration&quot;&gt;mutator configurations&lt;/a&gt;, telling Relay exactly how the new data should be incorporated into the cache. This is where the magic happens:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getConfigs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;RANGE_ADD&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;parentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;viewer&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;parentID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewerId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;connectionName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;allPokemons&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;edgeName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;edge&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;rangeBehaviors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;append&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We first express that we want to &lt;em&gt;add&lt;/em&gt; the node using &lt;code&gt;RANGE_ADD&lt;/code&gt; for the &lt;code&gt;type&lt;/code&gt; (there are 5 different types in total).&lt;/p&gt;

&lt;p&gt;Relay internally represents the stored data as a graph, so the remaining information expresses where exactly the new node should be hooked into the existing structure.&lt;/p&gt;

&lt;p&gt;Let&#39;s consider the shape of the data before we move on:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;viewer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;allPokemons&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;edges&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Here we clearly see the direct connection between &lt;code&gt;viewer&lt;/code&gt; and the Pokemons goes through &lt;code&gt;allPokemons&lt;/code&gt; &lt;em&gt;connection&lt;/em&gt;, so the &lt;em&gt;parent&lt;/em&gt; of the new Pokemon is the &lt;code&gt;viewer&lt;/code&gt;. The name of that connection is &lt;code&gt;allPokemons&lt;/code&gt;, and lastly the &lt;code&gt;edgeName&lt;/code&gt; is taken from the payload of the mutation.&lt;/p&gt;

&lt;p&gt;The last piece, &lt;code&gt;rangeBehaviors&lt;/code&gt;, specifies whether we want to &lt;em&gt;append&lt;/em&gt; or &lt;em&gt;prepend&lt;/em&gt; the new node.&lt;/p&gt;

&lt;p&gt;Executing the mutation is as simple as calling &lt;code&gt;commitUpdate&lt;/code&gt; on the &lt;code&gt;relay&lt;/code&gt; prop that&#39;s injected to each component being wrapped with a &lt;code&gt;Relay.Container&lt;/code&gt;. An instance of the mutation and the expected variables are passed as arguments to the constructor:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;_sendCreatePokemonMutation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createPokemonMutation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CreatePokemonMutation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;viewerId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;viewer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pokemonName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pokemonUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;commitUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createPokemonMutation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Updating.a.Pokemon:..code.FIELDS_CHANGE..code.&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Updating a Pokemon: &lt;code&gt;FIELDS_CHANGE&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Like with creating a Pokemon, &lt;code&gt;getMutation()&lt;/code&gt; and &lt;code&gt;getVariables()&lt;/code&gt; are trivial to implement and can be derived directly from the API documentation:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getMutation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mutation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updatePokemon&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;In &lt;code&gt;getFatQuery()&lt;/code&gt;, we only include the &lt;code&gt;pokemon&lt;/code&gt; which includes the updated info this time, since that is the only part we expect to change after our mutation:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getFatQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;fragment&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;UpdatePokemonPayload&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;pokemon&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Finally, &lt;code&gt;getConfigs()&lt;/code&gt;, this time specifies a mutator configuration of type &lt;code&gt;FIELDS_CHANGE&lt;/code&gt; since we&#39;re only updating properties on a single Pokemon:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getConfigs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;FIELDS_CHANGE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;fieldIDs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;pokemon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;As sole additional piece of info, we declare the ID of the Pokemon that is being updated so that Relay has this information available when receiving the new Pokemon data.&lt;/p&gt;

&lt;a name=&quot;Deleting.a.Pokemon:..code.NODE_DELETE..code.&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Deleting a Pokemon: &lt;code&gt;NODE_DELETE&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;As before, &lt;code&gt;getMutation()&lt;/code&gt; and &lt;code&gt;getVariables()&lt;/code&gt; are self-explanatory:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getMutation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mutation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;deletePokemon&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getVariables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then, in &lt;code&gt;getFatQuery()&lt;/code&gt;, we need to retrieve the &lt;code&gt;pokemon&lt;/code&gt; from the mutation payload:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getFatQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;fragment&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DeletePokemonPayload&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;pokemon&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;In &lt;code&gt;getConfigs()&lt;/code&gt;, we&#39;re getting to know another mutator configuration type called &lt;code&gt;NODE_DELETE&lt;/code&gt;. This one requires a &lt;code&gt;parentName&lt;/code&gt; as well as a &lt;code&gt;connectionName&lt;/code&gt;, both coming from the mutation payload and specifying where that node existed in Relay&#39;s data graph. Another requirement, that is specifically relevant for the implementation of a GraphQL server, is that the mutation payload of a deleting mutation always needs to return the &lt;code&gt;id&lt;/code&gt; of the deleted node so that Relay can find that node in its store. Taking all of this together, our implementation of &lt;code&gt;getConfigs()&lt;/code&gt; can be written like so:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;getConfigs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;NODE_DELETE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;parentName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pokemon&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;connectionName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;edge&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;deletedIDFieldName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;deletedId&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Wrapping.Up&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Wrapping Up&lt;/h2&gt;

&lt;p&gt;Relay has a lot of benefits that make it a very compelling framework to use for state management and interaction with GraphQL APIs. Its major strengths are a highly optimized cache, thoughtful UI integration as well as the declarative API for data fetching and mutations.&lt;/p&gt;

&lt;p&gt;The initial version of Relay came with a notable learning curve due to lots of magic happening behind the scenes. However, Facebook recently released the first release candidates of &lt;a href=&quot;https://github.com/facebook/relay/releases/&quot;&gt;Relay v1.0.0&lt;/a&gt; (&lt;em&gt;Relay Modern&lt;/em&gt;) with the &lt;a href=&quot;https://code.facebook.com/posts/1362748677097871&quot;&gt;goal of making Relay generally more approachable&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&#39;s worth noting that Relay isn&#39;t the only available GraphQL client. Apollo Client is a great alternative which is a lot easier to get started with. &lt;a href=&quot;https://www.graph.cool/docs/tutorials/relay-vs-apollo-iechu0shia/&quot;&gt;For a detailed comparison please refer to this article.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to learn more about GraphQL and want to stay up-to-date with the latest news of the GraphQL community, subscribe to &lt;a href=&quot;https://graphqlweekly.com/&quot;&gt;GraphQL Weekly&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Apr 2017 00:00:00 +0100</pubDate>
        <link>http://artsy.github.io/blog/2017/04/26/Relay-Mutations/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/04/26/Relay-Mutations/</guid>
        
        
        <category>graphql</category>
        
        <category>guest</category>
        
        <category>javascript</category>
        
        <category>relay</category>
        
      </item>
    
      <item>
        <title>Calculating the Importance of an Artwork with Apache Spark</title>
        <description>&lt;p&gt;How important is a single artwork within the artist&#39;s body of work? At Artsy we try to answer this question by extracting and scoring a set of features across roughly one million artworks. We call it an &lt;em&gt;iconicity&lt;/em&gt; score and we calculate that in Apache Spark for the entire dataset in under 5 minutes.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;a name=&quot;Extracting.Features&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Extracting Features&lt;/h3&gt;

&lt;p&gt;First, we retrieve artwork features (eg. artwork size or number of users that liked the work), artist features (eg. number of users following an artist), the origin of the work (eg. the work is in a museum) and art genome data (eg. an art historically important sculpture) from HDFS using Hive. Here&#39;s a subset of the query.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Artwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;partnerType&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artistFollowsCount&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isMuseumWork&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;partnerType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;museum&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getArtworks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hc&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;HiveContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Artwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;hc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |SELECT&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |  artwork.id,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |  partner.type,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |  artist_follows_count,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |FROM&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |  db.artworks AS artwork&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |LEFT JOIN db.partners partner&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |  ON partner.id = partner_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |LEFT JOIN db.artists artist&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |  ON artist.id = artwork.artist_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |LEFT JOIN (&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |  SELECT follow_artists.artist_id, COUNT(*) AS artist_follows_count FROM db.follow_artists GROUP BY follow_artists.artist_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;     |) artist_follows_count ON artist_follows_count.artist_id = artwork.artist_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;s&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stripMargin&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rdd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nc&quot;&gt;Artwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;n&quot;&gt;partnerType&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;n&quot;&gt;artistFollowsCount&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getLong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Some features are binary and others require minor transforms. For example, the fact that the work belongs to a museum scores 1, and otherwise scores a 0.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artworkId&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artistFollowsCount&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isMuseumWork&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extractFeatures&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artworks&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Artwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;artworks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artwork&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nc&quot;&gt;Features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;artworkId&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;artistFollowsCount&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;artwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artistFollowsCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;isMuseumWork&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artwork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isMuseumWork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Features are packed in a vector to become usable by the built-in Spark functions.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;   &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nc&quot;&gt;Vectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dense&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;numArtistFollowers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;isMuseumWork&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toDouble&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Normalizing.and.Weighing.Features&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Normalizing and Weighing Features&lt;/h3&gt;

&lt;p&gt;Since having 10,000 artist followers doesn&#39;t make a work 10,000 times more important than the fact that it belongs to a museum, we must normalize them for unit variance across the entire data set. This is also a good time to weigh some features more than others according to our understanding of the art world.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.spark.mllib.feature._&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;org.apache.spark.mllib.linalg._&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scaler&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StandardScaler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weightAdjuster&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ElementwiseProduct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Vectors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dense&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// number of users following an artist is a popularity contest&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// having a work in a museum is a big deal&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;features&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artworkId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;weightAdjuster&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;n&quot;&gt;scaler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Scoring.Artworks&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Scoring Artworks&lt;/h3&gt;

&lt;p&gt;The score is just the sum of the normalized and weighted features.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;normalizedFeatures&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Vector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;normalizedFeatures&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toArray&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Storing.Data&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Storing Data&lt;/h3&gt;

&lt;p&gt;We write this data in JSON format to S3, then load it in a system that serves the Artsy API.&lt;/p&gt;

&lt;a name=&quot;Conclusion&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;In our dataset this creates a nice distribution. Here&#39;s an example of iconicity across &lt;a href=&quot;https://www.artsy.net/artist/banksy/works&quot;&gt;works by the street artist Banksy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2017-04-21-calculating-the-importance-of-an-artwork-with-apache-spark/banksy-iconicity.png&quot; alt=&quot;banksy iconicity&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We notably sort works by iconicity in &lt;a href=&quot;https://www.artsy.net/search?q=banksy&quot;&gt;search results&lt;/a&gt; and in the carousel on top of artist pages. We also have made it available in our &lt;a href=&quot;https://developers.artsy.net&quot;&gt;public API&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Apr 2017 00:00:00 +0100</pubDate>
        <link>http://artsy.github.io/blog/2017/04/21/calculating-the-importance-of-an-artwork-with-apache-spark/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/04/21/calculating-the-importance-of-an-artwork-with-apache-spark/</guid>
        
        
        <category>apache spark</category>
        
        <category>big data</category>
        
      </item>
    
      <item>
        <title>Artsy&#39;s Technology Stack, 2017</title>
        <description>&lt;a name=&quot;History&quot;&gt;&lt;/a&gt;
&lt;h1&gt;History&lt;/h1&gt;

&lt;p&gt;Artsy was &lt;a href=&quot;http://www.nytimes.com/2012/10/09/arts/design/artsy-is-mapping-the-world-of-art-on-the-web.html&quot;&gt;launched in 2012 as the &quot;Art Genome Project&quot;&lt;/a&gt; and grew exponentially ever since.&lt;/p&gt;

&lt;p&gt;By 2014 we had 230,000 works of art from 600 museums and institutions and launched our first business, a subscription service for commercial galleries, bringing over 80,000 works for sale and partnerships with 37 art fairs and a handful of benefit auctions. That year collectors from 82 countries inquired on over $5.5B of art.&lt;/p&gt;

&lt;p&gt;By 2015 we doubled our &quot;for sale&quot; inventory and aggregated 4,000 of the world&#39;s leading galleries and 60 art fairs. We also launched two new businesses: commercial auctions and online media.&lt;/p&gt;

&lt;p&gt;Finally, in 2016 we, again, doubled our paid gallery network size to become the largest gallery network in the world and grew to become the most-read online art publication as our highly engaging editorial traffic ballooned 320%. We also launched a platform to bid in live auctions and a consignments service with all major auction houses.&lt;/p&gt;

&lt;a name=&quot;The.Artsy.Business.in.2017&quot;&gt;&lt;/a&gt;
&lt;h1&gt;The Artsy Business in 2017&lt;/h1&gt;

&lt;p&gt;Artsy in 2017 is a very wide platform and it can be challenging to characterize simply. But when you boil it down to its essence, Artsy offers information and a marketplace. Our written content and fair coverage keep people informed about the art world, and the Art Genome powers our tools for exploration. Through our partnerships with the major player in the art market, galleries and auction houses, we offer our users a unified platform for buying and selling art.&lt;/p&gt;

&lt;p&gt;Internally we consider Artsy to have three businesses: &lt;em&gt;Auctions&lt;/em&gt;, &lt;em&gt;Content&lt;/em&gt; and &lt;em&gt;Listings&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Auctions&lt;/em&gt;: Auction houses and charities use Artsy as a sales channel for a commission because collectors want to discover and buy art in a single, central platform that excels at surfacing the art they want from a global market.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Content&lt;/em&gt;: Brands pay Artsy to reach the first art audience at scale by enabling evergreen content online and for offline engagement during art world events.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;em&gt;Listings&lt;/em&gt;: Galleries, Fairs and Institutions subscribe to Artsy for a fee because we bring a very large audience of art collectors and enthusiasts to their virtual doors.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The Artsy team is now 166 employees across three offices in New York, Berlin and London. The Engineering organization is now 28 engineers, including 4 leads, 3 directors and a CTO. In this post, we&#39;d like to comprehensively cover what, and how we make the technical and human sides of Artsy businesses work.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;center&gt;
 &lt;img src=&quot;/images/tech-2017/businesses.svg&quot; style=&quot;width:100%;&quot;&gt;
&lt;/center&gt;


&lt;a name=&quot;Organizational.Structures&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Organizational Structures&lt;/h1&gt;

&lt;p&gt;In 2016, we &lt;a href=&quot;/blog/2016/03/28/artsy-engineering-organization-stack&quot;&gt;updated the Engineering organization&lt;/a&gt; to be oriented around product verticals for businesses. We used to focus more on practices to group engineers working with the same technologies across product teams to facilitate knowledge sharing and avoid redundant efforts.&lt;/p&gt;

&lt;p&gt;Since then, web and mobile &quot;practices&quot; have largely been subsumed into the separate product teams. Mobile&#39;s increasing reliance on React Native has aligned nicely with web tooling. It no longer made sense to keep the teams separate, so where product teams used to have 2 separate sub-teams of engineers, they&#39;ve now merged into 1.&lt;/p&gt;

&lt;p&gt;The Platform &quot;practice&quot; has remained as a way to coordinate and share work among product teams, as well as monitor and upgrade Artsy&#39;s platform over time. Most platform engineers operate from within product teams, while a few focusing on data and infrastructure form a core, dedicated Platform team.&lt;/p&gt;

&lt;center&gt;
 &lt;img src=&quot;/images/tech-2017/engineering-teams.svg&quot; style=&quot;width:100%;&quot;&gt;
&lt;/center&gt;


&lt;a name=&quot;Artsy.Technology.Infrastructure.2017.-.Splitting.the.Monolith&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Artsy Technology Infrastructure 2017 - Splitting the Monolith&lt;/h1&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
&lt;a href=&#39;/images/tech-2017/artsy-stack.svg&#39;&gt;
  &lt;img src=&quot;/images/tech-2017/artsy-stack.svg&quot; alt=&quot;The Artsy Tech Stack 2017&quot; style=&quot;width:100%;&quot;&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&quot;article-container-single&quot;&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;a name=&quot;User.Facing&quot;&gt;&lt;/a&gt;
&lt;h2&gt;User Facing&lt;/h2&gt;

&lt;p&gt;A lot of the user-facing focus is on being able to present interfaces with a quality worthy of art.&lt;/p&gt;

&lt;p&gt;What you see today when you go to &lt;a href=&quot;https://artsy.net&quot;&gt;www.artsy.net&lt;/a&gt; is a website built with &lt;a href=&quot;http://ezeljs.com&quot;&gt;Ezel.js&lt;/a&gt;, which is a boilerplate for &lt;a href=&quot;http://backbonejs.org&quot;&gt;Backbone&lt;/a&gt; projects running on &lt;a href=&quot;https://nodejs.org&quot;&gt;Node&lt;/a&gt; and using &lt;a href=&quot;http://expressjs.com&quot;&gt;Express&lt;/a&gt; and &lt;a href=&quot;http://browserify.org&quot;&gt;Browserify&lt;/a&gt;. We used to have separate projects for mobile and desktop web, but they &lt;a href=&quot;https://github.com/artsy/force/pull/890&quot;&gt;are now merged&lt;/a&gt;. The combined app is hosted on &lt;a href=&quot;http://heroku.com&quot;&gt;Heroku&lt;/a&gt; and uses &lt;a href=&quot;http://redis.io&quot;&gt;Redis&lt;/a&gt; for caching. Assets, including artwork images, are served from &lt;a href=&quot;http://aws.amazon.com/s3&quot;&gt;Amazon S3&lt;/a&gt; via the &lt;a href=&quot;http://aws.amazon.com/cloudfront&quot;&gt;CloudFront CDN&lt;/a&gt;. This &lt;a href=&quot;https://github.com/artsy/force&quot;&gt;code is open-source&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What you see today when you open the &lt;a href=&quot;https://itunes.apple.com/us/app/artsy-collect-and-bid-on-fine-art-design/id703796080?mt=8&quot;&gt;Artsy iOS app&lt;/a&gt; is a mix of Objective-C, Swift and React Native. Objective-C and Swift continue to provide a lot of over-arching cross-View Controller code. While individual representations of Artsy resources tend to be built in React Native. All of our React Native code uses Relay to handle API integration. This &lt;a href=&quot;https://github.com/artsy/eigen&quot;&gt;code is open-source&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can also find Artsy on &lt;a href=&quot;http://alexa.artsy.net&quot;&gt;Alexa&lt;/a&gt; and &lt;a href=&quot;http://assistant.artsy.net&quot;&gt;Google Home&lt;/a&gt;, which are both open-source Node.js applications. There is also an open-source &lt;a href=&quot;https://github.com/artsy/emergence/&quot;&gt;Apple TV&lt;/a&gt; app built in Swift.&lt;/p&gt;

&lt;p&gt;Our core API serves the public facets of our product, many of our own internal applications, and even &lt;a href=&quot;https://developers.artsy.net&quot;&gt;some of your own projects&lt;/a&gt;. It&#39;s built with &lt;a href=&quot;https://www.ruby-lang.org/en&quot;&gt;Ruby&lt;/a&gt;, &lt;a href=&quot;http://rack.github.io&quot;&gt;Rack&lt;/a&gt;, &lt;a href=&quot;http://rubyonrails.org&quot;&gt;Rails&lt;/a&gt;, and &lt;a href=&quot;https://github.com/intridea/grape&quot;&gt;Grape&lt;/a&gt; serving primarily JSON. The API is hosted on &lt;a href=&quot;http://aws.amazon.com/opsworks&quot;&gt;AWS OpsWorks&lt;/a&gt; and retrieves data from several &lt;a href=&quot;http://www.mongodb.com&quot;&gt;MongoDB&lt;/a&gt; databases hosted with &lt;a href=&quot;https://www.compose.io&quot;&gt;Compose&lt;/a&gt;. It also uses &lt;a href=&quot;http://memcached.org&quot;&gt;Memcached&lt;/a&gt; for caching and &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt; for background queues with &lt;a href=&quot;https://github.com/mperham/sidekiq/&quot;&gt;Sidekiq&lt;/a&gt;. It runs background jobs with &lt;a href=&quot;https://github.com/collectiveidea/delayed_job&quot;&gt;delayed_job&lt;/a&gt;. We used to employ &lt;a href=&quot;http://lucene.apache.org/solr&quot;&gt;Apache Solr&lt;/a&gt; and even &lt;a href=&quot;https://www.google.com/cse&quot;&gt;Google Custom Search&lt;/a&gt; for the many search functions, but have since consolidated on &lt;a href=&quot;https://www.elastic.co&quot;&gt;Elasticsearch&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most modern code for both the website and the iOS app use an orchestration layer which is powered by &lt;a href=&quot;http://graphql.org&quot;&gt;GraphQL&lt;/a&gt; to streamline their data fetching and reduce front-end complexity. Our GraphQL server is an &lt;a href=&quot;http://expressjs.com&quot;&gt;Express&lt;/a&gt; app, using &lt;a href=&quot;https://github.com/graphql/express-graphql&quot;&gt;express-graphql&lt;/a&gt; to provide a single API end-point. The API does not access our data directly, but forwards requests to the core API or other services. We have been migrating shared display logic into the GraphQL server, to make it easier to build consistent clients. This &lt;a href=&quot;https://github.com/artsy/metaphysics&quot;&gt;code is open-source&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Consistently, our front-end code &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/&quot;&gt;has moved towards&lt;/a&gt; using React across all platforms along with introducing stricter JavaScript languages like TypeScript over CoffeeScript in order to provide better tooling.&lt;/p&gt;

&lt;p&gt;We continue to have a &lt;a href=&quot;https://developers.artsy.net&quot;&gt;public HAL+JSON API&lt;/a&gt; for external developers. This API is in active use for contemporary production services inside Artsy and the &lt;a href=&quot;https://github.com/artsy/doppler&quot;&gt;website is open-source&lt;/a&gt;, too.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;
 &lt;img src=&quot;/images/tech-2017/languages.svg&quot; style=&quot;width:100%;&quot;&gt;
&lt;/center&gt;&lt;/p&gt;

&lt;a name=&quot;Partner-Facing&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Partner-Facing&lt;/h2&gt;

&lt;p&gt;The vast customer-facing business is powered by a Content Management System (CMS) for gallery and institutional partners. This CMS lets them upload and manage gallery shows, fair booths, create artists, and edit artwork metadata. All CMS components talk to our core API. We also have a number of CMS-like internal applications to manage partners, auctions, art genomes, configuring fairs or performing recurrent billing (we use Stripe for storing and charging credit cards and ACH) with invoicing.&lt;/p&gt;

&lt;p&gt;CMS applications are based on stable, mature technologies like &lt;a href=&quot;http://rubyonrails.org&quot;&gt;Rails&lt;/a&gt;, &lt;a href=&quot;http://getbootstrap.com&quot;&gt;Bootstrap&lt;/a&gt;, &lt;a href=&quot;https://github.com/turbolinks/turbolinks&quot;&gt;Turbolinks&lt;/a&gt; and &lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt;, and gradually adopts modern client-side technologies like &lt;a href=&quot;https://facebook.github.io/react&quot;&gt;React&lt;/a&gt; and &lt;a href=&quot;http://browserify.org&quot;&gt;Browserify&lt;/a&gt;. They share a lot of common infrastructure.&lt;/p&gt;

&lt;p&gt;We have a generic image-processing service in-house, which uses &lt;a href=&quot;http://rubyonrails.org&quot;&gt;Rails&lt;/a&gt;, &lt;a href=&quot;https://github.com/mperham/sidekiq/&quot;&gt;Sidekiq&lt;/a&gt;, &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;, and &lt;a href=&quot;https://github.com/rmagick/rmagick&quot;&gt;RMagick&lt;/a&gt; with &lt;a href=&quot;http://www.imagemagick.org/script/index.php&quot;&gt;ImageMagick&lt;/a&gt;. It receives image processing requests from many Artsy applications and generates thumbnails, tiles and watermarks images on S3.&lt;/p&gt;

&lt;a name=&quot;Collector-Facing&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Collector-Facing&lt;/h2&gt;

&lt;p&gt;Collectors inquire on artworks and engage in conversations with partners. For this purpose we have built a generic messaging system that manages communications between different parties. It receives messages via API or e-mail, finds or creates a conversation based on the recipients and forwards them to the proper addresses in that conversation. Its doesn&#39;t assume anything about the contents of the messages, which makes it a generic system for any type of conversation. The conversations surface to our partners via CMS.&lt;/p&gt;

&lt;a name=&quot;Running.Auctions&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Running Auctions&lt;/h2&gt;

&lt;p&gt;The Auctions business began with doing the occasional benefit auctions for charities. Most of these auctions are online-only, timed sales. The initial version of our auction systems came together before we began our move to microservices, and so it is baked into our core API. Last year, we launched a live auction integration product to allow users to bid on works at commercial sales at the actual auction house sale rooms. The real-time requirements of this system required a rethinking of how we process our bids.&lt;/p&gt;

&lt;p&gt;The core API for a commercial auction is a Scala micro-service that uses &lt;a href=&quot;http://akka.io&quot;&gt;Akka&lt;/a&gt; for distributed computing. It stores information in an append-only storage engine, based on Akka Persistence, with a small library we developed called &lt;a href=&quot;https://github.com/artsy/atomic-store&quot;&gt;atomic-store&lt;/a&gt;. Communication with external clients can either be done via a REST API, or via WebSockets. People visiting a Live Auction on the web are interacting with a &lt;a href=&quot;https://medium.com/@mjackson/universal-javascript-4761051b7ae9#.ev1yd3juy&quot;&gt;universal&lt;/a&gt; &lt;a href=&quot;https://facebook.github.io/react&quot;&gt;React&lt;/a&gt;+&lt;a href=&quot;http://redux.js.org&quot;&gt;Redux&lt;/a&gt; JavaScript app, served from an &lt;a href=&quot;http://expressjs.com&quot;&gt;Express&lt;/a&gt; server. Bidders visiting a Live Auction on iOS are interacting with a Swift application built with &lt;a href=&quot;https://github.com/JensRavens/Interstellar&quot;&gt;Interstellar&lt;/a&gt;, &lt;a href=&quot;https://github.com/daltoniam/starscream&quot;&gt;Starscream&lt;/a&gt; and &lt;a href=&quot;https://github.com/SwiftyJSON/SwiftyJSON&quot;&gt;SwiftyJSON&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A more detailed overview of the Auctions stack can be found in &lt;a href=&quot;/blog/2016/08/09/the-tech-behind-live-auction-integration&quot;&gt;The Tech Behind Live Auction Integration&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;Publishing&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Publishing&lt;/h2&gt;

&lt;p&gt;Our in-house editorial team and partners use an &lt;a href=&quot;https://github.com/artsy/positron&quot;&gt;open-source&lt;/a&gt; platform called &quot;Writer&quot; (which we&#39;ve built) to publish rich content across the web. Writer is split in two parts: the editorial-focused CMS and a JSON API that stores and distributes content separately from the rest of Artsy&#39;s stack.&lt;/p&gt;

&lt;p&gt;Writer&#39;s frontend is built with &lt;a href=&quot;http://ezeljs.com&quot;&gt;Ezel.js&lt;/a&gt;, which is a boilerplate for &lt;a href=&quot;http://backbonejs.org&quot;&gt;Backbone&lt;/a&gt; projects running on &lt;a href=&quot;https://nodejs.org&quot;&gt;Node&lt;/a&gt; and using &lt;a href=&quot;http://expressjs.com&quot;&gt;Express&lt;/a&gt; and &lt;a href=&quot;http://browserify.org&quot;&gt;Browserify&lt;/a&gt;. We also heavily use &lt;a href=&quot;https://facebook.github.io/react&quot;&gt;React&lt;/a&gt; and write in &lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt;. Writer&#39;s backend exposes &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST&lt;/a&gt;-based and &lt;a href=&quot;http://graphql.org&quot;&gt;GraphQL&lt;/a&gt; APIs that are consumed by our applications.&lt;/p&gt;

&lt;p&gt;You can see Writer being put to work when you see articles on &lt;a href=&quot;https://www.artsy.net&quot;&gt;www.artsy.net&lt;/a&gt;, Facebook Instant Articles, Google AMP, RSS, Apple News, and email. We handle the distribution and display in all of these channels. We also support brand sponsorship deals and produce front-end heavy projects such as &lt;a href=&quot;https://www.artsy.net/2016-year-in-art&quot;&gt;Year in Art 2016&lt;/a&gt;, and &lt;a href=&quot;https://www.artsy.net/article/artsy-editorial-2015-the-year-in-art&quot;&gt;Year in Art 2015&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;Data.Pipeline&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Data Pipeline&lt;/h2&gt;

&lt;p&gt;Data generally flows from consumer applications and services into &lt;a href=&quot;https://aws.amazon.com/redshift&quot;&gt;AWS RedShift&lt;/a&gt;. We use a set of &lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;rake&lt;/a&gt; tasks run on &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Build+Flow+Plugin&quot;&gt;Jenkins&lt;/a&gt; to move data from our several MongoDB and PostgreSQL databases to Redshift via &lt;a href=&quot;https://aws.amazon.com/s3&quot;&gt;S3&lt;/a&gt;. These rake tasks shell out to &lt;a href=&quot;https://www.postgresql.org/docs/9.3/static/sql-copy.html&quot;&gt;psql&lt;/a&gt; or &lt;a href=&quot;https://docs.mongodb.com/manual/reference/program/mongoexport&quot;&gt;mongo-export&lt;/a&gt; to generate CSV files for a list of services and upload them to an S3 bucket, then load those CSV files plus others found in that bucket (placed there by other services) into Redshift. If a &lt;a href=&quot;http://docs.aws.amazon.com/redshift/latest/dg/r_COPY.html&quot;&gt;Redshift copy&lt;/a&gt; fails due to data changes we sample the CSV and generate a working schema from its contents.&lt;/p&gt;

&lt;p&gt;We also store application usage data provided by &lt;a href=&quot;https://segment.com/warehouses&quot;&gt;Segment Warehouses&lt;/a&gt; as well as data from vendors such as &lt;a href=&quot;https://www.salesforce.com&quot;&gt;Salesforce&lt;/a&gt; and &lt;a href=&quot;http://www.sailthru.com&quot;&gt;Sailthru&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For production data processing (such as recommendations), large-scale machine learning or even simpler parallel processing such as generating website sitemaps, we have our own Hadoop cluster configured and managed by &lt;a href=&quot;https://www.cloudera.com/products/product-components/cloudera-manager.html&quot;&gt;Cloudera Manager&lt;/a&gt; and running on EC2. We leverage &lt;a href=&quot;http://spark.apache.org&quot;&gt;Apache Spark&lt;/a&gt; and &lt;a href=&quot;https://www.cloudera.com/products/open-source/apache-hadoop.html&quot;&gt;Hadoop&lt;/a&gt; with some &lt;a href=&quot;http://oozie.apache.org&quot;&gt;Ooozie&lt;/a&gt; workflow scheduling. The same data pipeline that writes data to S3 also pumps data to HDFS with either Ruby code or &lt;a href=&quot;http://sqoop.apache.org&quot;&gt;Sqoop&lt;/a&gt; and is read by Spark jobs written in Scala using &lt;a href=&quot;https://hive.apache.org&quot;&gt;Hive&lt;/a&gt;. Spark has improved performance and capacity tenfold over our older in-house systems and we will be moving all lengthy processing implemented in Ruby to this system gradually.&lt;/p&gt;

&lt;a name=&quot;Analytics&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Analytics&lt;/h2&gt;

&lt;p&gt;For general data access and dashboards we rely on &lt;a href=&quot;https://looker.com&quot;&gt;Looker&lt;/a&gt;. This system empowers all non-engineers to access all of our data. At the time of writing, there are 50 users running 3,500 queries a day against Redshift via Looker. We&#39;ve found it expedient to pre-compute common denormalized views, and to create our own session rollups from raw pageviews and events for the additional flexibility it gives us in understanding user behavior.&lt;/p&gt;

&lt;p&gt;For more in-depth work, we use &lt;a href=&quot;https://ipython.org/notebook.html&quot;&gt;Jupyter Notebooks&lt;/a&gt; to connect to our Redshift cluster and by default import &lt;a href=&quot;http://pandas.pydata.org&quot;&gt;pandas&lt;/a&gt;, &lt;a href=&quot;http://scikit-learn.org/stable&quot;&gt;sci-kit learn&lt;/a&gt;, and &lt;a href=&quot;http://matplotlib.org/api/pyplot_api.html&quot;&gt;pyplot&lt;/a&gt; for data analysis.&lt;/p&gt;

&lt;a name=&quot;Search&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Search&lt;/h2&gt;

&lt;p&gt;We completed our full migration from &lt;a href=&quot;http://lucene.apache.org/solr&quot;&gt;Solr&lt;/a&gt; to &lt;a href=&quot;https://www.elastic.co&quot;&gt;Elasticsearch&lt;/a&gt; in the last 18 months, and now use Elasticsearch across all front-ends. This ranges from our artwork filter interfaces through to our real-time artwork similarity features. Elasticsearch gives us high availability clustering features out of the box and easy horizontal scaling on demand.&lt;/p&gt;

&lt;a name=&quot;Platform.Services&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Platform Services&lt;/h2&gt;

&lt;p&gt;As Artsy&#39;s business has grown more complex, so has the data and concepts handled by its core API. We&#39;ve begun supporting certain product areas with separate, dedicated API services, and even extracting existing API domains into separate services when practical. These services tend to expose simple &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST&lt;/a&gt;-ful HTTP APIs, maintain separate data sources, and even do their own &lt;a href=&quot;/blog/2016/10/26/jwt-artsy-journey&quot;&gt;authentication&lt;/a&gt;. This has certain advantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each system can be deployed and scaled independently.&lt;/li&gt;
&lt;li&gt;Each chooses the best-suited languages and technologies for its purpose.&lt;/li&gt;
&lt;li&gt;Code bases remain more focused and developers&#39; cognitive overhead is minimized.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Balancing these out are some very real disadvantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Development must sometimes touch multiple systems.&lt;/li&gt;
&lt;li&gt;Some data is copied between services. These can become out-of-sync, though we always try to have a single &lt;em&gt;authoritative&lt;/em&gt; source in such cases.&lt;/li&gt;
&lt;li&gt;Deploys must be coordinated.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;At our size and complexity, a single code base is simply impractical. So, we&#39;ve tried to be consistent in the coding, deployment, monitoring, and logging practices of these services. The more repeatable and disciplined our process, the less overhead is introduced by additional systems.&lt;/p&gt;

&lt;p&gt;We&#39;ve also explored alternate communication patterns, so systems aren&#39;t as dependent on each other&#39;s APIs. Recently we&#39;ve begun publishing a stream of data events from our core systems that other systems can consume. Other systems can simply subscribe to the notifications they care about, so the source system doesn&#39;t need to be concerned about integrating with one more destination. After experimenting with &lt;a href=&quot;https://kafka.apache.org&quot;&gt;Kafka&lt;/a&gt; but finding it hard to manage, we switched to &lt;a href=&quot;https://www.rabbitmq.com&quot;&gt;RabbitMQ&lt;/a&gt; for this purpose. To provide consistency when publishing events we have &lt;a href=&quot;https://github.com/artsy/artsy-eventservice&quot;&gt;our own gem&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;Operations&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Operations&lt;/h2&gt;

&lt;p&gt;All our recent AWS infrastructure is configured in code using &lt;a href=&quot;https://www.terraform.io&quot;&gt;Terraform&lt;/a&gt;. This approach has allowed us to quickly replicate entire deployments along with their dependencies and has increased visibility into the state of our infrastructure across our teams. We started developing an open source &lt;a href=&quot;https://www.docker.com&quot;&gt;Docker&lt;/a&gt; workflow toolkit named &lt;a href=&quot;https://github.com/artsy/hokusai&quot;&gt;Hokusai&lt;/a&gt; in order to manage a containerized workflow, CI and deployment to &lt;a href=&quot;https://kubernetes.io&quot;&gt;Kubernetes&lt;/a&gt;. Our Kubernetes clusters are managed using &lt;a href=&quot;https://github.com/kubernetes/kops&quot;&gt;Kops&lt;/a&gt; and similarly provisioned using Terraform. This new workflow is reducing our dependence on Heroku, giving us more flexibility in our deployments and a more efficient use of server resources.&lt;/p&gt;

&lt;a name=&quot;Closing.Remarks&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Closing Remarks&lt;/h2&gt;

&lt;p&gt;Like any attempts at mapping something as large as the daily work for a thirty-ish person engineering team, &lt;a href=&quot;https://en.wikipedia.org/wiki/Map%E2%80%93territory_relation&quot;&gt;the map is not the territory&lt;/a&gt;. However, the exploration is worth the time it takes to keep notes for reading again in the next two years.&lt;/p&gt;

&lt;p&gt;If you&#39;re interested in helping us make this an even longer post in two more years, or &lt;em&gt;more interestingly&lt;/em&gt; shorter - we nearly always have a &lt;a href=&quot;https://www.artsy.net/jobs&quot;&gt;position open for engineers&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 14 Apr 2017 00:00:00 +0100</pubDate>
        <link>http://artsy.github.io/blog/2017/04/14/artsy-technology-stack-2017/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/04/14/artsy-technology-stack-2017/</guid>
        
        
        <category>eigen</category>
        
        <category>force</category>
        
        <category>gravity</category>
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>What is fastlane match?</title>
        <description>&lt;p&gt;Like anyone working on a non-trivial app in the iOS world who values their time, we use fastlane. &lt;a href=&quot;https://fastlane.tools&quot;&gt;fastlane&lt;/a&gt; is a suite
of tools that makes it much simpler to automate the very manual processes provided by Apple for deployment.&lt;/p&gt;

&lt;p&gt;We&#39;ve adopted it in a relatively piece-meal manner in different projects, converting custom in-house code to something
provided by the gem.  Over time we found what pieces of the suite work for us. &lt;a href=&quot;https://github.com/artsy/energy/pull/266&quot;&gt;I&#39;ve adopted another today&lt;/a&gt;: &lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/match&quot;&gt;match&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;match automates setting up your iOS projects for code signing. One of the most arduous orthogonal tasks which every dev team learns and then forgets.&lt;/p&gt;

&lt;p&gt;In using match, we have given away a bit of control with code signing, and so this post is going to dig into; what we used
to have, and how it works now with match instead.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;When match came out, I knew this was a 🌟 idea.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Automatically generate the right certificates and keys for your different apps and environments.&lt;/li&gt;
&lt;li&gt;Take all your developer certificates and keys, move them to a central place accessible via private git repos.&lt;/li&gt;
&lt;li&gt;Encrypt all your certs and keys, the team just needs to share one password.&lt;/li&gt;
&lt;li&gt;Migrate all of those keys on both the developer&#39;s and CI&#39;s computers.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You can now have a consistent signing setup between how you work, and how your CI runs. After understanding this, I migrated
Artsy&#39;s app store apps to deploy via &lt;a href=&quot;https://circleci.com&quot;&gt;Circle CI&lt;/a&gt;. We initially gave match a shot, but ended up having issues with supporting
multiple apps. So, I replicated the core ideas in match into our Fastfile. It looked like this:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;lane&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:setup_for_app_store&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;app_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;eigen&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;signing_root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;signing&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;sb&quot;&gt;`git clone https://github.com/artsy/mobile_code_signing.git &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signing_root&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# prints out the codesigning identities&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;security find-identity -v -p codesigning&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# Install the iOS distribution certificate, -A&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;security import &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signing_root&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/ios_distribution.cer  -k ~/Library/Keychains/login.keychain -A&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# Move our provisioning profile in&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;profile_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expand_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;~&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/Library/MobileDevice/Provisioning Profiles/&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;destination&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;.mobileprovision&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signing_root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/profiles/&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/*&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# Ensure folder exists&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;directory?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mkdir_p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# Migrate it in&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;no&quot;&gt;FileUtils&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;profile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;destination&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Installed Profile&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# Install the key&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glob&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signing_root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/keys/&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/*&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;security import &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; -k ~/Library/Keychains/login.keychain -P &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;MATCH_PASSWORD&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;  -A &amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# prints out the codesigning identities&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;security find-identity -v -p codesigning&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# Clean-up&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;sb&quot;&gt;`rm -rf &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;signing_root&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Pretty neat, huh? It handles the centralization and migration of certificates. The trade-off against match is:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We continue to maintain our own certificates, keys and provisioning profiles.&lt;/li&gt;
&lt;li&gt;There is no easy way to update these.&lt;/li&gt;
&lt;li&gt;There is tooling which makes it easy to see the state of all the code signing process.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A year later, on a project which gets no-where near as much developer attention, I discovered that we had got multiple
parts of the certs, keys and profiles wrong when updating our central repo. So, for &lt;a href=&quot;http://folio.artsy.net&quot;&gt;this project&lt;/a&gt;, I have switched to use match.&lt;/p&gt;

&lt;hr /&gt;

&lt;a name=&quot;So.how.does.it.work.now.&quot;&gt;&lt;/a&gt;
&lt;h1&gt;So how does it work now?&lt;/h1&gt;

&lt;p&gt;First, I ran &lt;code&gt;bundle exec fastlane appstore&lt;/code&gt; and &lt;code&gt;bundle exec fastlane dev&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This creates the certificates, keys and profiles on iTunes connect and gives you output similar to this:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;37&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;38&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;39&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;40&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;41&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;42&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;43&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;44&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;45&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;46&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;47&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;48&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;49&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;50&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;51&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;52&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;53&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;54&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;+-----------------------+------------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;                        Summary &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; match 2.25.0                        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+-----------------------+------------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;readonly&lt;/span&gt;              &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;                                           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; git_url               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; https://github.com/artsy/mobile_fastlane_match &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;                  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; appstore                                       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; git_branch            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; master                                         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; app_identifier        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sy.art.folio                                   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; username              &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; it@artsymail.com                               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; keychain_name         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; login.keychain                                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; team_id               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 23KMWZ572J                                     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; team_name             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Art.sy Inc.                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; verbose               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;                                          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; force                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;                                          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; skip_confirmation     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;                                          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; shallow_clone         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;                                          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; force_for_new_devices &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;                                          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; skip_docs             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;                                          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; platform              &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; ios                                            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+-----------------------+------------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;17:03:52&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Cloning remote git repo...
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;17:03:54&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: 🔓  Successfully decrypted certificates repo
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;17:03:54&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Installing certificate...
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+-------------------+-----------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;                       Installed Certificate                       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+-------------------+-----------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; User ID           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 23KMWZ572J                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Common Name       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; iPhone Distribution: Art.sy Inc. &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;23KMWZ572J&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Organisation Unit &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 23KMWZ572J                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Organisation      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Art.sy Inc.                                   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Country           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; US                                            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Start Datetime    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Apr  &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; 13:59:06 &lt;span class=&quot;m&quot;&gt;2017&lt;/span&gt; GMT                      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; End Datetime      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Apr  &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; 13:59:06 &lt;span class=&quot;m&quot;&gt;2018&lt;/span&gt; GMT                      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+-------------------+-----------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;17:03:56&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: Installing provisioning profile...
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+---------------------+-----------------------------------------+-------------------------------------------------------------------------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;                                                                       Installed Provisioning Profile                                                                        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+---------------------+-----------------------------------------+-------------------------------------------------------------------------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Parameter           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Environment Variable                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Value                                                                                                       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+---------------------+-----------------------------------------+-------------------------------------------------------------------------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; App Identifier      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;                                         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sy.art.folio                                                                                                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Type                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;                                         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; appstore                                                                                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Platform            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;                                         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; ios                                                                                                         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Profile UUID        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sigh_sy.art.folio_appstore              &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; b045df0f-a691-4b7a-ac34-8349a3684030                                                                        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Profile Name        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sigh_sy.art.folio_appstore_profile-name &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; match AppStore sy.art.folio                                                                                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Profile Path        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sigh_sy.art.folio_appstore_profile-path &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; /Users/orta/Library/MobileDevice/Provisioning Profiles/b045df0f-a691-4b7a-ac34-8349a3684030.mobileprovision &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Development Team ID &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sigh_sy.art.folio_appstore_team-id      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 23KMWZ572J                                                                                                  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;+---------------------+-----------------------------------------+-------------------------------------------------------------------------------------------------------------+
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;17:03:56&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;: All required keys, certificates and provisioning profiles are installed 🙌
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Which at a glimpse gives a lot of the most useful information about how all the pieces come together. The new repo looks like this:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree mobile_fastlane_match
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;├── README.md
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;├── certs
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;│   ├── development
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;│   │   ├── P4K6FACAUD.cer
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;│   │   └── P4K6FACAUD.p12
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;│   └── distribution
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;│       ├── N5BMJ28RQ2.cer
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;│       └── N5BMJ28RQ2.p12
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;├── match_version.txt
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;└── profiles
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    ├── appstore
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    │   └── AppStore_sy.art.folio.mobileprovision
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    └── development
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        └── Development_sy.art.folio.mobileprovision
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;So..what.is.Match.doing.here.&quot;&gt;&lt;/a&gt;
&lt;h2&gt;So, what is Match doing here?&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;match creates a new key (the &lt;code&gt;*.p12&lt;/code&gt;) - normally you would generate one of these through Keychain, and the entire team would
to share this. We keep ours in team &lt;a href=&quot;http://1password.com&quot;&gt;1Password&lt;/a&gt;. It needs to be used consistently when request certificates from Apple
though the &quot;Request a Certificate from a Certificate Authority&quot; part of getting your certs set up.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using &lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/cert&quot;&gt;cert&lt;/a&gt;: match will use this key &lt;a href=&quot;https://github.com/fastlane/fastlane/blob/14dea61e4c81bf9be13bb86c09aa225c6e572618/cert/lib/cert/runner.rb#L141&quot;&gt;to create a signing request&lt;/a&gt; for you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using &lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/cert&quot;&gt;cert&lt;/a&gt;: match will generate a certificate for &lt;a href=&quot;https://github.com/fastlane/fastlane/blob/14dea61e4c81bf9be13bb86c09aa225c6e572618/cert/lib/cert/runner.rb#L79&quot;&gt;development or distribution&lt;/a&gt; for you.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Using &lt;a href=&quot;https://github.com/fastlane/fastlane/tree/master/cert&quot;&gt;cert&lt;/a&gt;: match will &lt;a href=&quot;https://github.com/fastlane/fastlane/blob/14dea61e4c81bf9be13bb86c09aa225c6e572618/match/lib/match/runner.rb#L133&quot;&gt;generate a Provisioning Profile&lt;/a&gt; using your certificate and data pulled from your Xcode Project.
In my case, for development and distribution.&lt;/p&gt;

&lt;p&gt;These profiles are tied directly to one app and the certificate in step 3. For development, all devices in the dev center are also added.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;These files are then installed in their various methods.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;These files are then moved into your git repo, a commit is made for you, then pushed and the repo is removed from your computer.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This process is nice, because this ^ is a lot of work. I only had to run a command.&lt;/p&gt;

&lt;p&gt;It would take at about 30 minutes to do this if I knew exactly what I wanted through the web interface + Keychain.&lt;/p&gt;

&lt;p&gt;We currently need to do this for every app. This works fine for the app where we are deploying multiple betas a month,
but for one when we&#39;re deploying &lt;em&gt;maybe&lt;/em&gt; a beta once a month or two (&lt;em&gt;eek! sorry...&lt;/em&gt;) then it feels like every time you&#39;ve come
back to do some work, the world has shifted a bit.&lt;/p&gt;

&lt;p&gt;We do lose the fact that we know someone has specifically set everything up to work right at some point, but given how
Xcode updates, &lt;a href=&quot;http://stackoverflow.com/questions/4057241/iphone-what-is-a-wwdr-intermediate-certificate&quot;&gt;WWDR updates&lt;/a&gt; and certificate expirations tend to crop up - it can be frustrating to maintain.&lt;/p&gt;

&lt;p&gt;So would I move &lt;a href=&quot;https://github.com/artsy/eigen&quot;&gt;Eigen&lt;/a&gt; to match? Maybe, next time something breaks. Till then I think new apps, and less-often updated
apps should use match.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Apr 2017 12:17:00 +0100</pubDate>
        <link>http://artsy.github.io/blog/2017/04/05/what-is-fastlane-match/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/04/05/what-is-fastlane-match/</guid>
        
        
        <category>energy</category>
        
        <category>fastlane</category>
        
        <category>ios</category>
        
        <category>mobile</category>
        
      </item>
    
      <item>
        <title>Generating Sitemaps with Apache Spark</title>
        <description>&lt;p&gt;While Artsy is the largest database of Contemporary Art online, it&#39;s not exactly &quot;big data&quot;. To date, we have published over 500,000 artworks by more than 50,000 artists from over 4,000 galleries, 700 museums and institutions across over 40,000 shows. Our team has written thousands of articles, hosted hundreds of art fairs and a few dozen auctions. We have over 1,000 genes from the Art Genome project, too.&lt;/p&gt;

&lt;p&gt;There&#39;re just over a million web pages generated from this data on &lt;a href=&quot;https://www.artsy.net&quot;&gt;artsy.net&lt;/a&gt;. Generating sitemaps to submit to Google and other search engines for a million pages never seemed like a big deal. In this post I&#39;ll describe 3 generations of code, including our most recent iteration that uses Apache Spark to generates static sitemap files in S3.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;a name=&quot;What.s.in.a.Sitemap.&quot;&gt;&lt;/a&gt;
&lt;h3&gt;What&#39;s in a Sitemap?&lt;/h3&gt;

&lt;p&gt;If you&#39;re not familiar with sitemaps, they are an easy way for us to inform search engines about pages on artsy.net available for crawling. A Sitemap is an XML file that lists URLs along with some additional metadata. All Artsy sitemaps are listed in our &lt;a href=&quot;https://www.artsy.net/robots.txt&quot;&gt;robots.txt&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;User-agent: *
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Sitemap: https://www.artsy.net/sitemap-artists.xml
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Sitemap: https://www.artsy.net/sitemap-shows.xml
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;These are actually sitemap indexes, such as &lt;a href=&quot;https://www.artsy.net/sitemap-shows.xml&quot;&gt;the shows sitemap index&lt;/a&gt;. Each index contains links to the actual sitemaps.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;xml&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;sitemapindex&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.sitemaps.org/schemas/sitemap/0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;sitemap&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;loc&amp;gt;&lt;/span&gt;https://www.artsy.net/sitemap-shows-2016.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/loc&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/sitemap&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; ...
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/sitemapindex&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Each sitemap contains links to web pages on &lt;a href=&quot;https://www.artsy.net&quot;&gt;www.artsy.net&lt;/a&gt;, such as the &lt;a href=&quot;https://www.artsy.net/sitemap-shows-2016.xml&quot;&gt;sitemap containing links to shows in 2016&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;xml&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;urlset&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.sitemaps.org/schemas/sitemap/0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;loc&amp;gt;&lt;/span&gt;https://www.artsy.net/show/guy-hepner-kate-moss-exhibiton&lt;span class=&quot;nt&quot;&gt;&amp;lt;/loc&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; ...
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/urlset&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;The.Monolith.s.Rake.Task&quot;&gt;&lt;/a&gt;
&lt;h3&gt;The Monolith&#39;s Rake Task&lt;/h3&gt;

&lt;p&gt;When Artsy was a Ruby on Rails monolith we generated and wrote static sitemap files to S3 in a Rake task. We iterated over all our data nightly, created a set of URLs and wrote an XML file. We got fairly clever with a &lt;code&gt;Sitemappable&lt;/code&gt; module that was included in anything that yielded a sitemap.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Sitemappable&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kp&quot;&gt;extend&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveSupport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Concern&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ClassMethods&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sitemappable_priority&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We even used HAML, the same templating system we used to render web pages, to render sitemaps.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;haml&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nn&quot;&gt;!!! XML&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nt&quot;&gt;%urlset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://www.sitemaps.org/schemas/sitemap/0.9&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;documents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemappable_urls&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nt&quot;&gt;%url&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;nt&quot;&gt;%loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Of course, there were many more implementation details, but adding a sitemap was easy as we made Mongoid models use &lt;code&gt;Sitemappable&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Generating sitemaps took a couple of hours and ran nightly.&lt;/p&gt;

&lt;a name=&quot;The.Dynamic.Front-End&quot;&gt;&lt;/a&gt;
&lt;h3&gt;The Dynamic Front-End&lt;/h3&gt;

&lt;p&gt;By 2015 our front-end was fully decoupled from the monolith that now served as the core API service. The sitemap code still lived there and needed to know about an increasing number of URLs, which seemed totally backwards. We wanted an easier way to maintain and update sitemaps and concluded that by generating sitemaps on the fly we would also see better reflect our live data and prevent 404s in stale sitemaps during crawling. Furthermore, sitemaps increasingly needed information from other places, as we tore the monolith apart into micro-services.&lt;/p&gt;

&lt;p&gt;Our solution for dynamic sitemaps queried the API for the number of total items in every collection, then generated a sitemap index with an entry for each page of results. A subsequent query from Google for a given page would query the API for the actual data that was needed to produce the requested sitemap. You can see the entire code &lt;a href=&quot;https://github.com/artsy/force/tree/2059f8f5e7faa8213221480c1c9cd3c62e9d5ffb/desktop/apps/sitemaps&quot;&gt;in our open-source artsy.net project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This worked for a while, but introduced new challenges. The first was that we needed individual sitemaps to contain thousands of items or have tens of thousands of sitemaps. That meant tens of megabytes of data returned from either multiple API calls or from a very slow single API query. That problem was even more serious for models that required joining data, and was solved by our first attempt at an orchestration layer that would crawl our own API on a schedule. Today we use GraphQL for that purpose, but we never deprecated the system we put in place during this phase of the sitemap rewrite. That system was barely maintained and riddled with its own issues, starting by the fact that the data crawl began timing out as the amount of data increased sharply. This system quickly became unsustainable as our data grew.&lt;/p&gt;

&lt;a name=&quot;The.Big.gish..Data.Solution&quot;&gt;&lt;/a&gt;
&lt;h3&gt;The Big(gish) Data Solution&lt;/h3&gt;

&lt;p&gt;In 2016 we started using Apache Spark for calculating similarity graphs and artwork recommendations. We previously loaded a vast majority of our data from many sources into HDFS and wrote Spark jobs in Scala. Having all the data from our multiple databases readily available made our Spark cluster a perfect candidate for a simple need like sitemaps.&lt;/p&gt;

&lt;a name=&quot;A.Spark.Job&quot;&gt;&lt;/a&gt;
&lt;h4&gt;A Spark Job&lt;/h4&gt;

&lt;p&gt;A spark job is a Scala class with an entry point that receives some configuration. A typical sitemap fetches data, partitions it, and generates XML sitemap files. This is automatically parallelized and distributed across worker nodes that already have their subset of data locally, making the whole thing blazingly fast.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SparkConf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setAppName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SparkContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HiveContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sitemaps&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generateSitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mapData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;writeSitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;writeSitemapsIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;purgeSitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Getting.Data&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Getting Data&lt;/h4&gt;

&lt;p&gt;We use Hive to define schemas for all data stored in HDFS. The following example fetches a show ID and its start date/time.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hc&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;HiveContext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;hc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;SELECT id, start_at FROM shows&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Mapping.Data&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Mapping Data&lt;/h4&gt;

&lt;p&gt;We partition sitemaps by date (mostly by year). This helps keep track of how many URLs Google has indexed and makes problems easier to diagnose.&lt;/p&gt;

&lt;p&gt;We start by bucketing data for simple objects into tuples of &lt;code&gt;(date, Iterable[String])&lt;/code&gt;. In the following example all shows in 2016 will be grouped together.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start_at&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getLong&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DateTimeFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;yyyy&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupByKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Generating.Sitemaps&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Generating Sitemaps&lt;/h4&gt;

&lt;p&gt;For each bucket we generate a sitemap. Each sitemap entry is a URL with a &lt;code&gt;loc&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;xml&#39;&gt;&lt;span class=&#39;line&#39;&gt;def getSitemapEntry(id: String): Elem = {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  val loc = s&amp;quot;https://www.artsy.net/show/${id}&amp;quot;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;lt;url&amp;gt;&amp;lt;loc&amp;gt;&lt;/span&gt;{ loc }&lt;span class=&quot;nt&quot;&gt;&amp;lt;/loc&amp;gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Sitemaps cannot contain more than 50,000 items according to the &lt;a href=&quot;https://www.sitemaps.org/protocol.html&quot;&gt;sitemap spec&lt;/a&gt;, so we generate files such as &lt;code&gt;sitemap-shows-2016-1.xml&lt;/code&gt; and &lt;code&gt;sitemap-shows-2016-2.xml&lt;/code&gt; when necessary.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Iterable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grouped&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zipWithIndex&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indexLabel&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;-${index + 1}&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateLabel&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;-${date}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sitemapKey&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sitemap-shows${dateLabel}${indexLabel}&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sitemapXml&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlset&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.sitemaps.org/schemas/sitemap/0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;n&quot;&gt;ids&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getSitemapEntry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;o&quot;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sitemapXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toArray&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Writing.Sitemap.Files&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Writing Sitemap Files&lt;/h4&gt;

&lt;p&gt;We write a file for each sitemap. The production output goes to S3.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writeSitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapsXml&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;sitemapsXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;n&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;${key}.xml&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Writing.Sitemap.Index&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Writing Sitemap Index&lt;/h4&gt;

&lt;p&gt;An index is a list of all the sitemaps, also written to S3.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSitemapsIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapsXml&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)])&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapindex&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://www.sitemaps.org/schemas/sitemap/0.9&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;sitemapsXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;https://www.artsy.net/${key}.xml&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapindex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writeSitemapsIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapsXml&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sitemapsIndexXml&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getSitemapsIndex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapsXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapsIndexXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;sitemap-shows.xml&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;You also need to do a bit more work to purge files that are no longer generated as data changes. For the shows example above we fetch a list of sitemap files such prefixed by &lt;code&gt;sitemap-shows-&lt;/code&gt; and delete the set difference.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;scala&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;purgeSitemaps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sitemapsXml&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;RDD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)])&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sitemapKeys&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sitemapsXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;${k}.xml&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;existingFiles&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// fetch files prefixed by sitemap-shows-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filesToDelete&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;existingFiles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;~&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sitemapKeys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;collect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toSet&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;keysToDelete&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deleteFile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Serving.Sitemaps&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Serving Sitemaps&lt;/h4&gt;

&lt;p&gt;We serve sitemaps through a Node.js proxy &lt;a href=&quot;https://github.com/artsy/force/blob/9eedf063d024ea94e6c32b01497c3fcb7f596d68/desktop/apps/sitemaps/routes.coffee#L42&quot;&gt;in our front-end&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;SITEMAP_BASE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http://artsy-sitemaps.s3-website-us-east-1.amazonaws.com&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;httpProxy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;http-proxy&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;url&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;sitemapProxy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;httpProxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createProxyServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SITEMAP_BASE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sitemaps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SITEMAP_BASE_URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;host&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;sitemapProxy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;web&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Results&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Results&lt;/h3&gt;

&lt;p&gt;We schedule a workflow for each sitemap in Spark with Oozie. Each sitemap job completes in under 5 minutes, which is pretty remarkable given where we started. It will also easily scale to many multiples of our current size as our data continues to grow.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Apr 2017 00:00:00 +0100</pubDate>
        <link>http://artsy.github.io/blog/2017/04/02/generating-sitemaps-with-apache-spark/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/04/02/generating-sitemaps-with-apache-spark/</guid>
        
        
        <category>apache spark</category>
        
        <category>big data</category>
        
      </item>
    
      <item>
        <title>Bringing Artsy to Google Assistant &quot;Home&quot; with Actions</title>
        <description>&lt;p&gt;Last month we &lt;a href=&quot;/blog/2016/11/30/bringing-artsy-to-amazon-echo-alexa/&quot;&gt;brought Artsy to Amazon Alexa&lt;/a&gt;. In this post we&#39;ll repeat that process and enable Artsy for Google Assistant, including Google Home.&lt;/p&gt;

&lt;p&gt;tl;dr You can try Artsy on your Google Home now, say &quot;Ok Google, talk to Artsy&quot; or see &lt;a href=&quot;http://assistant.artsy.net&quot;&gt;assistant.artsy.net&lt;/a&gt; for more info.&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/i9EpF18xZqQ?ecver=1&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;




&lt;!-- more --&gt;


&lt;a name=&quot;Conversation.Actions&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Conversation Actions&lt;/h3&gt;

&lt;p&gt;Actions are two-way dialogs with users. A user invokes an action, which calls so-called &lt;em&gt;fulfillment&lt;/em&gt; code - a REST endpoint.&lt;/p&gt;

&lt;p&gt;If you&#39;ve never worked with Google Actions, read the &lt;a href=&quot;https://developers.google.com/actions/develop/conversation&quot;&gt;conversation actions intro&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;Actions.SDK&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Actions SDK&lt;/h3&gt;

&lt;p&gt;To write an action get the &lt;a href=&quot;https://developers.google.com/actions/develop/sdk/getting-started&quot;&gt;actions SDK&lt;/a&gt;, which is a node.js client library, describe the actions in JSON and use a command-line tool called &lt;code&gt;gactions&lt;/code&gt; or a web simulator to invoke the action code.&lt;/p&gt;

&lt;a name=&quot;Actions.Server&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Actions Server&lt;/h3&gt;

&lt;p&gt;The actions SDK can be called from any node.js application, or with some help from &lt;a href=&quot;https://github.com/manekinekko/google-actions-server&quot;&gt;google-actions-server&lt;/a&gt; (GAS) via boilerplate code in the &lt;a href=&quot;https://github.com/manekinekko/google-actions-starter&quot;&gt;google-actions-starter&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;An &lt;code&gt;action.json&lt;/code&gt; that describes the actions, including the invocation trigger for each action and the text-to-speech voice for the agent to use.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;versionLabel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;agentInfo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;languageCode&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;projectId&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;biesenbach-one&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;invocationNames&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;artsy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;voiceName&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;female_1&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nt&quot;&gt;&amp;quot;actions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;initialTrigger&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;quot;intent&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;assistant.intent.action.MAIN&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;quot;httpExecution&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://biesenbach-one.appspot-preview.com&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;The action implementation lives in &lt;code&gt;lib/action.js&lt;/code&gt; that imports and creates a new instance of &lt;code&gt;google-actions-server&lt;/code&gt;, binds intents to functions and issues questions with &lt;code&gt;agent.ask&lt;/code&gt; or sends final responses with &lt;code&gt;assistant.tell&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ActionServer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;@manekinekko/google-actions-server&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ArtsyAction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ActionServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setGreetings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;would&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hear&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;about&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;welcomeIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assistant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;randomGreeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;textIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assistant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assistant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getRawInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// TODO: respond to a query&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;assistant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;You said &amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// the welcome intent is invoked when the user says &amp;quot;talk to Artsy&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;welcome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;welcomeIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// the text action is invoked for any spoken text&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ActionServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textIntent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ArtsyAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;With tests.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;37&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;38&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;39&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;40&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;41&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;42&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;43&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;44&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;45&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;46&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;47&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;48&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;49&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;50&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;51&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;supertest&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Artsy&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;../action&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;afterEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;asks the name of the artist when launched&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;nx&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;assistant.intent.action.MAIN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;nx&quot;&gt;raw_inputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;nx&quot;&gt;input_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;OK Google, talk to Artsy.&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ssml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expected_inputs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input_prompt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initial_prompts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ssml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ssml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;would&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hear&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;about&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;repeats a query&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;inputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;nx&quot;&gt;intent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;assistant.intent.action.TEXT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;nx&quot;&gt;raw_inputs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;nx&quot;&gt;input_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;            &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;hello world&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;p&quot;&gt;}],&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;expect_user_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ssml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;final_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;speech_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text_to_speech&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ssml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;You said hello world.&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Find the &lt;a href=&quot;https://github.com/artsy/biesenbach&quot;&gt;complete source code of the Artsy action on Github&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;Local.Simulator&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Local Simulator&lt;/h3&gt;

&lt;p&gt;GAS does a good job at enabling running of a local development version.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;ngrok&lt;/code&gt; to proxy requests to the outside world.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm run server&lt;/code&gt; to start the local instance.&lt;/li&gt;
&lt;li&gt;Deploy a preview version of the app with &lt;code&gt;npm run action:autopreview&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;npm run action:simulate&lt;/code&gt; for a local simulator, use &lt;a href=&quot;https://developers.google.com/actions/tools/web-simulator&quot;&gt;the web version&lt;/a&gt; or even a Google Home device registered under your development account.&lt;/li&gt;
&lt;/ul&gt;


&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/_biW8TDbBGo&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;


&lt;a name=&quot;Certification&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Certification&lt;/h3&gt;

&lt;a name=&quot;Fulfillment.Endpoint&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Fulfillment Endpoint&lt;/h4&gt;

&lt;p&gt;The certification process requires that you deploy the node.js application into a production environment, first. We deployed ours into Google Cloud, which involved creating a &lt;code&gt;vm.yaml&lt;/code&gt;, creating a new deployment with &lt;code&gt;gcloud deployment-manager deployments create production --config vm.yaml&lt;/code&gt;, transpiling JavaScript with &lt;code&gt;npm run build&lt;/code&gt; and deploying the app with &lt;code&gt;gcloud app deploy&lt;/code&gt;. You can just push the app to Heroku or AWS Lambda as well.&lt;/p&gt;

&lt;a name=&quot;Google.Actions.API.Project&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Google Actions API Project&lt;/h4&gt;

&lt;p&gt;Create a Google Actions API project from the &lt;a href=&quot;https://console.developers.google.com/apis/dashboard&quot;&gt;API Dashboard&lt;/a&gt; and configure the project in &quot;Directory Listing&quot;. It&#39;s important to get the sample invocations right, eg. &lt;em&gt;&quot;Ok Google, ask my first action to ...&quot;&lt;/em&gt;.&lt;/p&gt;

&lt;a name=&quot;Deploy.Action&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Deploy Action&lt;/h4&gt;

&lt;p&gt;Deploying the action makes it usable by others by submitting it for approval with Google. Once submitted you have to wait for your action to be rejected or approved, there&#39;s no way to un-submit an action without contacting support.&lt;/p&gt;

&lt;p&gt;Change the &lt;code&gt;httpExecution&lt;/code&gt; URL(s) in &lt;code&gt;action.json&lt;/code&gt; to the deployed fulfillment URL, eg. &lt;code&gt;https://my-first-action.appspot-preview.com&lt;/code&gt;, ensure the correct action ID is used in &lt;code&gt;package.json&lt;/code&gt;, and run &lt;code&gt;npm run action:deploy&lt;/code&gt;, which will register and deploy your action.&lt;/p&gt;

&lt;p&gt;The application will appear under &quot;Deployment History&quot; in the API dashboard.&lt;/p&gt;

&lt;center&gt;&lt;img src=&#39;/images/2017-03-04-bringing-artsy-to-google-actions-assistant-home/actions-api.png&#39;&gt;&lt;/center&gt;


&lt;a name=&quot;Help&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Help&lt;/h3&gt;

&lt;p&gt;I found that the best place to ask questions was &lt;a href=&quot;https://stackoverflow.com/questions/tagged/actions-on-google&quot;&gt;stack overflow#actions-on-google&lt;/a&gt; and their unusually responsive &lt;a href=&quot;https://developers.google.com/actions/support/?requesttype=support&amp;amp;prio=low&quot;&gt;support team&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;Code&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Code&lt;/h3&gt;

&lt;p&gt;Find the &lt;a href=&quot;https://github.com/artsy/biesenbach&quot;&gt;complete source code on Github&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/03/04/bringing-artsy-to-google-actions-assistant-home/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/03/04/bringing-artsy-to-google-actions-assistant-home/</guid>
        
        
        <category>google actions</category>
        
        <category>google assistant</category>
        
        <category>google home</category>
        
      </item>
    
      <item>
        <title>Workshop: React Native</title>
        <description>&lt;p&gt;Hey there, so you&#39;ve decided to take a look at React Native? Well, last week I ran a workshop inside Artsy on &lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;React Native&lt;/a&gt; and &lt;a href=&quot;https://facebook.github.io/relay/&quot;&gt;Relay&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The video takes you from &lt;code&gt;react-native init&lt;/code&gt; to having the initial structure of a View Controller based on Relay with a real working API request. The video is about 45 minutes, with inline questions.&lt;/p&gt;

&lt;p&gt;If you wanted to just run through the notes, you could probably get it working in about 10 minutes.&lt;/p&gt;

&lt;p&gt;Jump &lt;a href=&quot;https://www.youtube.com/watch?v=PYC47YKnK4k&quot;&gt;to YouTube&lt;/a&gt; for the video, or click more for a smaller inline preview, as well as all of the speakers notes to copy &amp;amp; paste from. There is also a full copy of the end-result at &lt;a href=&quot;https://github.com/orta/Relay-Artist-Example&quot;&gt;orta/Relay-Artist-Example&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;iframe width=&#39;100%&#39; height=&#39;600&#39; src=&#39;https://www.youtube.com/embed/PYC47YKnK4k &#39; frameborder=&#39;0&#39; allowfullscreen&gt;&lt;/iframe&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;Beautiful right?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/orta/Relay-Artist-Example/blob/master/screenshots/workshop.png?raw=true&quot;&gt;&lt;/p&gt;

&lt;p&gt;Below are the notes so you can follow along&lt;/p&gt;

&lt;hr /&gt;

&lt;a name=&quot;Setup&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Setup&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Install &lt;a href=&quot;https://yarnpkg.com&quot;&gt;Yarn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install React Native - https://facebook.github.io/react-native/docs/getting-started.html&lt;/li&gt;
&lt;li&gt;Create a new project via &lt;code&gt;react-native init ArtistExample&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;a name=&quot;Verifying.your.install&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Verifying your install&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cd ArtistExample&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;yarn run jest&lt;/code&gt; to verify specs&lt;/li&gt;
&lt;/ul&gt;


&lt;a name=&quot;Starting.out&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Starting out&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;yarn start&lt;/code&gt; - this loads the packager.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The packager is the part of React Native which compiles your JavaScript. This JavaScript creates a virtual DOM, which React Native uses to create an equivilent view heirarchy.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Run &lt;code&gt;react-native run-ios&lt;/code&gt; to launch the project in a sim.&lt;/li&gt;
&lt;/ul&gt;


&lt;a name=&quot;Tada.-.it.s.your.1st.RN.app&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Tada - it&#39;s your 1st RN app&lt;/h3&gt;

&lt;p&gt;That&#39;s it. Let&#39;s look at some real code. Browse the source code.&lt;/p&gt;

&lt;a name=&quot;Relay&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Relay&lt;/h3&gt;

&lt;p&gt;We&#39;re using Relay, this will take a bit of setup. &lt;a href=&quot;https://github.com/artsy/emission/commit/c6660fe505f38491f4a1d23dc7f41a2baec5657d&quot;&gt;Here is @alloy setting up Relay in Emission&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Add &lt;code&gt;relay&lt;/code&gt; and &lt;code&gt;babel-relay-plugin&lt;/code&gt; - we &lt;a href=&quot;https://github.com/facebook/relay/issues/1061&quot;&gt;use a fork&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;yarn add react-relay@https://github.com/alloy/relay/releases/download/v0.9.3/react-relay-0.9.3.tgz
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;yarn add babel-relay-plugin@https://github.com/alloy/relay/releases/download/v0.9.3/babel-relay-plugin-0.9.3.tgz
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then the schema into a data folder:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;mkdir data
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;curl https://raw.githubusercontent.com/artsy/emission/master/data/schema.graphql &amp;gt; data/schema.graphql
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;curl https://raw.githubusercontent.com/artsy/emission/master/data/schema.js &amp;gt; data/schema.js
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;curl https://raw.githubusercontent.com/artsy/emission/master/data/schema.json &amp;gt; data/schema.json
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then hook up the plugin:
- Add &lt;code&gt;&quot;plugins&quot;: [&quot;./data/schema&quot;],&lt;/code&gt; to &lt;code&gt;.babelrc&lt;/code&gt;.&lt;/p&gt;

&lt;a name=&quot;First.edit&quot;&gt;&lt;/a&gt;
&lt;h3&gt;First edit&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Turn on Live Reloading and HMR with &lt;code&gt;cmd + d&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Turn BG white. Awesome.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Magic, it does it in real-time.&lt;/p&gt;

&lt;a name=&quot;Making.components&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Making components&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Make &lt;code&gt;lib&lt;/code&gt;, &lt;code&gt;lib/artists&lt;/code&gt; and &lt;code&gt;lib/artists/artist.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Move &lt;code&gt;ArtistExample&lt;/code&gt; Component from &lt;code&gt;index.ios.js&lt;/code&gt; to &lt;code&gt;lib/artists/artist.js&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Change the class to &lt;code&gt;Artist&lt;/code&gt;, and edit the title to reflect a different component&lt;/li&gt;
&lt;li&gt;Go back and nuke most of the &lt;code&gt;index.ios.js&lt;/code&gt; make it just refer to `Artist``&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Artist&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./lib/artist/artist&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ArtistExample&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Artist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;Relay.Setup&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Relay Setup&lt;/h3&gt;

&lt;p&gt;Explain there are three useful bits &lt;a href=&quot;https://sgwilym.github.io/relay-visual-learners/&quot;&gt;parts of Relay&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Routes&lt;/li&gt;
&lt;li&gt;RootContainer&lt;/li&gt;
&lt;li&gt;Relay.Container&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We will talk about them as we go on, but first we need to tell Relay where Metaphysics is. So we need to set up a network layer:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;react-relay&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;metaphysicsURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://metaphysics-staging.artsy.net&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;injectNetworkLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefaultNetworkLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;metaphysicsURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;s1&quot;&gt;&amp;#39;X-XAPP-Token&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;[go to staging.artsy.net and do `sd.ARTSY_XAPP_TOKEN` in console]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Next we need to create a Relay Route, this &lt;em&gt;doesnt&lt;/em&gt; directly represent a URL representation, but it often can/does.
E.g. in our case this will represent &lt;code&gt;/artist/:artistID&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;create &lt;code&gt;lib/artist/route.js&lt;/code&gt; add&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;react-relay&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;  &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ArtistRoute&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Route&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;queries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$artistID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;component&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getFragment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;artist&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paramDefinitions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;artistID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;routeName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ArtistRoute&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;Hook this up inside &lt;code&gt;index.ios.js&lt;/code&gt;, add an import, and create instance of Route:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ArtistRoute&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;./lib/artist/route&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;glennRoute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ArtistRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;artistID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;glenn-brown&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;  Then change the components render function:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ArtistExample&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RootContainer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;glennRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;See error, that means it&#39;s trying to access a Relay Component, and we have a React component. Let&#39;s make it a Relay Component:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Remove the &lt;code&gt;export default&lt;/code&gt; from the &lt;code&gt;Artist&lt;/code&gt; class in &lt;code&gt;lib/artist/artist.js&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add Relay fragment at the bottom&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createContainer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;fragments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Relay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;QL&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;fragment&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Artist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;_id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;




&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Artist&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;am&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;welcome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Text&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/View&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;hr /&gt;

&lt;p&gt;Prove the Relay concept by adding &lt;code&gt;years&lt;/code&gt; to GraphQL and add this to the render function:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Artist&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hey&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;welcome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Text&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;welcome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;years&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Text&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/View&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Tada! You&#39;ve made a working relay component. Just start making more of these now, and you have an app!&lt;/p&gt;

&lt;a name=&quot;Looking.Stylish.&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Looking Stylish!&lt;/h3&gt;

&lt;p&gt;OK, we now have the minimum we need - we got API data coming in as props. Now we want to make it look pretty.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Add &lt;code&gt;mkdir assets&lt;/code&gt;, and &lt;code&gt;mkdir assets/fonts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;curl -L https://github.com/artsy/Artsy-OSSUIFonts/raw/master/Pod/Assets/EBGaramond12-Italic.ttf &amp;gt; assets/EBGaramond12-Italic.ttf
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;curl -L https://github.com/artsy/Artsy-OSSUIFonts/raw/master/Pod/Assets/EBGaramond12-Regular.ttf &amp;gt; assets/EBGaramond12-Regular.ttf
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;curl -L https://github.com/artsy/Artsy-OSSUIFonts/raw/master/Pod/Assets/texgyreadventor-bold.ttf &amp;gt; assets/texgyreadventor-bold.ttf
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;edit &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rnpm&amp;quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s2&quot;&gt;&amp;quot;assets&amp;quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;./assets&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;run &lt;code&gt;react-native link&lt;/code&gt;, restart iOS app, by killing it.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;run &lt;code&gt;react-native run-ios&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Add custom styles to the two bits of info on screen:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Text&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subtitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;artist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;years&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/Text&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;




&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;js&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;styles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;StyleSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;flex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;marginTop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;alignItems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;backgroundColor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;fontSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;fontFamily&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TeXGyreAdventor-Regular&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;subtitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;textAlign&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;center&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;#333333&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;fontFamily&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;EBGaramond12-Regular&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;marginBottom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;And that is our styles. Covering all of the major use cases of React Native for us.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Feb 2017 12:18:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/02/06/React-Native-Workshop/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/02/06/React-Native-Workshop/</guid>
        
        
        <category>javascript</category>
        
        <category>objectivec</category>
        
        <category>reactnative</category>
        
        <category>relay</category>
        
        <category>swift</category>
        
      </item>
    
      <item>
        <title>Retrospective: Swift at Artsy</title>
        <description>&lt;center&gt;
&lt;img src=&quot;/images/swift-in-rn/swift-in-react-native.svg&quot; style=&quot;width:300px;&quot;&gt;
&lt;/center&gt;


&lt;p&gt;Swift became public in June 2014, by August we had started using it in Artsy. By October, we had &lt;a href=&quot;http://artsy.github.io/blog/2014/11/13/eidolon-retrospective/&quot;&gt;Swift in production&lt;/a&gt; channelling hundreds of thousands of dollars in auction bids.&lt;/p&gt;

&lt;p&gt;It is pretty obvious that Swift is the future of native development on Apple platforms. It was a no-brainer to then build an &lt;a href=&quot;https://github.com/artsy/emergence&quot;&gt;Apple TV app&lt;/a&gt; in Swift, integrated Swift-support into our key app Eigen and built non-trivial parts of that &lt;a href=&quot;http://artsy.github.io/blog/2016/08/09/the-tech-behind-live-auction-integration/&quot;&gt;application in Swift&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We first started experimenting with React Native in February 2016, and by August 2016, we announced that &lt;a href=&quot;/blog/2016/08/15/React-Native-at-Artsy/&quot;&gt;Artsy moved to React Native&lt;/a&gt; effectively meaning new code would be in JavaScript from here onwards.&lt;/p&gt;

&lt;p&gt;We&#39;re regularly asked &lt;em&gt;why&lt;/em&gt; we moved, and it was touched on briefly in our announcement but I&#39;d like to dig in to this and try to cover a lot of our decision process. So, if you&#39;re into understanding why a small team of iOS developers with decades of native experience switched to JavaScript, read on.&lt;/p&gt;

&lt;p&gt;This post will cover: &lt;a href=&quot;/blog/2017/02/05/Retrospective-Swift-at-Artsy/#What.are.Artsy.s.apps.&quot;&gt;What are Artsy&#39;s apps?&lt;/a&gt;, Swifts &lt;a href=&quot;/blog/2017/02/05/Retrospective-Swift-at-Artsy/#Swift.s.upsides&quot;&gt;positives&lt;/a&gt; and &lt;a href=&quot;/blog/2017/02/05/Retrospective-Swift-at-Artsy/#Native.Downsides&quot;&gt;negatives&lt;/a&gt; for us, &lt;a href=&quot;/blog/2017/02/05/Retrospective-Swift-at-Artsy/#React.Native&quot;&gt;React Native&lt;/a&gt;, and our &lt;a href=&quot;/blog/2017/02/05/Retrospective-Swift-at-Artsy/#React.Native..one.year.later&quot;&gt;1-year summary&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;We were finding that our current patterns of building apps were not scaling as the team and app scope grew. Building anything inside Eigen rarely re-used existing native code, and progressively took longer to build features. Our app and test target build times were increasing, till eventually it would take 2 iOS engineers to build a feature in a similar time-frame as a single web engineer. Our iOS engineers have a lot of experience across many platforms, are well versed in best practices and understand the value of building better tools to make it faster. We had the knowledge, but we weren&#39;t finding ourselves in a great position product development wise.&lt;/p&gt;

&lt;p&gt;By &lt;a href=&quot;https://github.com/artsy/mobile/issues/22&quot;&gt;March 2015&lt;/a&gt;, we gave up trying to keep pace with the web.&lt;/p&gt;

&lt;p&gt;Once we came to this conclusion, our discussion came to &quot;what can we do to fix this?&quot; Over the course of the 2015 winter break we explored ideas on how we could write more re-usable code.&lt;/p&gt;

&lt;a name=&quot;What.are.Artsy.s.apps.&quot;&gt;&lt;/a&gt;
&lt;h1&gt;What are Artsy&#39;s apps?&lt;/h1&gt;

&lt;p&gt;We have different apps with different trade-offs.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/artsy/eigen&quot;&gt;Eigen&lt;/a&gt; is an app where we take JSON data from the server, and convert it into a user interface. Each view controller can nearly always be described as a function taking data and mapping it to a UI. &lt;a href=&quot;https://github.com/artsy/eidolon&quot;&gt;Eidolon&lt;/a&gt; (our Auctions Kiosk app) which contains a lot of Artsy-wide unique business logic which is handled with local state like card reader input, or unique user identification modes. &lt;a href=&quot;https://github.com/artsy/emergence&quot;&gt;Emergence&lt;/a&gt; is a trivial-ish tvOS app which has a few view controllers, and is mostly handled by Xcode&#39;s storyboards.&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/div&gt;&lt;a href=&#39;/images/emission/eigen.svg&#39;&gt;&lt;img src=&quot;/images/emission/eigen.svg&quot;&gt;&lt;/a&gt;&lt;div class=&#39;meta-container&#39;&gt;&lt;header&gt;&amp;nbsp;&lt;/header&gt;&lt;/div&gt;&lt;div class=&#39;date-container&#39;&gt;&amp;nbsp;&lt;/div&gt;&lt;div class=&#39;content-container&#39;&gt;&lt;div class=&#39;entry-content&#39;&gt;&lt;/p&gt;

&lt;p&gt;Eigen is where we worried about how we were building apps, other apps are limited in their scope, but Eigen is basically the mobile representation of Artsy. We&#39;re never &lt;em&gt;not&lt;/em&gt; going to have something like Eigen.&lt;/p&gt;

&lt;p&gt;We eventually came to the conclusion that we needed to re-think our entire UIKit stack for Eigen. Strictly speaking, Objective-C was not a problem for us, our issues came from abstractions around the way we built apps.&lt;/p&gt;

&lt;p&gt;Re-writing from scratch was not an option. That takes &lt;a href=&quot;https://www.joelonsoftware.com/2000/04/06/things-you-should-never-do-part-i/&quot;&gt;a lot of time and effort&lt;/a&gt;, which will happily remove technical debt, but that&#39;s not our issue. We also don&#39;t need or have a big redesign. However, a lot of companies used the Objective-C -&gt; Swift transition as a time to re-write from scratch. We asked for the experiences from developers who had opted to do this, they said it was a great marketing tool for hiring - but was a lot of pain to actually work with day to day. They tend to talk about technical debt, and clean slates - but not that Objective-C was painful and Swift solves major architectural problems. With the notable exception of functional programming purists.&lt;/p&gt;

&lt;p&gt;In the end, for Eigen, we came to the conclusion that we wanted to work with a component-based architecture. This architectural choice comes from studying how other larger apps handle code-reuse.&lt;/p&gt;

&lt;p&gt;We were considering:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;View Controllers being a mix of Components which could be extended using protocols in Swift.&lt;/li&gt;
&lt;li&gt;JSON defined Components ( which would have ended up like Spotify&#39;s (&lt;a href=&quot;https://cocoapods.org/pods/HubFramework&quot;&gt;hub&lt;/a&gt;) or Hyperslo&#39;s (&lt;a href=&quot;https://cocoapods.org/pods/Spots&quot;&gt;Spots&lt;/a&gt;) ).&lt;/li&gt;
&lt;li&gt;Building a Component structure heavily inspired by React ( like Bending Spoons&#39;s (&lt;a href=&quot;https://cocoapods.org/pods/Katana&quot;&gt;Katana&lt;/a&gt;) ).&lt;/li&gt;
&lt;/ul&gt;


&lt;center&gt;
 &lt;img src=&quot;/images/js2017/swift.svg&quot; style=&quot;width:250px;&quot;&gt;
&lt;/center&gt;


&lt;a name=&quot;Swift.s.upsides&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Swift&#39;s upsides&lt;/h1&gt;

&lt;p&gt;Had we continued with native apps via native code, we&#39;d have put more resources behind Swift, which had quite a bit running for it:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It was consistent with our existing code.&lt;/strong&gt; We wrote hundreds of thousands of lines of code in Objective-C and maybe around a hundred thousand of Swift. The majority of the team had 5+ years of Cocoa experience and no-one needs to essentially argue that &lt;em&gt;continuing&lt;/em&gt; with that has value.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Swift code can interact with Objective-C and can work on its own.&lt;/strong&gt; We can write Swift libraries that can build on-top of our existing infrastructure to work at a higher level of abstraction. Building a component-based infrastructure via Swift could allow easy-reuse of existing code, while providing a language difference for &quot;new app code&quot; vs &quot;infra.&quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;People are excited about Swift.&lt;/strong&gt; It&#39;s an interesting, growing language, and one of the few ones non-technical people ask about. &quot;Oh you&#39;re an iOS developer, do you use Swift?&quot; is something I&#39;ve been asked a lot. The developers outside of the mobile team have signed up multiple times for Swift workshops and want to know what Swift is, and what its trade-offs are.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It&#39;s evolving&lt;/strong&gt; the language changes at a fast rate, with new ideas coming from, and influencing other languages. People inside the community influence and shape its growth. There are some great claims being made &lt;a href=&quot;https://twitter.com/wilshipley/status/565001293975257091&quot;&gt;about Swift&lt;/a&gt; by people we respect.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Swift improves on a lot of Objective-C.&lt;/strong&gt; Most of the patterns that we use in Objective-C are verbose, and they can become extremely terse inside Swift. Potentially making it easier to read and understand.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;We would be using the official route.&lt;/strong&gt; Apple obviously &lt;em&gt;wants&lt;/em&gt; you to be using Swift, they are putting a &lt;em&gt;lot&lt;/em&gt; of resources into the language. There are smart people working on the project, and it&#39;s become more stable and useful every year. There aren&#39;t any &lt;em&gt;Swift-only&lt;/em&gt; APIs yet, but obviously they&#39;ll be coming.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;It&#39;s a &lt;a href=&quot;https://en.wikipedia.org/wiki/There_are_known_knowns&quot;&gt;known-unknown&lt;/a&gt; territory.&lt;/strong&gt; We have a lot of knowledge around building better tooling for iOS apps. From libraries like &lt;a href=&quot;https://github.com/moya/moya&quot;&gt;Moya&lt;/a&gt;, to foundational projects like &lt;a href=&quot;https://cocoapods.org&quot;&gt;CocoaPods&lt;/a&gt;. Coming up with, and executing dramatic tooling improvements is possible. Perhaps we had overlooked a smarter abstraction which would have worked around the downsides, and thus making it worth expanding our search.&lt;/p&gt;

&lt;p&gt;If we end up building something which gains popularity, we get the advantage of working with a lot of fresh perspectives, and being able to gain from other people working on the same project. This is what happened with &lt;a href=&quot;https://github.com/moya/moya&quot;&gt;Moya&lt;/a&gt;. It&#39;s a pattern Basecamp discuss when they &lt;a href=&quot;https://signalvnoise.com/posts/660-ask-37signals-the-genesis-and-benefits-of-rails&quot;&gt;talk about rails&lt;/a&gt; by beginning with a real project and abstracting outwards.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;a name=&quot;Native.Downsides&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Native Downsides&lt;/h1&gt;

&lt;p&gt;The dominant two issues come from differences in opinions in how software should be built&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Types.&lt;/strong&gt; Types are useful. Overly strict typing systems make it too hard to &lt;em&gt;quickly&lt;/em&gt; change codebases.&lt;/p&gt;

&lt;p&gt;Strictly typed languages work &lt;em&gt;really&lt;/em&gt; well for &lt;a href=&quot;http://mjtsai.com/blog/2014/10/14/hypothetical-objective-c-3-0/#comment-2177091&quot;&gt;building systems&lt;/a&gt;, or completely atomic apps - the sort Apple have to build on a day to day basis. When I say an atomic app, I mean one where the majority of the inputs and outputs exist within the domain of the application. Think of apps with their own filetypes, that can control inputs and outputs really easily.&lt;/p&gt;

&lt;p&gt;Even in Objective-C, a looser-typed language where you were not discouraged from using meta--programming, handling JSON required &lt;em&gt;a tonne&lt;/em&gt; of boilerplate laden, inelegant code when working with an API. Considering how bread-and-butter working with an API is for most 3rd party developers it should come as no surprise that the most popular CocoaPods are about handling JSON parsing, and making network requests.&lt;/p&gt;

&lt;p&gt;Problems which Apple, generally speaking, don&#39;t have. They use iCloud, or CloudKit, or whatever, and expect you will also. The official Apple opinion was neatly summed up on the official Swift blog on how to handle JSON parsing &lt;a href=&quot;https://developer.apple.com/swift/blog/?id=37&quot;&gt;exhibits the problem well&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Swift’s built-in language features make it easy to safely extract and work with JSON data decoded with Foundation APIs — without the need for an external library or framework.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;They do, but it&#39;s not great code to write nor maintain. I don&#39;t know anyone who does what they recommend in production.&lt;/p&gt;

&lt;p&gt;The stricter type system in Swift made it harder to work on JSON-driven apps.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Slow.&lt;/strong&gt; Native development when put next to web development is slow. Application development requires full compilation cycles, and full state restart of the application that you&#39;re working on. A trivial string change in Eigen takes &lt;a href=&quot;https://twitter.com/orta/status/778242899821621249&quot;&gt;25 seconds&lt;/a&gt; to show up. When I tell some developers that time, they laugh and say I have it good.&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Making a single edit in a string takes 25 seconds to see the difference in the swift parts of Eigen &lt;a href=&quot;https://t.co/MOPGPEWqxX&quot;&gt;pic.twitter.com/MOPGPEWqxX&lt;/a&gt;&lt;/p&gt;&amp;mdash; 💍rta Therox (@orta) &lt;a href=&quot;https://twitter.com/orta/status/778242899821621249&quot;&gt;September 20, 2016&lt;/a&gt;&lt;/blockquote&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;The moment that this really stood out for me was when I &lt;a href=&quot;https://twitter.com/orta/status/271559616888967168&quot;&gt;re&lt;/a&gt;-discovered &lt;a href=&quot;https://twitter.com/orta/status/705890397810257921&quot;&gt;Injection for Xcode&lt;/a&gt; which ruined my appetite for building apps the traditional way. It reduced an iteration cycle to about &lt;a href=&quot;https://twitter.com/orta/status/706165678177390592&quot;&gt;a second&lt;/a&gt;. With Apple&#39;s resources, and the fact that Injection for Xcode has existed for years by a single developer, it&#39;s frustrating that iOS is a &lt;a href=&quot;https://developer.android.com/studio/run/index.html#instant-run&quot;&gt;mobile platform&lt;/a&gt; with no support for code reloading. I filed bug reports (&lt;a href=&quot;https://forums.developer.apple.com/thread/8796&quot;&gt;radars&lt;/a&gt;), they were marked as duped with no comment. I talked to Apple engineers at WWDC, the idea was dismissed as &quot;didn&#39;t work&quot; when it was &lt;a href=&quot;http://stpeterandpaul.ca/tiger/documentation/DeveloperTools/Conceptual/XcodeUserGuide/Contents/Resources/en.lproj/06_06_db_fix_and_continue/chapter_44_section_1.html&quot;&gt;tried before&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&#39;ve heard developers say they use Playgrounds to work around some of these problems, and the Kickstarter app has probably the closest I&#39;ve seen to an &lt;a href=&quot;https://github.com/kickstarter/ios-oss/tree/master/Kickstarter-iOS.playground/Pages&quot;&gt;actual implementation of this&lt;/a&gt;, so check that out if you&#39;re hitting these issues.&lt;/p&gt;

&lt;p&gt;The Swift compiler is slow. Yes, it will improve. One of my favourite Swift features, inferred typing, can accidentally increase compile times non-obviously. Which can make it feel arbitrary about what code takes longer to compile or not. We eventually &lt;a href=&quot;https://github.com/artsy/eigen/pull/1465&quot;&gt;automated having our CI warn us&lt;/a&gt; whether the code we were adding was slow as it felt hard to predict.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;center&gt;
 &lt;img src=&quot;/images/react-native/artsy_react_logo.svg&quot; style=&quot;width:300px;&quot;&gt;
&lt;/center&gt;


&lt;a name=&quot;React.Native&quot;&gt;&lt;/a&gt;
&lt;h1&gt;React Native&lt;/h1&gt;

&lt;p&gt;You may want to read our announcement of switching to &lt;a href=&quot;/blog/2016/08/15/React-Native-at-Artsy/&quot;&gt;React Native&lt;/a&gt; in anticipation of this. However the big three reasons are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Better developer experience.&lt;/li&gt;
&lt;li&gt;Same conceptual levels as the rest of the team.&lt;/li&gt;
&lt;li&gt;Ownership of the whole stack.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;However, the key part of this post is how does this compare to native development? Also, have these arguments stood up to the test of time a year later?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sidenote:&lt;/em&gt; I found it hard to write this without being able to comprehensively reference what we are doing now, and so, I&#39;ll be referencing a sibling article: &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/&quot;&gt;JS 2017&lt;/a&gt;.&lt;/p&gt;

&lt;a name=&quot;Developer.Experience&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Developer Experience&lt;/h3&gt;

&lt;p&gt;The JavaScript ecosystem cares about how someone using the tool will feel. This is a part of what separates the good from the great in the community. It&#39;s not enough to just provide a great API, and comprehensive documentation but it should substantially improve the way you work.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;References from JS 2017: &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#Relay&quot;&gt;Relay&lt;/a&gt;, &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#Jest&quot;&gt;Jest&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;As &lt;em&gt;everyone&lt;/em&gt; inside the community has both the ability and the tools to contribute to the ecosystem you get better tools.&lt;/p&gt;

&lt;p&gt;Apple make &lt;em&gt;great&lt;/em&gt; tools. I do miss Xcode sometimes. It&#39;s cohesive, beautifully designed and doesn&#39;t show its age. It&#39;s a perfect Mac citizen.&lt;/p&gt;

&lt;p&gt;Though it&#39;s important to note that they make tools for Apple first and then for us 3rd party devs. Outside influence obviously exists, but they&#39;re shipping whatever &lt;em&gt;they&lt;/em&gt; want and you can only influence that via Radars and through going to a conference once a year and talking directly to the dev tools team. Only the Swift language is Open Source (and &lt;a href=&quot;https://github.com/apple/swift-package-manager&quot;&gt;SwiftPM&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;There are so few well built, large developer tools for the Apple ecosystem. Developers are wary &lt;a href=&quot;https://twitter.com/orta/status/608013279433138176&quot;&gt;of&lt;/a&gt; &lt;a href=&quot;https://twitter.com/mattt/status/473544723118837760&quot;&gt;being copied by Apple&lt;/a&gt; - something so prevalent that there is a common word for it, being &lt;a href=&quot;https://www.cocoanetics.com/2011/06/on-getting-sherlocked/&quot;&gt;Sherlocked&lt;/a&gt;. The project I&#39;ve worked on for 5 years, CocoaPods, had an announcement of being sherlocked in late-2015 - you just have to deal with it. The idea that only Apple should be shipping these kind of things kills community momentum.&lt;/p&gt;

&lt;center&gt;&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Alfred, Dropbox, Snapchat, Parse, OpenGL, Objective-C… &lt;br&gt;&lt;br&gt;Quite the body count this WWDC.&lt;/p&gt;&amp;mdash; Mattt (@mattt) &lt;a href=&quot;https://twitter.com/mattt/status/473544723118837760&quot;&gt;June 2, 2014&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;&lt;/center&gt;


&lt;p&gt;If you&#39;re going to build something amazing, only to have all support pulled out from under you once it gets popular because Apple copied it and made it for free and with a full time team behind it - why bother?&lt;/p&gt;

&lt;p&gt;This makes it tough for us, as the 3rd party community, to build useful tools on the kind of scale that is normal in other developer ecosystems.&lt;/p&gt;

&lt;p&gt;This contrasts drastically with the JavaScript ecosystem, check out my explanation of Jest - and compare Jest to either Quick or Specta. Then remember that only Apple has the power to do most of what Jest does.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Reference from JS 2017: &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#Jest&quot;&gt;Jest&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;center&gt;
 &lt;img src=&quot;/images/js2017/relay.svg&quot; style=&quot;width:300px;&quot;&gt;
&lt;/center&gt;


&lt;a name=&quot;Better.Abstractions..Better.Developer.Experience&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Better Abstractions, Better Developer Experience&lt;/h3&gt;

&lt;p&gt;I&#39;ve mentioned that the apps we build have problems specific to API-driven applications. This means that the majority of our work tends to be that we have the full data already, and need to iterate to get the right styling and logic mapping correct, in doing so we want to also make it easy to re-use code.&lt;/p&gt;

&lt;p&gt;The React component-oriented architecture makes it very easy to build these types of applications. Born out of the &lt;a href=&quot;/blog/2016/11/14/JS-Glossary/#javascript-fatigue&quot;&gt;JavaScript primordial soup&lt;/a&gt;, where conceptual frameworks come and go every year or so. React has been around for a while now, and seems to have a lot of momentum.&lt;/p&gt;

&lt;p&gt;All of these frameworks have the same domain problems that our iOS apps have, external API stores, complex user device state and a mature user-interface API (either the DOM, or UIKit.)&lt;/p&gt;

&lt;p&gt;With React, the core concept of a virtual DOM means that you can simplify a lot of complicated state-management for your application. It becomes trivial, removing the need for more complicated state-handling ideas like functional or reactive programming.&lt;/p&gt;

&lt;p&gt;With Relay, we got an genuinely ground-breaking change in how interactions get handled with our API. I don&#39;t want to  work against an API without a tool like Relay again.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;References from JS 2017: &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#React...React.Native&quot;&gt;React&lt;/a&gt;, &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#Relay&quot;&gt;Relay&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Both of these tools provide a developer experience better than iOS native tooling. React&#39;s strict state management rules allow external tools to extend a React application easily, so the onus is not on the React team to make better tools. Other projects provide tools like: &lt;a href=&quot;https://github.com/jhen0409/react-native-debugger&quot;&gt;debuggers&lt;/a&gt;, &lt;a href=&quot;https://github.com/infinitered/reactotron&quot;&gt;external state viewers&lt;/a&gt;, &lt;a href=&quot;https://github.com/gaearon/react-hot-loader&quot;&gt;runtime code injection&lt;/a&gt;, &lt;a href=&quot;https://github.com/storybooks/react-storybook&quot;&gt;component storyboarding&lt;/a&gt; all of which can be running simultaneously as you are building your application. Imagine being given the flow of all state in your app in &lt;a href=&quot;https://logrocket.com&quot;&gt;every bug report&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A single press of save would take your changes, inject it into your current running application, keep you in the exact same place, depending on the type of change it could re-layout your views, and so you can stay in your editor and make your changes. &lt;em&gt;From 25 seconds, to less than one&lt;/em&gt;. For a lot of my work, I can put my tests, debuggers and the application on another screen, and just move my head to watch changes propagate on pressing save.&lt;/p&gt;

&lt;p&gt;So, you&#39;re thinking &lt;em&gt;&quot;Yeah, but JavaScript...&quot;&lt;/em&gt; - well, we use &lt;a href=&quot;http://typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt; and it fixes pretty much every issue with JavaScript. It&#39;s also no problem for us to write native code when we need to, we are still adding to an existing native codebase. The last project I did on our React Native codebase required bi-directional JS &lt;-&gt; Swift communication.&lt;/p&gt;

&lt;p&gt;React Native feels like the best of both worlds: Elegant, fast to work with application code, which the whole dev team understands. Falling back to native tooling when we think it will be best for the project.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Reference from JS 2017: &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#TypeScript&quot;&gt;TypeScript&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There&#39;s one more thing that I want to really stress around developer experience, it&#39;s really easy to write tests for our React components. Testing in JavaScript is night-and-day better than native testing. Because we can run our tests outside of the simulator (due to React&#39;s virtual DOM) we run tests whenever you press save. These tests are only the ones related to the current &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#Jest&quot;&gt;changes in git&lt;/a&gt;. The only thing we miss is visual snapshots &lt;a href=&quot;https://www.objc.io/issues/15-testing/snapshot-testing/&quot;&gt;from the simulator&lt;/a&gt;, not having to restart a simulator to run tests makes it worth it though.&lt;/p&gt;

&lt;a name=&quot;Same.Tools..Different.Dev&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Same Tools, Different Dev&lt;/h4&gt;

&lt;p&gt;We wanted to stop being highly unique inside the dev team. Artsy has around 25 developers, the majority of which work with Ruby and JavaScript on a day-to-day basis. The mobile team was the single development team that didn&#39;t make their own API changes, used different toolchains and were much slower in shipping anything.&lt;/p&gt;

&lt;p&gt;This isn&#39;t a great position to be in.&lt;/p&gt;

&lt;p&gt;We wanted all developers to feel like they can contribute to any area of the company. For the past 5 years, the native mobile projects had close to zero contributions from anyone outside of the mobile team. Due to differences in tooling, and the idea that there was a cultural difference between us. Since the mobile team moved to React Native we have received features and bug fixes from the web team, and fit in better overall.&lt;/p&gt;

&lt;p&gt;This expansion of a mobile team developer&#39;s scope has made it much easier for us to reason about finding better ways to share code with the web team. At the end of 2015, the Collector Web team introduced GraphQL to Artsy. I wrote about how this affected the &lt;a href=&quot;http://artsy.github.io/blog/2016/06/19/graphql-for-mobile/&quot;&gt;mobile team&lt;/a&gt;. This acts as an API layer owned by the front-end side of Artsy. Meaning that it could contain a lot of API-derived client-specific logic. Previously, this work was done by the web team, and then consumed by mobile - now both teams build their APIs and consume them.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Reference from JS 2017: &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#GraphQL&quot;&gt;GraphQL&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is not something we have explored too deeply, however we expect to be able to port a lot of our React Native to Android. I got a rough prototype ported in 2 days work. By working at React-level, and allowing the React Native bindings to handle the interactions with the host OS, we&#39;ve been writing cross-platform code.&lt;/p&gt;

&lt;p&gt;We consider ourselves blocked on Android support, specifically by not having an engineer in our team with &lt;em&gt;deep&lt;/em&gt; experience in Android. Moving to React Native does not obviate our native skills, you&#39;re going to be significantly better in that environment with those skills than without. As we mentioned in our &lt;a href=&quot;/blog/2016/08/15/React-Native-at-Artsy/&quot;&gt;announcement&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;If you’re not already knowledgeable about iOS development, are not motivated to put in the time to learn about the
  platform specific details, and think making rich iOS applications with React Native will be a breeze, you’ll
  &lt;a href=&quot;http://www.dwotd.nl/2008/06/443-van-een-kouwe-kermis-thuiskomen.html&quot;&gt;come home from a very cold fair&lt;/a&gt; indeed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We need someone with a similar depth of knowledge in the Android ecosystem as our iOS, but we may need one or two for the entire team. The rest can continue to be a mix of Web and iOS engineers. You gain a subset of cross-platform skills using React Native. Had we continued down the path of using Swift, our skills would continue to be siloed.&lt;/p&gt;

&lt;p&gt;There is an argument that Swift will be running servers soon, and so you can re-use Swift code across platforms. I could see myself writing server-side back-end code in Swift (you&#39;re writing systems, not apps) but it has a &lt;a href=&quot;https://ashfurrow.com/blog/swift-on-linux/&quot;&gt;long way to go&lt;/a&gt;. It also isn&#39;t an argument towards using it in our native apps, we&#39;d have to re-write servers and implement our own GraphQL and Relay stack. This also would not impact the front-end code for the web - they would still be using JavaScript.&lt;/p&gt;

&lt;p&gt;With respect to Swift on Android, potentially, logic code could be shared between platforms but realistically for our setup that&#39;s just not worth it. We&#39;re moving that kind of logic into the GraphQL instance and sharing across &lt;em&gt;all&lt;/em&gt; clients, not only native platforms. If you&#39;re sharing model code, you could generate that per-project instead from the server. Since GraphQL is strongly-typed, we&#39;re doing this for both &lt;a href=&quot;https://github.com/alloy/relational-theory/pull/18&quot;&gt;TypeScript + GraphQL&lt;/a&gt; and &lt;a href=&quot;https://github.com/alloy/vscode-relay&quot;&gt;TypeScript + Relay&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We don&#39;t know where this will end, but we&#39;ve prototyped porting one of our view controllers from React Native &lt;a href=&quot;https://github.com/alloy/relational-theory/pull/16&quot;&gt;to a website&lt;/a&gt;. It&#39;s almost source-compatible. This such a completely different mindset from where we were a year ago.&lt;/p&gt;

&lt;a name=&quot;Owning.the.stack&quot;&gt;&lt;/a&gt;
&lt;h4&gt;Owning the stack&lt;/h4&gt;

&lt;p&gt;Pick an abstraction level of our application above UIKit and we can fork it. All our tools can be also be forked. We can fix our own issues.&lt;/p&gt;

&lt;p&gt;In native, there are no concepts like, &lt;em&gt;&quot;We&#39;ll use Steipete&#39;s fork of UIKit for UIPopover rotation fixes&quot;&lt;/em&gt; or &lt;em&gt;&quot;My version of Xcode will run tests when you press save.&quot;&lt;/em&gt;. Well, hopefully the latter &lt;a href=&quot;https://twitter.com/orta/status/790589579552296966&quot;&gt;may be fixed&lt;/a&gt; in time, but the &quot;you have no choice but to wait, and maybe it won&#39;t happen&quot; aspect is part of the problem.&lt;/p&gt;

&lt;p&gt;You have your tools given to you, in a year you get some new ones and lose some old ones. In contrast, we&#39;ve built &lt;a href=&quot;https://github.com/orta/vscode-jest#vscode-jest-&quot;&gt;many&lt;/a&gt; &lt;a href=&quot;https://github.com/orta/vscode-react-native-storybooks&quot;&gt;extensions&lt;/a&gt; &lt;a href=&quot;https://github.com/alloy/vscode-relay&quot;&gt;for&lt;/a&gt; &lt;a href=&quot;https://github.com/orta/vscode-ios-common-files&quot;&gt;VS&lt;/a&gt; &lt;a href=&quot;https://github.com/orta/vscode-danger&quot;&gt;Code&lt;/a&gt; for our own use, and helped out on &lt;a href=&quot;https://github.com/flowtype/flow-for-vscode/blob/master/CHANGELOG.md&quot;&gt;major ones&lt;/a&gt;. When VS Code didn&#39;t do what I wanted, I started using &lt;a href=&quot;https://github.com/orta/Essence&quot;&gt;use my own fork&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Reference from JS 2017: &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#Visual.Studio.Code&quot;&gt;VS Code&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In the last year, we have submitted code to major JavaScript dependencies of ours: React Native, Relay, VS Code, Jest and a few libraries in-between - fixing problems where we see them, offering features if we need them. Some of these changes are &lt;a href=&quot;https://github.com/Microsoft/vscode/pull/12628&quot;&gt;small&lt;/a&gt;, but some &lt;a href=&quot;https://github.com/facebook/relay/issues/1061&quot;&gt;are&lt;/a&gt; &lt;a href=&quot;https://github.com/facebook/jest/pull/2192&quot;&gt;big&lt;/a&gt; &lt;a href=&quot;https://github.com/facebook/react-native/pull/6114&quot;&gt;moves&lt;/a&gt;. Being able to help out on any problem makes it much easier to live with the &lt;a href=&quot;/blog/2016/08/15/React-Native-at-Artsy/&quot;&gt;593 dependencies&lt;/a&gt; that using React Native brings.&lt;/p&gt;

&lt;p&gt;It&#39;s worth highlighting that all of this is done on GitHub, in the open. We can write issues, get responses, and have direct line to the people who are working on something we depend on. This is a stark contrast to the Radar system used internally at Apple, and which external developers have write-only access to. For external contributors radar is opaque, and &lt;a href=&quot;https://thenextweb.com/apple/2012/04/13/app-developers-frustrated-with-bug-reporting-tools-call-on-apple-to-fix-radar-or-gtfo/&quot;&gt;often feels like a waste of time&lt;/a&gt;. On the other hand, a GitHub issue doesn&#39;t have to wait for the repo maintainers, others can get value from it and it&#39;s publicly indexed. If we had put all our effort into Radars instead of &lt;a href=&quot;https://github.com/artsy/eigen/issues/586&quot;&gt;issues like&lt;/a&gt; this, the whole community would be worse off.&lt;/p&gt;

&lt;p&gt;This isn&#39;t all doom and gloom. With Swift the language, and SwiftPM the package manager, Apple are more open with the feedback cycle using tools like &lt;a href=&quot;https://lists.swift.org/pipermail/swift-build-dev/Week-of-Mon-20160530/000497.html&quot;&gt;Slack&lt;/a&gt;, Mailing Lists, JIRA and Twitter.&lt;/p&gt;

&lt;p&gt;One aspect of working with JavaScript that has been particularly pleasant is the idea that your language is effectively a buffet. If you want to use the latest features of the language you can opt-in to it. We&#39;ve slowly added language features, while retaining backwards compatibility. First using &lt;a href=&quot;https://babeljs.io&quot;&gt;Babel&lt;/a&gt;, then &lt;a href=&quot;https://flowtype.org&quot;&gt;Flow&lt;/a&gt; and finally with &lt;a href=&quot;http://www.typescriptlang.org&quot;&gt;TypeScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In contrast, and this may be the last major time it happens, but people refer to the time it took to migrate &lt;a href=&quot;https://engblog.nextdoor.com/migrating-to-swift-3-7add0ce0655#.rvyrohyhq&quot;&gt;in&lt;/a&gt; &lt;a href=&quot;https://tech.zalando.com/blog/app-migration-to-swift-3/&quot;&gt;the&lt;/a&gt; &lt;a href=&quot;https://github.com/kickstarter/ios-oss/pull/26&quot;&gt;scale&lt;/a&gt; &lt;a href=&quot;https://twitter.com/guidomb/status/817363981216129025&quot;&gt;of&lt;/a&gt; &lt;em&gt;weeks&lt;/em&gt; during the Swift 2 -&gt; 3 migration. Having the language evolve is great, sometimes in ways that you &lt;a href=&quot;https://swift.org/documentation/api-design-guidelines/&quot;&gt;agree with&lt;/a&gt; and sometimes in ways &lt;a href=&quot;http://mjtsai.com/blog/2016/07/17/swift-classes-to-be-non-publicly-subclassable-by-default/&quot;&gt;you don&#39;t&lt;/a&gt;. Being able to use your own version of your tools frees you to make it work for you and your business. We have been talking about &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/#TypeScript-Extension&quot;&gt;extending TypeScript&lt;/a&gt; specifically for our applications.&lt;/p&gt;

&lt;a name=&quot;React.Native..one.year.later&quot;&gt;&lt;/a&gt;
&lt;h1&gt;React Native, one year later&lt;/h1&gt;

&lt;p&gt;In our announcement we talked about the lack of nuanced post-mortems on React Native. We&#39;re now a year in, we can at least try to help out in that space. We&#39;re sticking with React Native for the foreseeable future. It would take some &lt;em&gt;drastic&lt;/em&gt; changes in the Apple ecosystem for us to re-consider this decision. So here&#39;s the summary after 1 year.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We can share concepts with web&lt;/li&gt;
&lt;li&gt;Tools are built for apps like ours&lt;/li&gt;
&lt;li&gt;To do it right requires engineers willing to dive deep in JS&lt;/li&gt;
&lt;li&gt;You need native experience to have a polished app&lt;/li&gt;
&lt;li&gt;Dependency stack is still obscenely big&lt;/li&gt;
&lt;li&gt;Opens native engineers to more projects, makes yours more welcoming to others&lt;/li&gt;
&lt;li&gt;Problems do, and will occur, but everything is fixable by forking&lt;/li&gt;
&lt;li&gt;Extensive communication with native code gets tricky to test and maintain&lt;/li&gt;
&lt;li&gt;We ended up re-using quite a lot of existing native code&lt;/li&gt;
&lt;li&gt;It makes working in native code feel more like a chore, as you lose the JS developer experience&lt;/li&gt;
&lt;li&gt;Spending so much time in another environment will erode native knowledge&lt;/li&gt;
&lt;li&gt;Makes a lot of sense in an &lt;a href=&quot;/blog/2016/08/24/On-Emission/&quot;&gt;additive approach&lt;/a&gt; to existing apps&lt;/li&gt;
&lt;li&gt;We&#39;re not making plans to re-write other Apps into React Native, they are fine as-is&lt;/li&gt;
&lt;li&gt;New apps going forward we will default to React Native apps, unless there is a good reason to not&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;So, should you use React Native? Maybe. If you have an API driven app, &lt;em&gt;probably.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It&#39;s definitely worth a week of prototyping for any engineering team, then if that goes well you should look into GraphQL and Relay. They really make React Native shine.&lt;/p&gt;

&lt;a name=&quot;Want.to.get.started.&quot;&gt;&lt;/a&gt;
&lt;h1&gt;Want to get started?&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Here&#39;s the &lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;official site&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;These &lt;a href=&quot;https://egghead.io/courses/react-native-fundamentals&quot;&gt;two&lt;/a&gt; &lt;a href=&quot;https://egghead.io/courses/build-a-react-native-todo-application&quot;&gt;series&lt;/a&gt; are high-quality. I studied JavaScript by watching hours of egghead videos.&lt;/li&gt;
&lt;li&gt;Run through the &lt;a href=&quot;https://github.com/fbsamples/f8app/&quot;&gt;f8 app&lt;/a&gt; series on  &lt;a href=&quot;http://makeitopen.com/&quot;&gt;makeitopen.com&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Clone our React Native app, &lt;a href=&quot;https://github.com/artsy/emission/&quot;&gt;Emission&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read the rest of our &lt;a href=&quot;/series/react-native-at-artsy/&quot;&gt;series on React Native&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Read our summary on &lt;a href=&quot;/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/&quot;&gt;our JavaScript stack choices&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you&#39;d like to look into GraphQL + Relay, but don&#39;t want to start building a server yourself, consider these GraphQL as a Services:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://scaphold.io&quot;&gt;scraphold&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.graph.cool/&quot;&gt;graphcool&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Sun, 05 Feb 2017 12:18:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2017/02/05/Retrospective-Swift-at-Artsy/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2017/02/05/Retrospective-Swift-at-Artsy/</guid>
        
        
        <category>eidolon</category>
        
        <category>eigen</category>
        
        <category>emission</category>
        
        <category>javascript</category>
        
        <category>objectivec</category>
        
        <category>reactnative</category>
        
        <category>swift</category>
        
        <category>uikit</category>
        
      </item>
    
  </channel>
</rss>
