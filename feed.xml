<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artsy Engineering</title>
    <description></description>
    <link>http://artsy.github.io/</link>
    <atom:link href="http://artsy.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 14 May 2018 20:18:32 +0000</pubDate>
    <lastBuildDate>Mon, 14 May 2018 20:18:32 +0000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Is GraphQL The Future?</title>
        <description>&lt;p&gt;I have seen the future, and it looks a lot like GraphQL. Mark my words: in 5
years, newly minted full-stack app developers won’t be debating &lt;em&gt;RESTfulness&lt;/em&gt;
anymore, because REST API design will be obsolete. By the end of this post, I
hope you&#39;ll see what I see in the promise of GraphQL as a new approach to
client-server interaction.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;GraphQL is taking the full-stack world by storm. In case you’re not familiar,
GraphQL is a language-independent specification for client-server communication.
It lets you model the resources and processes provided by a server as a
&lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;domain-specific language (DSL)&lt;/a&gt;.
Clients can use it to send scripts written in your DSL to the server to process
and respond to as a batch.&lt;/p&gt;

&lt;p&gt;That’s...different from how GraphQL’s own page describes it. GraphQL is better
known as a query language designed for clients to fetch exactly the data they
need. While this is sort of true, I would argue that GraphQL actually fails this
test in reality. It’s neither a query language, nor particularly graph-oriented.
I argue that it&#39;s &lt;em&gt;not&lt;/em&gt; a query language because it comes with no native
concepts of operators and expressions that build up to queries. &lt;em&gt;You&lt;/em&gt; build
whatever facilities for specifying and fulfilling queries on your own. Likewise,
if your data is a graph, it’s on you to expose that structure. But your requests
are, if anything, trees.&lt;/p&gt;

&lt;p&gt;I’m not trying to be pedantic. I believe GraphQL succeeds at something subtler
and more important than literally being a graph query language. I’m writing this
piece because I kept running into difficulties approaching GraphQL from the
standpoints of REST, graph theory, or typical query languages. As I read blog
posts, StackOverflow Q&amp;amp;As, issues on the GraphQL repo and the GraphQL spec
itself, I developed a much more nuanced understanding, which I outline below.&lt;/p&gt;

&lt;p&gt;For brevity, the following assumes a intermediate familiarity with GraphQL,
including its type system, syntax, and server-side implementation. If you don’t
have this level of familiarity, I recommend going through any tutorial that
requires you to set up a GraphQL server, not just play with the query language
(which is how I ended up with a lot of misconceptions).
&lt;a href=&quot;https://graphql.org/graphql-js/&quot;&gt;The docs for the official JavaScript server library&lt;/a&gt;
are a good option. I’m going to start with the basics, but only so I can put my
own spin on those concepts, not to really illustrate them with examples.&lt;/p&gt;

&lt;a name=&quot;A.tree.of.fetches&quot;&gt;&lt;/a&gt;
&lt;h1&gt;A tree of fetches&lt;/h1&gt;

&lt;p&gt;Most applications are designed in the form of discrete pages, which are seeded
with some tiny chunk of data—say, a key or slug for some domain object—and then
perform a cascade of contingent fetches to get the data needed to populate the
templates rendered to a user. This is the basis of designing applications driven
by URL-based routing and it has been a mainstay of the MVC approach to web
application architecture for the past decade.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt; At Artsy, the seed of data for rendering an artwork page could be
the slug identifying some artwork. From this slug, we need a whole bunch more
data: the metadata of the artwork, information about the artist(s), sales data
if it’s available for purchase, information about the Artsy partner that owns
it, and so on. In classic REST, this data is aggregated by a cascade of dozens
of HTTP fetches to our backend API.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I wasn’t in the room when GraphQL was invented, but it seems to me that the team
that built it made a particularly crucial insight:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In most cases, all of this contingent fetching forms a tree, which is more or
less &lt;em&gt;fixed&lt;/em&gt; for a given page.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Data from early responses contain the keys for subsequent requests, but the
linkages between these requests are usually straightforward. So if it were
possible to factor all this disparate fetching into one spot and encode it into
one big “fetching tree” data structure ahead of time, this tree could be sent to
the the server, and the server could fulfill all of the data requirements in one
shot. This cuts out a tremendous amount of wasteful chatter between client and
server. Even in today&#39;s broadband world, bandwidth and latency matter,
especially for mobile users.&lt;/p&gt;

&lt;a name=&quot;GraphQL.anatomy&quot;&gt;&lt;/a&gt;
&lt;h1&gt;GraphQL anatomy&lt;/h1&gt;

&lt;blockquote&gt;&lt;p&gt;&lt;strong&gt;Editorial note&lt;/strong&gt; I&#39;m going to use the term &quot;operation&quot; pretty liberally
here, but I mean it in the conceptual sense, not in the sense of the GraphQL
spec, where it defines the semantics of an entire GraphQL request.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;A GraphQL request always starts with at least &lt;em&gt;one root API operation&lt;/em&gt; and some
finite number of follow-ups. Idiomatically, these follow-ups are queries,
meaning that they just retrieve data, without changing the server state in
observable ways. GraphQL models API operations as &lt;strong&gt;fields&lt;/strong&gt;. How a field works
in GraphQL depends on its &lt;strong&gt;type&lt;/strong&gt;, which falls into one of two basic
categories:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scalar&lt;/strong&gt; types (&lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, and &lt;code&gt;ID&lt;/code&gt;, as well as
application-defined &lt;code&gt;enum&lt;/code&gt; and &lt;code&gt;scalar&lt;/code&gt; types) represent the individual pieces
of &lt;em&gt;data actually sent to the client&lt;/em&gt;. Contrary how I think of the term scalar
in other contexts, the data can be arbitrarily complex. As far as the GraphQL
spec is concerned, scalars are just opaque blobs of data with validation and
serialization rules. As an operation, a scalar field is terminal data fetch,
with no follow-ups. They are the leaves of the request tree.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt; types (&lt;code&gt;type&lt;/code&gt;, &lt;code&gt;union&lt;/code&gt; and &lt;code&gt;interface&lt;/code&gt;) are collections of fields.
As an operation, an object-typed field is an intermediate operation that
serves as the junction point for follow-up operations. But, it doesn’t
directly return any data. They are the branches of the request tree.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The entire model for a given API is known as its &lt;strong&gt;schema&lt;/strong&gt;. Every schema has a
root query type, whose fields serve as the API’s entry points.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;# The root query object type
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;type Query {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  artwork(id: ID): Artwork
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  artist(name: String)
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  # … a whole bunch more root fields
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;}
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;type Artwork {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  title: String
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  artist: Artist
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;}
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;type Artist {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  name: String
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;A GraphQL query request begins by mentioning at least one of the fields of the
root query object. This represents an initial query. And if that field is an
object, &lt;em&gt;its&lt;/em&gt; fields are used to specify any number of follow-up queries.
Critically, &lt;em&gt;any&lt;/em&gt; field in the request tree can take arguments, allowing a
request to be parameterized at all depths.&lt;/p&gt;

&lt;p&gt;Take this query, for example:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;{
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  artwork(id: &quot;andy-warhol-campbells-soup-i-black-bean&quot;) {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    title
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    artist {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      name
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Here, we tell the server to look up an &lt;code&gt;Artwork&lt;/code&gt; by its slug, and tell us the
title. So far, this is just like REST. But we &lt;em&gt;also&lt;/em&gt; tell it to find us the
&lt;code&gt;Artist&lt;/code&gt; for us. Importantly, object fields &lt;em&gt;must&lt;/em&gt; be followed up with further
queries, and scalar fields &lt;em&gt;cannot&lt;/em&gt; be. With that in mind, it’s easy to see that
&lt;code&gt;artwork&lt;/code&gt; and &lt;code&gt;artist&lt;/code&gt; are object fields, while &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; are scalar
fields.&lt;/p&gt;

&lt;p&gt;Also note that the fact that there’s also an &lt;code&gt;artist&lt;/code&gt; root query field actually
has nothing to do with its presence under &lt;code&gt;Artwork&lt;/code&gt;. There can be multiple paths
to reach the same GraphQL type. This is defined explicitly by the schema.&lt;/p&gt;

&lt;p&gt;Usefully, the server’s response to a GraphQL request will directly mirror the
shape of the request itself. The result of the request above looks like:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;{
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &quot;data&quot;: {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &quot;artwork&quot;: {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &quot;title&quot;: &quot;Campbell&#39;s Soup I: Black Bean&quot;,
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &quot;artist&quot;: {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &quot;name&quot;: &quot;Andy Warhol&quot;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;a name=&quot;GraphQL.as.a..meta-.scripting.language&quot;&gt;&lt;/a&gt;
&lt;h1&gt;GraphQL as a (meta-)scripting language&lt;/h1&gt;

&lt;p&gt;Let’s dig a little deeper into the scripting language interpretation of GraphQL,
because this is the crux of how I think people should think of GraphQL. If I
were to guess, I think Facebook…&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;…knows this is true. After all, much of the spec is devoted to
&lt;a href=&quot;http://facebook.github.io/graphql/October2016/#sec-Execution&quot;&gt;the execution model of GraphQL&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;…might have backed into this design. It’s well known that they think of their
data as a graph, so I suspect GraphQL might have begun literally as a &quot;graph
query language&quot;, analogous to &lt;a href=&quot;https://en.wikipedia.org/wiki/SQL&quot;&gt;SQL&lt;/a&gt; for
relational databases.&lt;/li&gt;
&lt;li&gt;…thinks that this too difficult to explain, and thus, settled on the query
language paradigm.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are a couple reasons GraphQL might not look like a scripting language to
you. It didn’t to me, at first! After all, you don&#39;t write your request as list
of statements. It doesn’t have a concept of variables, other than parameters to
the whole document. There are no looping constructs or recursion. But I think a
closer look might shift your perspective.&lt;/p&gt;

&lt;a name=&quot;Control.flow&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Control flow&lt;/h2&gt;

&lt;p&gt;It’s true that a GraphQL request doesn’t follow the same vertical sequence of
steps model familiar to most programming languages. But sequencing &lt;em&gt;does&lt;/em&gt; exist.
It’s just represented by calling nested fields of object types, terminating in a
scalar field. See this request:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;{
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  step1(arg: “something”) {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    step2 {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      step3(arg: &quot;something else”) {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        outputScalar
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;In a more traditional language, this would look more like:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;&#39;&gt;&lt;span class=&#39;line&#39;&gt;step1(“something”)
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;step2()
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;return step3(“something else”)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;So, sequencing got a bit more verbose, but it &lt;em&gt;is&lt;/em&gt; there.&lt;/p&gt;

&lt;p&gt;Interestingly, GraphQL reserves vertical stacking for something that’s an
afterthought in most languages: &lt;em&gt;concurrency&lt;/em&gt;. (Granted, there’s no way to
&lt;a href=&quot;https://en.wikipedia.org/wiki/Synchronization_(computer_science)&quot;&gt;synchronize&lt;/a&gt;
concurrent paths of execution.) I’m not going to quote
&lt;a href=&quot;https://facebook.github.io/graphql/October2016/&quot;&gt;the spec&lt;/a&gt;, but search it
yourself, and you can find the word “parallel” in there several times. This
design is intentional.&lt;/p&gt;

&lt;a name=&quot;Variables&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Variables&lt;/h2&gt;

&lt;p&gt;One of the core aspects of programming is the ability to pass intermediate data
around. The most basic way languages accomplish this is with named variables.
Many languages allow variables to be reassigned; some don&#39;t. GraphQL doesn’t
have them at all! But that doesn’t mean data can’t be propagated.&lt;/p&gt;

&lt;p&gt;GraphQL supports one kind of propagation, which is the propagation of context
down the sequence of resolvers. It happens implicitly and invisibly. Exactly
what data is propagated and what that means is up to you.&lt;/p&gt;

&lt;p&gt;How does this work? Well, if you have worked on GraphQL server code, you know
that every field has a &lt;strong&gt;resolver&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;For scalar fields, the resolver is responsible for returning the actual data
that the client sees.&lt;/li&gt;
&lt;li&gt;For object fields, the resolver instead returns a hidden chunk of data that is
forwarded along to the resolvers of the fields contained in the object. So
these resolvers get their parent object’s hidden data, the global context, and
any arguments, and they can use all of these values to produce their value.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Often, we just resolve an object field to a domain object. Its scalar fields
might correspond to properties of that domain object and its object fields might
correspond to related objects. But the architecture is more powerful than this!
A deeply nested field can potentially be the result of the resolved values of
all its parents. It all depends on how you design your resolvers to work
together.&lt;/p&gt;

&lt;p&gt;This pattern reminds me a bit of when &lt;a href=&quot;https://api.jquery.com/&quot;&gt;jQuery&lt;/a&gt; first
clicked for me. A lot of details are propagated invisibly within your &lt;code&gt;jquery&lt;/code&gt;
object as you chain method calls to refine your DOM selections.&lt;/p&gt;

&lt;a name=&quot;Looping.and.recursion&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Looping and recursion&lt;/h2&gt;

&lt;p&gt;GraphQL doesn’t have them, plain and simple. Consequently, the GraphQL DSLs you
design are not
&lt;a href=&quot;https://en.wikipedia.org/wiki/Turing_completeness&quot;&gt;Turing-complete&lt;/a&gt;--they will
always halt in a finite amount of steps. This is really important, because it
prevents clients from being able to send servers on errands that will never end.
Of course, the &lt;em&gt;implementations&lt;/em&gt; of field resolvers on the server are free to do
whatever they want in full Turing-complete glory.&lt;/p&gt;

&lt;a name=&quot;Putting.it.together&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Putting it together&lt;/h2&gt;

&lt;p&gt;My point here is that the execution model of GraphQL is in many ways just like a
scripting language interpreter. The limitations of its model are strategic, to
keep the technology focused on client-server interaction. What&#39;s interesting is
that you as a developer provide nearly all of the definition of what operations
exist, what they mean, and how they compose. For this reason, I consider GraphQL
to be a &lt;em&gt;meta-scripting language&lt;/em&gt;, or, in other words, a toolkit for building
scripting languages.&lt;/p&gt;

&lt;a name=&quot;The.post-REST.world&quot;&gt;&lt;/a&gt;
&lt;h1&gt;The post-REST world&lt;/h1&gt;

&lt;p&gt;Subtly, this paradigm is a sharp step away from a whole body of knowledge that
models APIs as resources with fixed verbs, which we know as REST. It’s more
appropriate to think of GraphQL requests as a script of remote procedure calls
(RPC). From this perspective, the design of the schema is a lot less about data
modeling than it is a question of how you want your entire API to be traversed.
This encourages a verb-oriented mindset.&lt;/p&gt;

&lt;a name=&quot;Verb.orientation&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Verb orientation&lt;/h2&gt;

&lt;p&gt;Speaking of verbs, you can think of &quot;fetch&quot; as being the default verb in
GraphQL. You model other verbs as &lt;strong&gt;mutations&lt;/strong&gt;. I delayed learning about
mutations, because I thought they must be way more complex than queries. Quite
the opposite! They all sit in one big, flat bucket at the root of your schema,
as the fields of the root &lt;code&gt;mutation&lt;/code&gt; type. These fields have a type too, and if
it is an object type, then you can issue effectively any number of follow-up
queries after your mutation completes. Learning about mutations was when it
really dawned on me that &lt;em&gt;fields are just function calls&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Mutations are a major break with REST. In GraphQL, your mutations are defined
under root mutation object that is separate from your root query object.
Therefore, you are immediately asked to accept that they don&#39;t represent verbs
on a resource, but verbs &lt;em&gt;on your entire service&lt;/em&gt;. This eliminates one of REST’s
key weak points, namely that complex operations that touch multiple parts of an
application’s data model are difficult to model as a PUT, DELETE, POST, or PATCH
on a single resource. In my experience, this &quot;impedance mismatch” between API
modeling and domain modeling has led to the worst aspects of my HTTP API
designs.&lt;/p&gt;

&lt;a name=&quot;REST.is.dead..Long.live.REST.&quot;&gt;&lt;/a&gt;
&lt;h2&gt;REST is dead. Long live REST!&lt;/h2&gt;

&lt;p&gt;It is borderline heresy in some circles to suggest that REST API design is dead.
But I’m saying it. Don’t get me wrong, REST is still a great paradigm for
serving static assets. It’s the &lt;em&gt;API&lt;/em&gt; part I have an issue with.&lt;/p&gt;

&lt;p&gt;Ironically, I think there’s a strong argument that a GraphQL request document
maps very nicely to the concept of a resource:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It doesn’t change that often, and you could PUT it to store it, perhaps using
a hash of the request document to form the URL.&lt;/li&gt;
&lt;li&gt;GraphQL queries map elegantly to GET operations on a stored query request
document’s URL.&lt;/li&gt;
&lt;li&gt;GraphQL mutations map decently to POST operations to a stored mutation request
document’s URL.&lt;/li&gt;
&lt;li&gt;The arguments of a GraphQL request map elegantly to HTTP query parameters.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;In other words, GraphQL is simply another formalization layer of HTTP-based API
design. Think of it as being akin to the way JSON representation changed the way
we think about client-server communication in full-stack apps. It’s not so much
that REST will cease to exist, but that it will fade to the background, as an
implementation detail of GraphQL application frameworks.&lt;/p&gt;

&lt;a name=&quot;GraphQL.is.not.your.data.model&quot;&gt;&lt;/a&gt;
&lt;h1&gt;GraphQL is not your data model&lt;/h1&gt;

&lt;p&gt;Another realization I’ve had in learning to apply GraphQL is that the schema is
&lt;em&gt;not&lt;/em&gt; the actual data model, and therefore raw GraphQL responses cannot be
directly used by the client. You &lt;em&gt;could&lt;/em&gt; choose to think of it this way, but
you’re likely to run into some conundrums:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/facebook/graphql/issues/101&quot;&gt;There is no free-form map data structure&lt;/a&gt;.
There are only objects with fixed fields, scalars, and lists.&lt;/li&gt;
&lt;li&gt;It is difficult to design abstractions over types.&lt;/li&gt;
&lt;li&gt;The object tree you get in return from a query request is neither normalized
nor is it an object graph (multiple copies of the same object may be
returned).&lt;/li&gt;
&lt;li&gt;Commonly used protocol patterns, like
&lt;a href=&quot;https://facebook.github.io/relay/docs/graphql-connections.html&quot;&gt;the connection pattern&lt;/a&gt;,
require explicit modeling within your schema.&lt;/li&gt;
&lt;li&gt;The limitations of GraphQL&#39;s type system make certain modeling techniques
difficult to directly model, such as
&lt;a href=&quot;https://stackoverflow.com/questions/47933512/representing-enum-object-variant-type-in-graphql&quot;&gt;singletons within unions&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Recursive data types can’t be queried to undefined depth in their nested form.
Think of your comment board with nested replies.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The upshot of this is that there likely needs to be some process of conversion
from your native data model on your server to your GraphQL API, and then again
from your client’s API consumption code to its internal data model.
&lt;a href=&quot;https://facebook.github.io/relay/&quot;&gt;Relay&lt;/a&gt; and
&lt;a href=&quot;https://www.apollographql.com/client&quot;&gt;Apollo&lt;/a&gt; serve this purpose. Their utility
wasn’t immediately clear to me when I naively imagined GraphQL to literally be a
system for reproducing a slice of server-side object graph. (Hmm, where might I
have gotten that impression from?)&lt;/p&gt;

&lt;p&gt;A lot of discussion in the GraphQL space centers on data modeling—the nouns.
There’s a lot of debate and worthwhile work to be done on that front, but one of
my primary reasons for writing this piece is to think about the verbs. What
happens when you think of GraphQL requests as not just verbs, but &lt;em&gt;chains&lt;/em&gt; of
verbs? My inkling is that you start to be able to represent services in a much
more fluid way. Complex processes no longer have to be orchestrated by API
clients or hidden behind unwieldy black-box POST endpoints. Instead, clients can
compose processes from the easily inspectable building blocks that the server
provides via its GraphQL schema. That’s a whole different approach to API
design.&lt;/p&gt;

&lt;a name=&quot;So..where.to.now.&quot;&gt;&lt;/a&gt;
&lt;h1&gt;So, where to now?&lt;/h1&gt;

&lt;p&gt;I began by asserting that the future looks a lot &lt;em&gt;like&lt;/em&gt; GraphQL. But I did not
say that GraphQL &lt;em&gt;is the future&lt;/em&gt;. I hedge because there are a lot of unanswered
questions and some pain points within today’s GraphQL, even as it paints a
compelling picture of the future. I may write a follow-up piece bringing up some
of these gripes. At the moment, Facebook still largely controls the development
of the technology and it has been slow to evolve. Arguably, this is a good
thing, as the full-stack community continues to digest the basic concepts. But
I’m sure impatient folks will attempt forks or create parallel technologies. How
it all balances out is anybody’s guess.&lt;/p&gt;

&lt;p&gt;Nonetheless, today’s GraphQL is already a tremendous leap forward from REST API
design. It much more directly models the sort of data traversals a client needs
to perform in order to do its job. I expect significant refinement within this
space over the next couple years. And after a couple more, the days before
GraphQL will be just another source of lore for grizzled vets like us.&lt;/p&gt;
</description>
        <pubDate>Tue, 08 May 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/05/08/is-graphql-the-future/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/05/08/is-graphql-the-future/</guid>
        
        
        <category>api</category>
        
        <category>graphql</category>
        
        <category>programming</category>
        
        <category>rest</category>
        
      </item>
    
      <item>
        <title>Fully Automated Standups</title>
        <description>&lt;p&gt;When I began working at Artsy four years ago, remotely, I really didn&#39;t like the weekly engineering standup. I&#39;d sit in front of my computer and strain to hear a dozen people gathered around a laptop with Google Hangout. They&#39;d discuss implementation details for projects I wasn&#39;t familiar with, and then I&#39;d do the same to them (our mobile team was still very separate from our web team). Twenty minutes would pass and I didn&#39;t feel like my work experience at Artsy had been enriched in any way.&lt;/p&gt;

&lt;p&gt;The first time I came to New York to visit the office – before moving here – I sat down with &lt;a href=&quot;https://github.com/dylanfareed&quot;&gt;Dylan&lt;/a&gt; and &lt;a href=&quot;https://github.com/orta&quot;&gt;Orta&lt;/a&gt;. Dylan ran the weekly standup, and Orta was also not a fan of the meeting. Dylan was clear: if the standup wasn&#39;t working for the two of us, then it wasn&#39;t working for anyone. So let&#39;s fix it together.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;And we did. We installed new sound-baffling ceiling tiles to help remote workers hear the boardroom more clearly. We restructured updates, moving from individual updates to team updates. We introduced a section for people to ask and offer help. All kinds of changes. I started looking forward to standup.&lt;/p&gt;

&lt;p&gt;At Artsy, when you see something that could be improved about the way that we work, you are expected to help improve it. Dylan taught me that lesson, and I still take it to heart.&lt;/p&gt;

&lt;p&gt;Last summer, I started taking on more responsibilities for the Artsy Engineering team, including running the weekly standup meeting. It was previously run by a single engineer, &lt;a href=&quot;https://github.com/craigspaeth&quot;&gt;Craig&lt;/a&gt;, who was juggling a lot of team-wide responsibilities. I was happy to help him out and run the meeting, but I had only replaced &lt;em&gt;myself&lt;/em&gt; as a single-point-of-failure for standup; even with Orta running things sometimes, the process itself was still as brittle as when Craig was running things alone. After a few months, Orta and I decided to fix things.&lt;/p&gt;

&lt;p&gt;Our goal: fully automated standups. No single person should ever be a point-of-failure for our team. We moved through a few distinct steps.&lt;/p&gt;

&lt;p&gt;First, we had to document the process of running the standup. This was crucial: standups should be run as a function of the documentation, so that any engineer at Artsy can run an effective standup. The docs should not only help the engineer run the meeting, but help them feel &lt;em&gt;capable&lt;/em&gt; of running the meeting. And once documentation is in place, anyone can help improve the docs (and consequently, improve the process). The current &lt;a href=&quot;https://github.com/artsy/meta/blob/master/meta/open_standup.md&quot;&gt;docs are open source&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, we had to get other engineers running the meeting. We split up the responsibilities of the meeting into two roles: a talking part, and a note-taking part. Both are integral, and different people gravitate towards differently roles. Splitting things up not only made running the meeting easier, but it made running the meeting more appealing to newcomers.&lt;/p&gt;

&lt;p&gt;Once the meeting was a two-person responsibility, we started bringing on other engineers to help. I would ask around to see who was interested in helping running a meeting, giving choice of role to the other person. After each meeting, I&#39;d ask the person about how we could improve the docs. Each week, the docs got better and better.&lt;/p&gt;

&lt;p&gt;The next phase was moving to having standup run entirely by other engineers. I had a list of engineers who had never run a standup, and worked down the list to get as many engineers having run a meeting as possible. I made &lt;a href=&quot;https://github.com/artsy/meta/pull/21&quot;&gt;this pull request&lt;/a&gt; making it clear that running the standup meeting is a responsibility that every member of the team &lt;em&gt;shares&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Eventually, I felt we were ready to move to a self-perpetuating standup. At the end of each standup, we would solicit volunteers to run next week&#39;s meeting. Fully-automated standups! We&#39;d done it! Things were working, though we did recently decide to &lt;a href=&quot;https://github.com/artsy/meta/pull/32&quot;&gt;integrate the standup schedule into our new support on-call schedule&lt;/a&gt;; the engineers beginning their rotation were responsible for running the standup. This eliminated the kind of awkward &quot;okay who wants to do this next week?&quot; part of our meeting.&lt;/p&gt;

&lt;p&gt;At each step, we improved the process. Through effective documentation and positive energy, we reduced the &lt;a href=&quot;https://en.wikipedia.org/wiki/Bus_factor&quot;&gt;bus factor&lt;/a&gt; for our engineering team&#39;s management. And more importantly, I think, we made it clear to every Artsy engineer that managing our team and improving how we work is a responsibility we have, together.&lt;/p&gt;
</description>
        <pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/05/07/fully-automated-standups/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/05/07/fully-automated-standups/</guid>
        
        
        <category>best practices</category>
        
        <category>culture</category>
        
        <category>people</category>
        
        <category>team</category>
        
      </item>
    
      <item>
        <title>JavaScriptures 3 - Styled Components</title>
        <description>&lt;p&gt;The third in our JavaScriptures series on the Artsy &lt;a href=&quot;http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/&quot;&gt;omakase&lt;/a&gt;. This workshop is a deep dive into &lt;a href=&quot;https://www.styled-components.com&quot;&gt;Styled
Components&lt;/a&gt;, where we take our React app from the first workshop and convert it to use Styled Components. We
have Anandaroop Roy and Jon Allured covering all the details.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;center&gt;
&lt;iframe width=&#39;100%&#39; height=&#39;400&#39; src=&#39;https://www.youtube.com/embed/K7xafqfcC-4&#39; frameborder=&#39;0&#39; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;




&lt;p style=&#39;text-align:right;&#39;&gt;&lt;a href=&quot;https://speakerdeck.com/artsyopensource/javascriptures-3-styled-components&quot;&gt;
Slides on Speakerdeck
&lt;/a&gt;&lt;/p&gt;



</description>
        <pubDate>Fri, 04 May 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/05/04/JavaScriptures-3-Styled-Components/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/05/04/JavaScriptures-3-Styled-Components/</guid>
        
        
        <category>event</category>
        
        <category>javascript</category>
        
        <category>styledcomponents</category>
        
      </item>
    
      <item>
        <title>JavaScriptures 2 - TypeScript</title>
        <description>&lt;p&gt;The second in our JavaScriptures series on the Artsy &lt;a href=&quot;http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/&quot;&gt;omakase&lt;/a&gt;. This one is a deep dive in TypeScript with
a minor-focus on working with React. We run through a series of excercises you can run &lt;a href=&quot;https://github.com/artsy/javascriptures/tree/master/2_intro-to-typescript&quot;&gt;through yourself
here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&#39;s ran by &lt;a href=&quot;https://twitter.com/alloy&quot;&gt;@alloy&lt;/a&gt; and &lt;a href=&quot;https://github.com/sarahscott&quot;&gt;Sarah Scott&lt;/a&gt; and covers compilation, errors, default types, interfaces,
inference, generics and how they all come together in your tools.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;center&gt;
&lt;iframe width=&#39;100%&#39; height=&#39;400&#39; src=&#39;https://www.youtube.com/embed/KXPZvjCUlAA&#39; frameborder=&#39;0&#39; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;




&lt;p style=&#39;text-align:right;&#39;&gt;&lt;a href=&quot;https://speakerdeck.com/artsyopensource/javascriptures-2-typescript&quot;&gt;
Slides on Speakerdeck
&lt;/a&gt;&lt;/p&gt;



</description>
        <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/05/02/JavaScriptures-2-TypeScript/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/05/02/JavaScriptures-2-TypeScript/</guid>
        
        
        <category>event</category>
        
        <category>javascript</category>
        
        <category>typescript</category>
        
      </item>
    
      <item>
        <title>JavaScriptures 1 - React</title>
        <description>&lt;p&gt;We&#39;re a growing engineering team, and that tends to mean that people move towards being more specialized. This is
great for an individual&#39;s technical depth, but can weaken their breadth of knowledge on new technology. We want to
encourage the growth of both within our engineering team. To address this our front-end engineers worked together to
run a series of workshops for the whole engineering team.&lt;/p&gt;

&lt;p&gt;We called this JavaScriptures, 6 workshop-style deep dives into the major parts of the &lt;a href=&quot;http://artsy.github.io/blog/2017/02/05/Front-end-JavaScript-at-Artsy-2017/&quot;&gt;Artsy JavaScript
omakase&lt;/a&gt;. They are: React, TypeScript, Styled Components, Relay and Redux, Babel and Webpack. Today I&#39;m
posting the &lt;a href=&quot;https://youtu.be/k_f7Ff7bREc&quot;&gt;recording&lt;/a&gt; and &lt;a href=&quot;https://speakerdeck.com/artsyopensource/javascriptures-1-react&quot;&gt;slides&lt;/a&gt; from a deep dive into React hosted by &lt;a href=&quot;https://twitter.com/lucsucces&quot;&gt;Luc Succes&lt;/a&gt; and
myself.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;center&gt;
&lt;iframe width=&#39;100%&#39; height=&#39;400&#39; src=&#39;https://www.youtube.com/embed/k_f7Ff7bREc&#39; frameborder=&#39;0&#39; allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;




&lt;p style=&#39;text-align:right;&#39;&gt;&lt;a href=&quot;https://speakerdeck.com/artsyopensource/javascriptures-1-react&quot;&gt;
Slides on Speakerdeck
&lt;/a&gt;&lt;/p&gt;



</description>
        <pubDate>Tue, 01 May 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/05/01/JavaScriptures-1-React/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/05/01/JavaScriptures-1-React/</guid>
        
        
        <category>event</category>
        
        <category>react</category>
        
      </item>
    
      <item>
        <title>Programmer Misconceptions about Art</title>
        <description>&lt;p&gt;Our mission at Artsy has been to make art as popular as music, and at a high level, the way that our engineering team supports that mission is through building software. We have built systems and databases and user interfaces that represent different facets of the art world, and throughout our work, we have... made some mistakes.&lt;/p&gt;

&lt;p&gt;That&#39;s okay! Programmers make mistakes all the time. There is &lt;a href=&quot;https://github.com/kdeldycke/awesome-falsehood&quot;&gt;a large list of blog posts&lt;/a&gt; describing various programmer misconceptions, from subjects you might expect would be simple to model in computers, like units of measurement and time, to subjects that are based more in the human condition, like postal addresses and marriage.&lt;/p&gt;

&lt;p&gt;In the interest of openness and sharing what we&#39;ve learned, the Artsy Engineering team has come up with the following list of misconceptions programmers believe about art. Thank you to everyone at Artsy who contributed to this list.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;ul&gt;
&lt;li&gt;All artworks have an artist (some artworks are attributed to &quot;cultural makers&quot;, others have a manufacturer).&lt;/li&gt;
&lt;li&gt;All artworks have exactly one artist (some artworks are collaborations).&lt;/li&gt;
&lt;li&gt;All artworks are unique (there are editions, reproductions, and series of works, and modeling the relationships between them all is nontrivial).&lt;/li&gt;
&lt;li&gt;All lots in an art auction are artworks (some lots are &quot;experiential&quot;, like a visit to an artist&#39;s studio).&lt;/li&gt;
&lt;li&gt;Only rich people buy art.&lt;/li&gt;
&lt;li&gt;Only rich people can afford to buy art, and everyone else just buys posters of &quot;real&quot; art.&lt;/li&gt;
&lt;li&gt;All artworks have a title (some are untitled).&lt;/li&gt;
&lt;li&gt;&quot;Untitled&quot; signifies an artwork has no title (some artworks are titled &quot;Untitled&quot;).&lt;/li&gt;
&lt;li&gt;All artwork titles can fit inside 512 characters (not true, &lt;a href=&quot;https://www.artsy.net/artwork/matt-goerzen-sockpuppet-theatre-representing-the-techniques-tools-and-environments-whereby-hackers-and-other-info-warriors-might-seek-to-parse-through-elsewhere-distorted-informational-domains-to-make-sense-of-them-and-also-possibly-to-acquire-by-illicit-or-clever-means-good-information-that-can-then-be-communicated-in-a-way-that-sheds-light-on-deceptions-but-can-also-be-difficult-to-evaluate-on-their-own-terms-due-to-the-elite-requisites-of-interpreting-such-knowledge-or-more-generalized-uncertaintities-regarding&quot;&gt;here is a counterexample&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;An artwork is associated with a natural, canonical category.&lt;/li&gt;
&lt;li&gt;An artwork belongs to only one gallery/collector/auction house at a time (provenance of artworks is complicated, and there is no canonical source of truth).&lt;/li&gt;
&lt;li&gt;Art should always be rendered at its maximum size (there are complex business constraints and art world norms that need to be considered).&lt;/li&gt;
&lt;li&gt;People buy art mostly for its visual qualities (most people buy art because of a story, because they understand what the artwork is trying to say, or because they simply can&#39;t stop thinking about it).&lt;/li&gt;
&lt;li&gt;People don&#39;t buy art from JPEGs (in fact, people buy art that hasn&#39;t even been created yet).&lt;/li&gt;
&lt;li&gt;&quot;My kid can paint that&quot; (&lt;a href=&quot;https://twitter.com/ashfurrow/status/707273704640798720&quot;&gt;but did they?&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;The art market needs technology because it&#39;s inefficient (the art market needs technology because technology can help expand the entire art world).&lt;/li&gt;
&lt;li&gt;Intermediaries in the art market are bad (eg. galleries: they enable artists to make works for years before they sell anything, they are the enabler, not the obstacle).&lt;/li&gt;
&lt;li&gt;There is one &quot;art world&quot; (there are thousands of galleries around the world, specializing in everything from contemporary jewelry and emerging conceptual art to Chinese scroll painting and regional landscapes).&lt;/li&gt;
&lt;li&gt;Your opinion on art doesn&#39;t matter, the industry will independently determine value of an artwork (everyone has opinions, your appreciation of art is &lt;em&gt;all&lt;/em&gt; about &lt;em&gt;you&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;The art world is hermetic and isn&#39;t relevant to my life (in fact the arts contribute billions of dollars to the economy, employ thousands of people, have a ripple effect on urban life, and are often a major source of inspiration for the TV, movies, and books we all consume on a daily basis).&lt;/li&gt;
&lt;li&gt;Gallerists are fancy people in a luxury business, living fancy lives (in fact, the average salary for a gallery owner is way lower than you think).&lt;/li&gt;
&lt;li&gt;Art and engineering are orthogonal (nope, just look at us!).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Do you have expertise in an area programmers often get wrong? Write a blog post and add it to &lt;a href=&quot;https://github.com/kdeldycke/awesome-falsehood&quot;&gt;the list of misconceptions&lt;/a&gt;!&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Apr 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/04/18/programmer-misconceptions-about-art/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/04/18/programmer-misconceptions-about-art/</guid>
        
        
        <category>best practices</category>
        
        <category>data</category>
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Making a React Native Components Pod</title>
        <description>&lt;p&gt;When we talk about our React Native setup in abstract, there are two kinds of &quot;&lt;a href=&quot;http://2.bp.blogspot.com/_PekcT72-PGE/SK3PTKwW_eI/AAAAAAAAAGY/ALg_ApHyzR8/s1600-h/1219140692800.jpg&quot;&gt;now draw The Tick&lt;/a&gt;&quot; for
iOS developers:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How do I build this React Native as a CocoaPods setup?&lt;/li&gt;
&lt;li&gt;How do I get all the JavaScript tooling setup up?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We&#39;re going to address the first part in this post. By the end of this post we&#39;re going to get an &lt;a href=&quot;/blog/2016/08/24/On-Emission/&quot;&gt;Emission-like
repo&lt;/a&gt; set up for an existing OSS Swift iOS app called &lt;a href=&quot;https://github.com/GitHawkApp/GitHawk/&quot;&gt;GitHawk&lt;/a&gt;. The aim being to introduce no
JavaScript tooling into GitHawk itself, and to only expose iOS-native &lt;code&gt;UIViewControllers&lt;/code&gt; via a CocoaPod which is
consumed by GitHawk.&lt;/p&gt;

&lt;p&gt;To do this we&#39;re going to use the CocoaPods&#39; &lt;code&gt;pod lib create&lt;/code&gt; template, and React Native&#39;s &lt;code&gt;react-native init&lt;/code&gt; to
make a self-contained React Native repo. It will export a JS file, and some native code which Podspec will
reference. This keeps the tooling complexity for iOS and React Native separate. Read on to start digging in.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;So, I&#39;m &lt;strong&gt;choosing&lt;/strong&gt; to be annoying here. I will intentionally be adding &lt;code&gt;$&lt;/code&gt;s before all of the commands, this is
specifically to slow you down and make you think about each command. This isn&#39;t a quick tutorial you can skim in 2
minutes, running though it properly should take about an hour.&lt;/p&gt;

&lt;div class=&quot;mobile-only&quot;&gt;
&lt;p&gt;
  &lt;strong&gt;Also, before you get started&lt;/strong&gt;, it looks like you&#39;re using a really small screen, this post expects you would have a terminal around with useful tools for getting stuff done. I&#39;m afraid without that, you&#39;re not going to get much out of it. I&#39;d recommend switching to a computer.
&lt;/p&gt;
&lt;/div&gt;


&lt;a name=&quot;What.Are.We.Going.To.Do.&quot;&gt;&lt;/a&gt;
&lt;h2&gt;What Are We Going To Do?&lt;/h2&gt;

&lt;p&gt;We will make a React Native components library (GitDawg) for an existing open-source iOS Swift Application
(GitHawk). This reflects an existing app with a team who wants to experiment with React Native in a way that doesn&#39;t
affect the main codebase. In Artsy, GitDawg is &lt;a href=&quot;https://github.com/artsy/emission&quot;&gt;Emission&lt;/a&gt;, and GitHawk is &lt;a href=&quot;https://github.com/artsy/eigen&quot;&gt;Eigen&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We will clone and set up GitHawk&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will use &lt;code&gt;pod lib create&lt;/code&gt; to make a library repo called GitDawg&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will use &lt;code&gt;react-native init&lt;/code&gt; to make a React Native environment&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will bundle the React Native code into our Pod&#39;s asset folder&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will edit the Podspec for GitDawg, and then the Podfile for the example project to consume it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will use &lt;a href=&quot;https://github.com/orta/cocoapods-fix-react-native#readme&quot;&gt;cocoapods-fix-react-native&lt;/a&gt; to hotfix the React Native files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will expose a UIViewController which corresponds to the default screen from &lt;code&gt;react-native init&lt;/code&gt; in our Pod&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will change the storyboard reference to point to the UIViewController from our Pod, and run the simulator to
see our welcome screen.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will set up GitHawk to consume our new Pod&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will change GitHawk to show our new UIViewController instead of the bookmarks screen&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We will edit GitDawg to act more like a development environment&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;a name=&quot;GitHawk&quot;&gt;&lt;/a&gt;
&lt;h2&gt;GitHawk&lt;/h2&gt;

&lt;p&gt;Let&#39;s get started by having a working &lt;a href=&quot;https://github.com/GitHawkApp/GitHawk/&quot;&gt;copy of GitHawk&lt;/a&gt;. I&#39;ll leave the README for GitHawk to do that, but
if you want to be certain you&#39;re on the same version as me - I&#39;m working from this commit
&lt;code&gt;6dc2988d23d70eb0862d11f4a365bf47a87848c6&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Clone a copy of GitHawk, and get it running in your Simulator, should take about 5-10 minutes, you&#39;ll need Xcode
9.3. Then we can move on to starting our components repo.&lt;/p&gt;

&lt;a name=&quot;GitDawg.JS&quot;&gt;&lt;/a&gt;
&lt;h2&gt;GitDawg JS&lt;/h2&gt;

&lt;p&gt;When you&#39;re done with GitHawk, go back a folder so that you&#39;re ready to create the GitDawg repo: &lt;code&gt;$ cd ..&lt;/code&gt;.&lt;/p&gt;

&lt;a name=&quot;Pre-requisites&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Pre-requisites&lt;/h3&gt;

&lt;p&gt;We need CocoaPods: &lt;code&gt;$ gem install cocoapods&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We&#39;re going to need node, and a dependency manager. If you run &lt;code&gt;$ brew install yarn&lt;/code&gt; you will get both.&lt;/p&gt;

&lt;p&gt;I&#39;m running on node &lt;code&gt;8.9.x&lt;/code&gt; and yarn &lt;code&gt;1.5.x&lt;/code&gt;. Honestly, it shouldn&#39;t matter if you&#39;re on node 8, or 9. Yarn is
basically CocoaPods for node projects. If you&#39;re wondering what the differences are between &lt;a href=&quot;https://github.com/yarnpkg/yarn/&quot;&gt;yarn&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt;,
then TLDR: there used to be some, but now there&#39;s few. I stick with yarn because I prefer how the CLI works, and I
can easily read the lockfile it generates.&lt;/p&gt;

&lt;p&gt;We need the React Native CLI, so let&#39;s install it globally: &lt;code&gt;$ yarn global add react-native-cli&lt;/code&gt;.&lt;/p&gt;

&lt;a name=&quot;Starting.with.the.Pod&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Starting with the Pod&lt;/h3&gt;

&lt;p&gt;We&#39;re going to let CocoaPods create the initial folder for our project. Let&#39;s set up your Pod:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pod lib create GitDawg
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Cloning &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;https://github.com/CocoaPods/pod-template.git&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt; into &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;GitDawg&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Configuring GitDawg template.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;------------------------------
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;To get you started we need to ask a few questions, this should only take a minute.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;If this is your first &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;we recommend running through with the guide:
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; - http://guides.cocoapods.org/making/using-pod-lib-create.html
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; hold cmd and click links to open in a browser. &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;What platform &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; you want to use?? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; iOS / macOS &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &amp;gt; iOS
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;What language &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; you want to use?? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; Swift / ObjC &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &amp;gt; ObjC
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Would you like to include a demo application with your library? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; Yes / No &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &amp;gt; Yes
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Which testing frameworks will you use? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; Specta / Kiwi / None &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &amp;gt; None
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Would you like to &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; view based testing? &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; Yes / No &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &amp;gt; No
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;What is your class prefix?
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; &amp;gt; GD
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;I&#39;d recommend using only Objective-C at this point, for simplicities sake. Swift is a great language, but I want
tooling simplicity. Swift and React Native is [docs] though. We&#39;re also not going to write enough native code to
warrant the setup for testing. Plus, if we skip native testing then we can run CI on linux - which is basically
instant in comparison.&lt;/p&gt;

&lt;p&gt;This has made a new library. Let&#39;s go into our project&#39;s root with &lt;code&gt;$ cd GitDawg&lt;/code&gt;. There shouldn&#39;t be too much in
here:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Example         GitDawg         GitDawg.podspec LICENSE         README.md         _Pods.xcodeproj
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Because the core competency of the repo is the JavaScript, we&#39;re going to rename the &quot;GitDawg&quot; folder in the root to
be about the CocoaPod instead of owning the name of the project. Run &lt;code&gt;$ mv GitDawg Pod&lt;/code&gt; to do that.&lt;/p&gt;

&lt;p&gt;We want to create our React Native project. I&#39;m hard-coding my versions in these commands to try ensure this post
lasts some time, but you never know what amazing changes the future brings. If things are broken, leave a comment at
the bottom of this post.&lt;/p&gt;

&lt;p&gt;Let’s create a GitDawg React Native project, and then rename the folder to src:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c&quot;&gt;# Use the RN CLI to create a new RN app in the folder GitDawg&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;react-native init GitDawg --version react-native@0.54.4
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c&quot;&gt;# Rename the folder to src&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv GitDawg src
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c&quot;&gt;# Remove _Pods.xcodeproj as it&amp;#39;s relevant for our pod&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm -rf _Pods.xcodeproj
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We don&#39;t want all our project files living in a sub-folder though, so let&#39;s move a few of them back to the repo&#39;s
root, then remove some unused files.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c&quot;&gt;# Copy the package metadata, deps, lockfile and dotfiles to root&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv src/package.json src/node_modules src/yarn.lock src/.* .
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c&quot;&gt;# Remove the ios and android scaffolds as we have the CP one&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rm -rf src/ios src/android
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Which should make your app&#39;s folder look something like this:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Example         GitDawg.podspec LICENSE         README.md       Pods        node_modules    package.json    src             yarn.lock
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls src/
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;App.js    __tests__ app.json  index.js
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;To ensure everything is still hooked up, let&#39;s make sure that all of your tests are working in the new repo.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yarn &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;yarn run v1.5.1
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; PASS  src/__tests__/App.js
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  ✓ renders correctly &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;176ms&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Test Suites: &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; passed, &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; total
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Tests:       &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; passed, &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; total
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Snapshots:   &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; total
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Time:        1.392s
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;Ran all &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;suites.
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;✨  Done in 2.32s.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We&#39;re now going to be done with our JavaScript side, basically is our React Native &quot;hello world&quot;. It&#39;s a React
Native project that exposes a single component which says &lt;code&gt;&quot;Welcome to React Native!&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;However, it&#39;s going to take a bit of work before we can see it in action.&lt;/p&gt;

&lt;a name=&quot;Deployment&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Deployment&lt;/h3&gt;

&lt;p&gt;We&#39;re going to want to have this exposed to our native libraries, so we&#39;re going to ship the bundled JavaScript as
our library&#39;s source code. We do this via the React Native CLI, and it&#39;s going to place the file inside our Pod
folder from earlier.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;react-native bundle --entry-file src/index.js --bundle-output Pod/Assets/GitDawg.js --assets-dest Pod/Assets
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;It looks like this, when you run it via the sim:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/making_cp_pod/success.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;


&lt;a name=&quot;GitDawg.Pod&quot;&gt;&lt;/a&gt;
&lt;h2&gt;GitDawg Pod&lt;/h2&gt;

&lt;p&gt;With that done, we can start looking at the native side of our codebase. We let &lt;code&gt;pod lib create&lt;/code&gt; set up an Example
app for us to work with in the repo, which consumes a Podspec in the root. So we&#39;re going to take a look at the
Podspec, and update it.&lt;/p&gt;

&lt;p&gt;Our goal with the Example app is to set up an app exclusively for developing components in. In Artsy&#39;s case, this
app handles auth to the Artsy API and has a series of jump-off points for developing a component.&lt;/p&gt;

&lt;p&gt;To get started we need to modify the CocoaPod this repo represents:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Update our Podspec to handle React Native as a dependency, and our assets&lt;/li&gt;
&lt;li&gt;Add support for native compilation via CocoaPods with &lt;a href=&quot;https://github.com/orta/cocoapods-fix-react-native#readme&quot;&gt;cocoapods-fix-react-native&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Create a single &lt;code&gt;UIViewController&lt;/code&gt; subclass for the Welcome Screen using the bundled React Native JS&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We want to have our Podspec re-use the metadata from React Native to set up GitDawg&#39;s dependencies. So replace
&lt;code&gt;GitDawg.podspec&lt;/code&gt; with this:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;37&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;38&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;39&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;40&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;41&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;42&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;43&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;44&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;45&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;46&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;47&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;48&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;# Returns the version number for a package.json file&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;pkg_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir_from_root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__dir__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dir_from_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;package.json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;# Let the main package.json decide the version number for the pod&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;gitdawg_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pkg_version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;# Use the same RN version that the JS tools use&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pkg_version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;node_modules/react-native&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;no&quot;&gt;Pod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;GitDawg&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gitdawg_version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Components for GitHawk.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Components for GitHawk.&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;homepage&lt;/span&gt;         &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://github.com/orta/GitDawg&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;license&lt;/span&gt;          &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;MIT&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;LICENSE&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;author&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;orta&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;orta.therox@gmail.com&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;           &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;git&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://github.com/orta/GitDawg.git&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_s&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source_files&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Pod/Classes/**/*.{h,m}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Pod/Assets/{GitDawg.js,assets}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;8.0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# React is split into a set of subspecs, these are the essentials&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;React/Core&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;React/CxxBridge&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;React/RCTAnimation&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;React/RCTImage&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;React/RCTLinkingIOS&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;React/RCTNetwork&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;React/RCTText&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# React&amp;#39;s dependencies&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;yoga&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;react_native_version&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.React&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;podspecs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;node_modules/react-native/third-party-podspecs/DoubleConversion.podspec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;node_modules/react-native/third-party-podspecs/Folly.podspec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;node_modules/react-native/third-party-podspecs/glog.podspec&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;podspecs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;podspec_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Pod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Specification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_file&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;podspec_path&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dependency&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;This Podspec is probably more complex then you&#39;re used to, but it means less config. To validate the Podspec, use
&lt;code&gt;$ pod ipc spec GitDawg.podspec&lt;/code&gt; and read the JSON it outputs. With the Podspec set up, it&#39;s time to set up the
example project&#39;s &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Podfile&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We&#39;ll start with applying the &lt;a href=&quot;https://github.com/orta/cocoapods-fix-react-native#readme&quot;&gt;React Native hot-fix plugin&lt;/a&gt;, sometimes a version of React Native is released
that doesn&#39;t support Swift frameworks (as Facebook doesn&#39;t use Swift) and so you have to apply some patches to the
code. I made a CocoaPods Plugin that handles the hot-fixes for you.&lt;/p&gt;

&lt;p&gt;Start by making a &lt;code&gt;Gemfile&lt;/code&gt; in the &lt;code&gt;Example&lt;/code&gt; folder: &lt;code&gt;touch Example/Gemfile&lt;/code&gt;&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;https://rubygems.org&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cocoapods&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cocoapods-fix-react-native&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then run &lt;code&gt;$ bundle install&lt;/code&gt; in the &lt;code&gt;Example&lt;/code&gt; folder, which will set up the ruby dependencies of &lt;code&gt;cocoapods&lt;/code&gt; and
&lt;code&gt;cocoapods-fix-react-native&lt;/code&gt; for your app. This makes it possible to reference &lt;code&gt;&quot;cocoapods-fix-react-native&quot;&lt;/code&gt; in
your &lt;code&gt;Podfile&lt;/code&gt; next.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Example
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle install
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We want to take the current &lt;code&gt;Podfile&lt;/code&gt; and make sure that every React Native dependency comes from the folder
&lt;code&gt;node_modules/react-native&lt;/code&gt;. We can do this using the &lt;code&gt;:path&lt;/code&gt; operator to redeclare where you can find each Pod.&lt;/p&gt;

&lt;p&gt;Note: we also &lt;em&gt;extend&lt;/em&gt; the amount of subspecs for &lt;code&gt;&#39;React&#39;&lt;/code&gt; in this Podfile via &lt;code&gt;subspecs: [&#39;DevSupport&#39;]&lt;/code&gt; - this
subspec is what provide the hot code reloading and other developer tools. You&#39;ll want this, in here, it will mean
that the example app can be used as a dev environment, and your main app will only get a production environment.&lt;/p&gt;

&lt;p&gt;So edit &lt;code&gt;Example/Podfile&lt;/code&gt; to look like this:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:ios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;9.0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;node_modules_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;../node_modules&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;react_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node_modules_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;react-native&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;yoga_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;react_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;ReactCommon/yoga&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;folly_spec_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;react_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;third-party-podspecs/Folly.podspec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;glog_spec_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;react_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;third-party-podspecs/glog.podspec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;double_conversion_spec_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;react_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;third-party-podspecs/DoubleConversion.podspec&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;cocoapods-fix-react-native&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;GitDawg_Example&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;GitDawg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;../&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# We want extra developer support in React inside this app&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;React&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;react_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;subspecs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;DevSupport&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;c1&quot;&gt;# We&amp;#39;re letting CP know where it can find these Podspecs&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;yoga&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yoga_path&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Folly&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;podspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;folly_spec_path&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;DoubleConversion&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;podspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double_conversion_spec_path&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;glog&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;podspec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;glog_spec_path&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Run the following to set up the React Native dependencies for your project.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We need some native code to represent our Welcome component from the React Native template. Create two new files in
&lt;code&gt;Pod/Classes&lt;/code&gt;, then re-create the CocoaPods project for it by &lt;code&gt;pod install&lt;/code&gt;ing again.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch ../Pod/Classes/GDWelcomeViewController.h ../Pod/Classes/GDWelcomeViewController.m
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;pod install
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;open GitDawg.xcworkspace
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We&#39;re going to make a pretty vanilla &lt;code&gt;UIViewController&lt;/code&gt;, so declare it exists in the interface and then use an
&lt;code&gt;RCTRootView&lt;/code&gt; as it&#39;s &lt;code&gt;self.view&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;UIKit/UIKit.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GDWelcomeViewController&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;UIViewController&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;GDWelcomeViewController&lt;/code&gt; is going to handle the React bridging, because that is the simplest option for our
Hello World app. We&#39;ll be going back to improve this later.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;quot;GDWelcomeViewController.h&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;React/RCTRootView.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;React/RCTBridgeDelegate.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;React/RCTBridge.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// Let this View Controller handle getting the URL for the JS&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GDWelcomeViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCTBridgeDelegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GDWelcomeViewController&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// Set self.view on the VC to be an RCTRootView&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loadView&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;RCTBridge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bridge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCTBridge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initWithDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;launchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCTRootView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initWithBridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bridge&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                                         &lt;span class=&quot;nl&quot;&gt;moduleName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;GitDawg&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                                  &lt;span class=&quot;nl&quot;&gt;initialProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// Use our bundled JS for now&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sourceURLForBridge:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCTBridge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;bridge&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;bp&quot;&gt;NSBundle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitdawgBundle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSBundle&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;bundleForClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GDWelcomeViewController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gitdawgBundle&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;URLForResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;GitDawg&amp;quot;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;withExtension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;js&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;As the &lt;code&gt;pod lib create&lt;/code&gt; template uses storyboards, you will need to open up the example app&#39;s storyboard and
&lt;a href=&quot;/images/making_cp_pod/settings_welcome.png&quot;&gt;change the initial view controller&lt;/a&gt; to be a &lt;code&gt;GDWelcomeViewController&lt;/code&gt;.
If you see a &lt;a href=&quot;/images/making_cp_pod/not_working.png&quot;&gt;white screen&lt;/a&gt; on the app launches then this hasn&#39;t been done.
Run the app in the simulator, and you should get this screen:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/making_cp_pod/success.png&quot; width=&quot;50%&quot; /&gt;&lt;/center&gt;


&lt;p&gt;This is the default screen from the React Native template, and it&#39;s proof that everything has worked for our dev
app.&lt;/p&gt;

&lt;p&gt;Let&#39;s take a second to re-cover what has happened to get to this point.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;We used the &lt;code&gt;pod lib create&lt;/code&gt; template to make a library repo&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We used &lt;code&gt;react-native init&lt;/code&gt; to make a React Native environment, which has the settings in the root and the
source code inside &lt;code&gt;src&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We&#39;ve bundled the React Native code into our CocoaPod&#39;s asset folder&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We set up the Podspec for GitDawg, and then the Podfile for the example project to consume it&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We added &lt;a href=&quot;https://github.com/orta/cocoapods-fix-react-native#readme&quot;&gt;cocoapods-fix-react-native&lt;/a&gt; to hot-fix the native files&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We added a UIViewController for the default screen from &lt;code&gt;react-native init&lt;/code&gt; to our CocoaPod, and ran
&lt;code&gt;bundle exec pod install&lt;/code&gt; to update the example project&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We changed the storyboard reference to point to the UIViewController from our Pod, and ran the simulator to see
our welcome screen&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This is a full run-through of how your Pod would look when integrated into your main app&#39;s codebase. At this point
you have a unique, isolated app which is going to be your development environment. In our case this app is a menu of
different root screens and admin flags.&lt;/p&gt;

&lt;p&gt;—&lt;/p&gt;

&lt;p&gt;OK, let’s go take this and migrate it into GitHawk. This is our end-goal:&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/making_cp_pod/githawk.gif&quot; width=&quot;75%&quot; /&gt;&lt;/center&gt;


&lt;p&gt;Our setup is going to be different here because we can&#39;t rely on React Native coming from the file-system, as we
want to make sure our app has no hint of JS tooling. So we will use CocoaPods to handle downloading and setting up
our versions of the React Native libraries. As of 0.54.x, that is React and Yoga.&lt;/p&gt;

&lt;p&gt;We want to have a local copy of the JSON version of Podspecs for each of these. They can be generated from the
Podspecs using &lt;code&gt;bundle exec pod ipc spec [file.podspec]&lt;/code&gt;. Let&#39;s generate one for React:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;GitDawg/node_modules/react-native/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; pod ipc spec React.podspec
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;It will output a bunch of JSON to your terminal. This is perfect. Let&#39;s move that text to a file on your desktop.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pod ipc spec React.podspec &amp;gt; ~/Desktop/React.podspec.json
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;




&lt;!--

You&#39;ll see no output if everything went fine. Before you grab that podspec, let&#39;s get the one for yoga too.

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;ReactCommon/yoga/&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; pod ipc spec yoga.podspec &amp;gt; ~/Desktop/yoga.podspec.json
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;

--&gt;


&lt;p&gt;For the yoga podspec, you should just grab our version, it&#39;s not worth me explaining all the details why, other than
the PR I made to fix a bug isn&#39;t shipped in 0.54 so run:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;curl https://raw.githubusercontent.com/artsy/emission/v1.5.0/externals/yoga/yoga.podspec.json &amp;gt; ~/Desktop/yoga.podspec.json
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;You should now have two JSON files in your Desktop. Grab them, move them into the &lt;code&gt;Local Pods&lt;/code&gt; folder inside
GitHawk. It should already have a few Podspecs.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../../../ &lt;span class=&quot;c&quot;&gt;# Or however it takes to get back to the project root&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c&quot;&gt;# Move any podspec.json into the Local Pods folder&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv ~/Desktop/*.podspec.json &lt;span class=&quot;s2&quot;&gt;&amp;quot;Local Pods&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Modify their &lt;code&gt;Gemfile&lt;/code&gt; to include &lt;a href=&quot;https://github.com/orta/cocoapods-fix-react-native#readme&quot;&gt;cocoapods-fix-react-native&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;diff&#39;&gt;&lt;span class=&#39;line&#39;&gt;source &amp;#39;https://rubygems.org&amp;#39;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;gem &amp;#39;cocoapods&amp;#39;, &amp;#39;~&amp;gt; 1.4.0&amp;#39;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+ gem &amp;#39;cocoapods-fix-react-native&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then run &lt;code&gt;bundle install&lt;/code&gt;. Next we need to add GitDawg, and our custom Podspecs to the Podfile:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;diff&#39;&gt;&lt;span class=&#39;line&#39;&gt;source &amp;#39;https://github.com/CocoaPods/Specs.git&amp;#39;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;# Local Pods w/ custom changes
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;pod &amp;#39;SwipeCellKit&amp;#39;, :path =&amp;gt; &amp;#39;Local Pods/SwipeCellKit&amp;#39;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;pod &amp;#39;GitHubAPI&amp;#39;, :path =&amp;gt; &amp;#39;Local Pods/GitHubAPI&amp;#39;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;pod &amp;#39;GitHubSession&amp;#39;, :path =&amp;gt; &amp;#39;Local Pods/GitHubSession&amp;#39;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+ # React Native Support&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+ plugin &amp;#39;cocoapods-fix-react-native&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+ pod &amp;#39;GitDawg&amp;#39;, :path =&amp;gt; &amp;#39;../GitDawg&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+ pod &amp;#39;React&amp;#39;, :podspec =&amp;gt; &amp;#39;Local Pods/React.podspec.json&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+ pod &amp;#39;yoga&amp;#39;,  :podspec =&amp;gt; &amp;#39;Local Pods/yoga.podspec.json&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;target &amp;#39;Freetime&amp;#39; do
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then run &lt;code&gt;$ bundle exec pod install&lt;/code&gt;. That should grab React Native for you. Unlike inside GitDawg, CocoaPods will
download the source code from the internet. &lt;code&gt;:podspec&lt;/code&gt; only tells CocoaPods where to find the Podspec, but it will
still download code externally.&lt;/p&gt;

&lt;p&gt;Open up the Xcode Workspace - &lt;code&gt;open Freetime.xcworkspace&lt;/code&gt;, and we&#39;re gonna make the code changes - it&#39;s all in one
file. Open the file &lt;code&gt;RootNavigationManager.swift&lt;/code&gt; (it&#39;s in &lt;code&gt;Classes/Systems&lt;/code&gt;) and add a new &lt;code&gt;import&lt;/code&gt; at the top for
&lt;code&gt;GitDawg&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;diff&#39;&gt;&lt;span class=&#39;line&#39;&gt;import UIKit
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;import GitHubAPI
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;import GitHubSession
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+ import GitDawg&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then add our new view controller by replacing the bookmarks view controller on line 78.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;diff&#39;&gt;&lt;span class=&#39;line&#39;&gt;    tabBarController?.viewControllers = [
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        newNotificationsRootViewController(client: client),
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        newSearchRootViewController(client: client),
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+            GDWelcomeViewController(),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-            newBookmarksRootViewController(client: client),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        settingsRootViewController ?? UIViewController() // simply satisfying compiler
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    ]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;That should get you to the same point as we were in the dev app. Now when you run the app, log in and hit the place
where the bookmarks icon used to live. Tada.&lt;/p&gt;

&lt;p&gt;So what did we do? First, we added GitDawg, React and Yoga as dependencies in GitHawk&#39;s Podfile to get them
installed. Then we switched to using GitDawg&#39;s native view controller in 2 lines of code. No JavaScript in GitHawk,
little faffing overall.&lt;/p&gt;

&lt;p&gt;This is how all our view controllers are exposed and used in production.&lt;/p&gt;

&lt;a name=&quot;What.now.&quot;&gt;&lt;/a&gt;
&lt;h2&gt;What now?&lt;/h2&gt;

&lt;p&gt;We&#39;ve now got a successful deploy of our React Native Pod into an external app. However, we need to make some
changes in GitDawg now to start making it possible to develop efficiently.&lt;/p&gt;

&lt;p&gt;We will need to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Make a singleton to handle setting up React Native between all potential UIViewControllers&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Use the React Native Packager to get runtime editing support&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Move your terminal back to the GitDawg folder. We&#39;re going to make a class that represents our library, GitDawg&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;sh&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch Pod/Classes/GitDawg.h Pod/Classes/GitDawg.m
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then we need to re-run &lt;code&gt;$ bundle exec pod install&lt;/code&gt; in the &lt;code&gt;Example&lt;/code&gt; folder to get it in Xcode. Open up the Xcode
workspace for GitDawg and let&#39;s fill in these files. These files are based on &lt;a href=&quot;https://github.com/artsy/emission/blob/master/Pod/Classes/Core/AREmission.h&quot;&gt;AREmission.h&lt;/a&gt; and
&lt;a href=&quot;https://github.com/artsy/emission/blob/master/Pod/Classes/Core/AREmission.m&quot;&gt;AREmission.m&lt;/a&gt;. For us, in a production app, &lt;code&gt;AREmission&lt;/code&gt; has a few key responsibilities:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Pass through the non-optional environment variables to expose in JS&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create and retain the React Native bridge&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Set up the native modules so that we React Native can communicate with the host app&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;For this tutorial we don&#39;t need all of these responsibilities, but we will handle the second one.&lt;/p&gt;

&lt;p&gt;For the header file, &lt;code&gt;GitDawg.h&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;lt;React/RCTBridge.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;NS_ASSUME_NONNULL_BEGIN&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// The RN library API&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GitDawg&lt;/span&gt; : &lt;span class=&quot;bp&quot;&gt;NSObject&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// The way in which we communicate with React Native&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;strong&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RCTBridge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// The single instance of a GitDawg&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;instancetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sharedInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setSharedInstance:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GitDawg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;/// Pass in nil for a packagerURL to indicate this is in release mode&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;instancetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initWithPackagerURL:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;packagerURL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NS_DESIGNATED_INITIALIZER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;instancetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NS_UNAVAILABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;n&quot;&gt;NS_ASSUME_NONNULL_END&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;And for the implementation file &lt;code&gt;GitDawg.m&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;26&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;27&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;28&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;29&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;30&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;31&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;32&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;33&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;34&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;35&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;36&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;37&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;38&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;39&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;40&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;41&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;42&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;objc&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;cp&quot;&gt;#import &amp;quot;GitDawg.h&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GitDawg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCTBridgeDelegate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packagerURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GitDawg&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GitDawg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sharedInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setSharedInstance:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GitDawg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;_sharedInstance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;instancetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sharedInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;NSParameterAssert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_sharedInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_sharedInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;instancetype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;initWithPackagerURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packagerURL&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;_packagerURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;packagerURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;n&quot;&gt;_bridge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCTBridge&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;initWithDelegate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;launchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;sourceURLForBridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RCTBridge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bridge&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;packagerURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releaseBundleURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;releaseBundleURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;NSBundle&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;bundleForClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;URLForResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;GitDawg&amp;quot;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;withExtension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;js&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;Then change your &lt;code&gt;GDWelcomeViewController.m&lt;/code&gt; to use the shared &lt;code&gt;GitDawg&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;diff&#39;&gt;&lt;span class=&#39;line&#39;&gt; #import &amp;quot;GDWelcomeViewController.h&amp;quot;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+#import &amp;quot;GitDawg.h&amp;quot;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; #import &amp;lt;React/RCTRootView.h&amp;gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-#import &amp;lt;React/RCTBridgeDelegate.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-#import &amp;lt;React/RCTBridge.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; - (void)loadView
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-    RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self launchOptions:@{}];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+    RCTBridge *bridge = [GitDawg sharedInstance].bridge;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;     self.view = [[RCTRootView alloc] initWithBridge:bridge
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                                              moduleName:@&amp;quot;GitDawg&amp;quot;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;                                     initialProperties:@{}];
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; }
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-// Just use our packaged JS for now&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-- (NSURL *)sourceURLForBridge:(RCTBridge *)bridge&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-    NSBundle *emissionBundle = [NSBundle bundleForClass:GDWelcomeViewController.class];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-    return [emissionBundle URLForResource:@&amp;quot;GitDawg&amp;quot; withExtension:@&amp;quot;js&amp;quot;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; @end
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We use the UIAppDelegate callback to set up our React Native bridge (you want this ready as fast as possible
normally) so edit &lt;code&gt;Example/GitDawg/GDAppDelegate.m&lt;/code&gt;&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;diff&#39;&gt;&lt;span class=&#39;line&#39;&gt; #import &amp;quot;GDAppDelegate.h&amp;quot;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+#import &amp;lt;GitDawg/GitDawg.h&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; @implementation GDAppDelegate
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; {
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gd&quot;&gt;-    // Override point for customization after application launch.&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+    NSURL *packagerURL = [NSURL URLWithString:@&amp;quot;http://localhost:8081/src/index.bundle?platform=ios&amp;quot;];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+    GitDawg *dawg = [[GitDawg alloc] initWithPackagerURL:packagerURL];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+    [GitDawg setSharedInstance:dawg];&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;gi&quot;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;     return YES;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt; }
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;These changes give you the ability to switch between a dev mode and a release mode. Consider that React Native just
runs your JavaScript, the source of that could be anything, including from a local dev server. Well, almost.&lt;/p&gt;

&lt;p&gt;Because of Apple&#39;s HTTP security, you cannot connect to localhost in an app by default. To fix this, open up
&lt;code&gt;GitDawg-info.plist&lt;/code&gt; and right-click to add a new row. Paste in &lt;code&gt;NSAppTransportSecurity&lt;/code&gt; as the name, and Xcode will
switch it to &quot;App Transport Security Settings&quot;. Hit the &lt;code&gt;+&lt;/code&gt; and add &quot;Allow arbitrary loads&quot; then set it to true.&lt;/p&gt;

&lt;p&gt;From here: run the GitDawg app and you should see a red screen. This will be telling you to start the React Native
Packager. Let&#39;s do that. From the root of the GitDwag repo run &lt;code&gt;$ yarn start&lt;/code&gt;. This will start up a server. Once it
says &quot;Metro Bundler Ready.&quot; you can go back into your simulator for GitDawg and hit the reload button at the bottom.&lt;/p&gt;

&lt;p&gt;That&#39;s it.&lt;/p&gt;

&lt;p&gt;We&#39;re done.&lt;/p&gt;

&lt;p&gt;So, there&#39;s obviously a lot more to learn here. You&#39;ve successfully set up a Pod that you can deploy to an app. To
make a real version you&#39;d need to do a bit more process like creating a repo, and making tags.&lt;/p&gt;

&lt;p&gt;We use our root view controller in Emission to trigger loading any of our view controllers, in different states. We
also mix that with some admin options, the ability to run someone&#39;s PRs and &lt;a href=&quot;https://storybook.js.org&quot;&gt;storybooks&lt;/a&gt;.&lt;/p&gt;

&lt;center&gt;&lt;img src=&quot;/images/making_cp_pod/emission.png&quot; width=&quot;100%&quot; /&gt;&lt;/center&gt;


&lt;p&gt;So good luck! Something like this probably easily scripted, but there&#39;s a lot of value in understanding how every
piece comes together. So let me know if you make something cool - we&#39;ve been using this structure for 2 years now
and I think it&#39;s the right way to integrate React Native into an existing complex app. It keeps your JS tooling in a
completely different repo from your iOS tooling.&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/04/17/making-a-components-pod/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/04/17/making-a-components-pod/</guid>
        
        
        <category>emission</category>
        
        <category>javascript</category>
        
        <category>react</category>
        
        <category>reaction</category>
        
        <category>reactnative</category>
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Augmenting Artworks: AR at Artsy</title>
        <description>&lt;p&gt;In 2017, Apple released ARKit to universal acclaim. It&#39;s a solid foundation for application developers to build
Augmented Reality (AR) experiences without learning a whole new skillset in computer vision. Like a lot of Apple&#39;s
technology, it&#39;s a clever blend of existing projects: &lt;a href=&quot;https://developer.apple.com/documentation/scenekit&quot;&gt;SceneKit&lt;/a&gt;, &lt;a href=&quot;https://developer.apple.com/documentation/coremotion&quot;&gt;CoreMotion&lt;/a&gt;, &lt;a href=&quot;https://developer.apple.com/documentation/coreml&quot;&gt;CoreML&lt;/a&gt; and some very
clever camera work. From the developer&#39;s perspective, ARKit has an API which fits perfectly with the rest of Apple&#39;s
APIs. You spend most of your time working with a few delegate functions and you&#39;re good to go.&lt;/p&gt;

&lt;p&gt;For the last 2 months, I&#39;ve been working with ARKit on a replacement for our &lt;a href=&quot;https://ortastuff.s3.amazonaws.com/vids/eigen-vir.mp4&quot;&gt;View in Room&lt;/a&gt; feature on modern
iOS devices to support a &quot;View in &lt;em&gt;My&lt;/em&gt; Room&quot;. I&#39;m going to try cover how we approached the project, the abstractions we
created and give you a run through of how it works.&lt;/p&gt;

&lt;p&gt;We believe that our implementation is a solid improvement over similar features in other apps that allow users to place
artworks on walls, and we&#39;re making &lt;a href=&quot;https://github.com/artsy/eigen/tree/f897b3438bd07470bd88a790fc6d6a524f5756cb/Artsy/View_Controllers/ARVIR&quot;&gt;the source code available&lt;/a&gt; free and open-source under the MIT
license.&lt;/p&gt;

&lt;!-- more --&gt;




&lt;div class=&quot;mobile-only&quot;&gt;
&lt;p&gt;
  &lt;strong&gt;Before you get started&lt;/strong&gt;, it looks like you&#39;re using a really small screen, 
  this post is built with larger screens in mind. You will be missing interactable elements which you &lt;strong&gt;really should see&lt;/strong&gt;.
&lt;/p&gt;
&lt;/div&gt;


&lt;a name=&quot;How.does.ARKit.work.&quot;&gt;&lt;/a&gt;
&lt;h2&gt;How does ARKit work?&lt;/h2&gt;

&lt;p&gt;You start up ARKit by creating an &lt;a href=&quot;https://developer.apple.com/documentation/arkit/arsession&quot;&gt;AR Session&lt;/a&gt; and passing it to an view on your screen. This will trigger
ARKit to open your camera looking through the phone&#39;s camera for reference points to determine where the phone is in the
world. Your app will use the reference points to attach SceneKit objects to places through the AR viewport. Let&#39;s look
at this as a diagram:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;diagram&quot;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;What-is-AR&quot;&gt;
    &lt;li&gt;You have a phone in a room&lt;/li&gt;
    &lt;li&gt;ARSession starts&lt;/li&gt;
    &lt;li&gt;It detects some feature points&lt;/li&gt;
    &lt;li&gt;You can then attach objects to those points&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;What is AR&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;radialGradient cx=&quot;73.2212612%&quot; cy=&quot;27.1693638%&quot; fx=&quot;73.2212612%&quot; fy=&quot;27.1693638%&quot; r=&quot;207.875515%&quot; id=&quot;radialGradient-1&quot;&gt;
            &lt;stop stop-color=&quot;#FFFFFF&quot; offset=&quot;0%&quot;&gt;&lt;/stop&gt;
            &lt;stop stop-color=&quot;#000000&quot; offset=&quot;100%&quot;&gt;&lt;/stop&gt;
        &lt;/radialGradient&gt;
        &lt;path d=&quot;M5.24032834,2.21494006 L10.0175781,0.45921461 L10.0175781,0.45921461 C13.878629,-0.959791237 18.1589608,1.01987744 19.5779666,4.88092836 C19.8803845,5.7037938 20.0351562,6.57358786 20.0351562,7.45026573 L20.0351562,38.1425845 L20.0351562,38.1425845 C20.0351562,41.4875521 17.9540723,44.4794008 14.8180048,45.6429681 L10.0175781,47.4240584 L10.0175781,47.4240584 C6.16921751,48.8519059 1.89200567,46.8896924 0.464158083,43.0413318 C0.157173464,42.2139413 8.98985986e-15,41.3384898 8.8817842e-15,40.4559851 C5.28025569e-15,32.0110213 2.64012785e-15,23.5660575 0,15.1210938 C1.84503416e-15,13.3220232 3.69006831e-15,11.5229527 5.53510247e-15,9.72388222 L7.10542736e-15,9.72388222 C9.6736429e-15,6.36986699 2.09219005,3.37193766 5.24032834,2.21494006 Z&quot; id=&quot;path-2&quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M5.24032834,3.21494006 L10.0175781,1.45921461 L10.0175781,1.45921461 C13.878629,0.0402087634 18.1589608,2.01987744 19.5779666,5.88092836 C19.8803845,6.7037938 20.0351562,7.57358786 20.0351562,8.45026573 L20.0351562,39.1425845 L20.0351562,39.1425845 C20.0351562,42.4875521 17.9540723,45.4794008 14.8180048,46.6429681 L10.0175781,48.4240584 L10.0175781,48.4240584 C6.16921751,49.8519059 1.89200567,47.8896924 0.464158083,44.0413318 C0.157173464,43.2139413 8.98985986e-15,42.3384898 8.8817842e-15,41.4559851 C5.28025569e-15,33.0110213 2.64012785e-15,24.5660575 0,16.1210938 C1.84503416e-15,14.3220232 3.69006831e-15,12.5229527 5.53510247e-15,10.7238822 L7.10542736e-15,10.7238822 C9.6736429e-15,7.36986699 2.09219005,4.37193766 5.24032834,3.21494006 Z&quot; id=&quot;path-3&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;What-is-AR&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;0-4_balls&quot; transform=&quot;translate(101.000000, 253.000000)&quot; fill=&quot;url(#radialGradient-1)&quot;&gt;
                &lt;circle id=&quot;Oval&quot; cx=&quot;28&quot; cy=&quot;61&quot; r=&quot;28&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-Copy&quot; cx=&quot;75.5&quot; cy=&quot;18.5&quot; r=&quot;18.5&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_camera&quot; transform=&quot;translate(60.000000, 41.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;path d=&quot;M280.613281,208.308594 L228.488281,36.859375 L158.785156,0.5 L0.89453125,49.28125 L0.89453125,266.316406 L39.9960938,282.289063 C51.9153646,268.739583 60.2330729,263.415365 64.9492188,266.316406 C72.0234375,270.667969 79.0976562,285.667969 72.0234375,292.890625 C67.3072917,297.705729 75.7643229,303.733073 97.3945312,310.972656 L273.246094,253.71875 L280.613281,208.308594 Z&quot; id=&quot;Path-5&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-4_features&quot; transform=&quot;translate(108.000000, 211.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;45&quot; cy=&quot;99&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;65&quot; cy=&quot;61&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;83&quot; cy=&quot;69&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;14&quot; cy=&quot;85&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;25&quot; cy=&quot;81&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;131.5&quot; cy=&quot;94.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;135.5&quot; cy=&quot;79&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;29&quot; cy=&quot;97&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;97&quot; cy=&quot;60&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;105.5&quot; cy=&quot;78.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;65&quot; cy=&quot;117&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;113&quot; cy=&quot;3&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;101&quot; cy=&quot;23&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy&quot; cx=&quot;84&quot; cy=&quot;12&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;76&quot; cy=&quot;48&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;64&quot; cy=&quot;29&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;40&quot; cy=&quot;39&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-5&quot; cx=&quot;48&quot; cy=&quot;20&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;83&quot; cy=&quot;29&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;25&quot; cy=&quot;60&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;3&quot; cy=&quot;58&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;121&quot; cy=&quot;39&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;97&quot; cy=&quot;42&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;37&quot; cy=&quot;117&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_phone&quot; transform=&quot;translate(325.000000, 247.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#3A3A3A&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-2&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M5.41280781,2.68424895 C2.46142817,3.7689342 0.5,6.57949295 0.5,9.72388222 L0.5,40.4559851 C0.5,41.2791197 0.646599691,42.0956756 0.932932058,42.8674038 C2.26472184,46.4568677 6.2541862,48.2870742 9.84365009,46.9552844 L14.6440767,45.1741941 C17.58414,44.0833498 19.5351562,41.2784917 19.5351562,38.1425845 L19.5351562,7.45026573 C19.5351562,6.6324392 19.3907743,5.82103436 19.1086577,5.05340784 C17.7849097,1.45154906 13.7919164,-0.395224566 10.1900576,0.928523495 L5.41280781,2.68424895 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-3&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M5.41280781,3.68424895 C2.46142817,4.7689342 0.5,7.57949295 0.5,10.7238822 L0.5,41.4559851 C0.5,42.2791197 0.646599691,43.0956756 0.932932058,43.8674038 C2.26472184,47.4568677 6.2541862,49.2870742 9.84365009,47.9552844 L14.6440767,46.1741941 C17.58414,45.0833498 19.5351562,42.2784917 19.5351562,39.1425845 L19.5351562,8.45026573 C19.5351562,7.6324392 19.3907743,6.82103436 19.1086577,6.05340784 C17.7849097,2.45154906 13.7919164,0.604775434 10.1900576,1.92852349 L5.41280781,3.68424895 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_anchors&quot; transform=&quot;translate(146.000000, 86.000000)&quot;&gt;
                &lt;path d=&quot;M26.1171875,153.894531 L26.1171875,75&quot; id=&quot;Path-4&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path-6&quot; stroke=&quot;#000000&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; fill=&quot;#000000&quot; cx=&quot;26&quot; cy=&quot;153&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;With ARKit at release in iOS 11.0, if enough feature points are detected in a series horizontally, then ARKit will also
send you some information about the what it considers to be a horizontal plane.&lt;/p&gt;

&lt;p&gt;Planes are what most AR apps use on iOS, the apps react to discovering a flat horizontal surface and then allows putting
3d objects on to it. You would then interact with these object by doing a hit test for the closest plane or feature
point to handle user interactions.&lt;/p&gt;

&lt;a name=&quot;Quick.glossary&quot;&gt;&lt;/a&gt;
&lt;h3&gt;Quick glossary&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/arframe/2887449-rawfeaturepoints&quot;&gt;Feature Point&lt;/a&gt; - A physical point of reference created by ARKit. A feature point is found in a frame of the
camera&#39;s image. The point is converted into a 3D world coordinate space by image analysis that ARKit performs to track
the device&#39;s position, orientation, and movement. Taken together, these points roughly correlate to real-world objects
through the view of the camera.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/aranchor&quot;&gt;Anchor&lt;/a&gt; - An anchor is a developer tool for building on top of feature points. Anchors allow connections
between a real-world object and an augmented-reality object. Effectively, this provides the API to place objects in
&quot;the room.&quot;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/arplaneanchor&quot;&gt;Plane&lt;/a&gt; - An anchor to a rectangle in 3D space. A set of feature points detected in a continuous direction. You
can request for ARKit to find these for you, and common examples are tables, floors and walls.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;https://developer.apple.com/documentation/arkit/arskview/2875733-hittest&quot;&gt;Hit Test&lt;/a&gt; - Projects a line through the world from a location on the screen and oriented with the phone&#39;s world
position and angle. This gives you a list of objects that intersect the line.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;a name=&quot;AR.at.Artsy&quot;&gt;&lt;/a&gt;
&lt;h2&gt;AR at Artsy&lt;/h2&gt;

&lt;p&gt;We did some interesting work in the AR space already in 2017 with Microsoft, Studio Drift and the Armory Show using &lt;a href=&quot;http://fortune.com/2017/03/02/microsoft-hololens-art-show/&quot;&gt;the
Holo Lens&lt;/a&gt;. When ARKit came out, we explored whether we could reliably place an artwork on a wall, but came
to the conclusion that the technology was a bit too immature for us to build it reliably. The core problem was that
ARKit at release could only be used to find horizontal planes.&lt;/p&gt;

&lt;p&gt;Here&#39;s how our original approach worked:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;desktop-only&quot; style=&#39;display: flex; flex-flow:row; margin: 0px -60px;&#39;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;v1&quot;&gt;
    &lt;li&gt;Open up ARKit and let it discover the world&lt;/li&gt;
    &lt;li&gt;Detect the edge of a floor by asking a user to point at the floor near the wall&lt;/li&gt;
    &lt;li&gt;Find the edge furthest away&lt;/li&gt;
    &lt;li&gt;Attach a work to the floor closest to the wall&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;v1&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;path d=&quot;M15.5931447,21.0693125 L20.3703944,19.313587 L20.3703944,19.313587 C24.2314454,17.8945812 28.5117771,19.8742499 29.9307829,23.7353008 C30.2332008,24.5581662 30.3879726,25.4279603 30.3879726,26.3046382 L30.3879726,56.9969569 L30.3879726,56.9969569 C30.3879726,60.3419246 28.3068886,63.3337733 25.1708211,64.4973405 L20.3703944,66.2784308 L20.3703944,66.2784308 C16.5220338,67.7062784 12.244822,65.7440649 10.8169744,61.8957043 C10.5099898,61.0683138 10.3528163,60.1928622 10.3528163,59.3103575 C10.3528163,50.8653937 10.3528163,42.42043 10.3528163,33.9754662 C10.3528163,32.1763957 10.3528163,30.3773252 10.3528163,28.5782547 L10.3528163,28.5782547 C10.3528163,25.2242394 12.4450064,22.2263101 15.5931447,21.0693125 Z&quot; id=&quot;path-1&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;v1&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_camera&quot; transform=&quot;translate(60.000000, 235.000000)&quot;&gt;
                &lt;polygon id=&quot;Path-5&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot; points=&quot;228.488281 36.859375 158.785156 0.5 0.89453125 49.28125 0.89453125 76.3164063 29.2070312 95.1445313 131.007812 108.998047 220.933594 92.2890625&quot;&gt;&lt;/polygon&gt;
                &lt;polygon id=&quot;Path-2&quot; stroke=&quot;#E2D52A&quot; stroke-width=&quot;2&quot; fill-opacity=&quot;0.27100317&quot; fill=&quot;#E2D52A&quot; transform=&quot;translate(132.255859, 63.898437) scale(1, -1) translate(-132.255859, -63.898437) &quot; points=&quot;38.3632813 58.0195312 158.996094 100.660156 226.148438 74.03125 98.1503906 27.1367187&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_features&quot; transform=&quot;translate(89.000000, 260.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;66&quot; cy=&quot;66&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;86&quot; cy=&quot;28&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;104&quot; cy=&quot;36&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;35&quot; cy=&quot;52&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;46&quot; cy=&quot;48&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;152.5&quot; cy=&quot;61.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;156.5&quot; cy=&quot;46&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;50&quot; cy=&quot;64&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;27&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;126.5&quot; cy=&quot;45.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;107&quot; cy=&quot;69&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;83&quot; cy=&quot;49&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;97&quot; cy=&quot;15&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;71&quot; cy=&quot;24&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;65&quot; cy=&quot;32&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;130&quot; cy=&quot;3&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;46&quot; cy=&quot;27&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;16&quot; cy=&quot;43&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;142&quot; cy=&quot;6&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;9&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;4&quot; cy=&quot;53&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_phone&quot; transform=&quot;translate(257.431048, 288.284945) rotate(-37.000000) translate(-257.431048, -288.284945) translate(246.931048, 264.284945)&quot;&gt;&lt;/g&gt;
            &lt;g id=&quot;0-4_person&quot; transform=&quot;translate(238.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot; transform=&quot;translate(20.370394, 42.799490) rotate(-29.000000) translate(-20.370394, -42.799490) &quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-1&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M15.7656241,21.5386214 C12.8142445,22.6233066 10.8528163,25.4338654 10.8528163,28.5782547 L10.8528163,59.3103575 C10.8528163,60.1334921 10.999416,60.950048 11.2857484,61.7217762 C12.6175382,65.3112401 16.6070025,67.1414466 20.1964664,65.8096568 L24.996893,64.0285666 C27.9369564,62.9377223 29.8879726,60.1328641 29.8879726,56.9969569 L29.8879726,26.3046382 C29.8879726,25.4868116 29.7435906,24.6754068 29.4614741,23.9077803 C28.137726,20.3059215 24.1447327,18.4591479 20.5428739,19.7828959 L15.7656241,21.5386214 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M57.8662109,54.2951339 C57.2197037,47.2391468 56.4052506,43.8266412 55.4228516,44.0576172 C49.9941406,45.3339844 42.5444721,9.38688117 44.8359375,6.22265625 C48.6060532,1.01660156 83.0625,-7.31651228 81.84375,16.3310547 C81.03125,32.0960993 77.9322917,44.7507924 72.546875,54.2951339 C80.7701069,49.2018936 86.1395731,46.6552734 88.6552734,46.6552734 C92.428824,46.6552734 95.2041008,52.8013269 94.8476562,55.4792972 C94.6100265,57.2646107 93.5517583,70.7331002 91.6728516,95.8847656 C83.9235026,105.734375 75.6959635,110.609701 66.9902344,110.510742 C53.9316406,110.362305 41.5716684,104.533615 39.8232422,101.063477 C38.6576247,98.7500512 36.6400466,83.5553248 33.7705078,55.4792972 L36.8642578,46.6552734 L57.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_anchors&quot; transform=&quot;translate(151.000000, 124.000000)&quot;&gt;
                &lt;path d=&quot;M26.1171875,153.894531 L26.1171875,75&quot; id=&quot;Path-4&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;&lt;/path&gt;
                &lt;path d=&quot;M26.1171875,153.894531 L89,153.894531&quot; id=&quot;Path-4&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path-6&quot; stroke=&quot;#000000&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; fill=&quot;#000000&quot; cx=&quot;26&quot; cy=&quot;153&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-4_line&quot; transform=&quot;translate(98.000000, 263.000000)&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;
                &lt;path d=&quot;M0,39.7773437 L123,0&quot; id=&quot;Path-4&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;This could work, but it was hard to explain for a first time user. A user spent most of their time with their phone
pointed at the floor, then we had no way to know if feature points had been detected all the way to the floor edges.&lt;/p&gt;

&lt;p&gt;From there, we experimented with using the location of the iPhone as a point of reference:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;desktop-only&quot; style=&#39;display: flex; flex-flow:row; margin: 0px -60px;&#39;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;v2&quot;&gt;
  &lt;li&gt;Open up ARKit and let it discover the world&lt;/li&gt;
  &lt;li&gt;Ask a user to put their phone against the wall&lt;/li&gt;
  &lt;li&gt;When the camera is fully osbscured, use the last known point as an anchor&lt;/li&gt;
  &lt;li&gt;When the user pulls back and reconnects, place the work&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;v2&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;path d=&quot;M9.24616479,13.5906941 L14.0234146,11.8349687 L14.0234146,11.8349687 C17.8844655,10.4159628 22.1647972,12.3956315 23.5838031,16.2566824 C23.886221,17.0795478 24.0409927,17.9493419 24.0409927,18.8260198 L24.0409927,49.5183386 L24.0409927,49.5183386 C24.0409927,52.8633062 21.9599088,55.8551549 18.8238412,57.0187222 L14.0234146,58.7998124 L14.0234146,58.7998124 C10.175054,60.22766 5.89784212,58.2654465 4.46999453,54.4170859 C4.16300992,53.5896954 4.00583645,52.7142438 4.00583645,51.8317391 C4.00583645,43.3867753 4.00583645,34.9418116 4.00583645,26.4968478 C4.00583645,24.6977773 4.00583645,22.8987068 4.00583645,21.0996363 L4.00583645,21.0996363 C4.00583645,17.745621 6.0980265,14.7476917 9.24616479,13.5906941 Z&quot; id=&quot;path-1&quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M9.24616479,13.5906941 L14.0234146,11.8349687 L14.0234146,11.8349687 C17.8844655,10.4159628 22.1647972,12.3956315 23.5838031,16.2566824 C23.886221,17.0795478 24.0409927,17.9493419 24.0409927,18.8260198 L24.0409927,49.5183386 L24.0409927,49.5183386 C24.0409927,52.8633062 21.9599088,55.8551549 18.8238412,57.0187222 L14.0234146,58.7998124 L14.0234146,58.7998124 C10.175054,60.22766 5.89784212,58.2654465 4.46999453,54.4170859 C4.16300992,53.5896954 4.00583645,52.7142438 4.00583645,51.8317391 C4.00583645,43.3867753 4.00583645,34.9418116 4.00583645,26.4968478 C4.00583645,24.6977773 4.00583645,22.8987068 4.00583645,21.0996363 L4.00583645,21.0996363 C4.00583645,17.745621 6.0980265,14.7476917 9.24616479,13.5906941 Z&quot; id=&quot;path-2&quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M5.24032834,2.21494006 L10.0175781,0.45921461 L10.0175781,0.45921461 C13.878629,-0.959791237 18.1589608,1.01987744 19.5779666,4.88092836 C19.8803845,5.7037938 20.0351562,6.57358786 20.0351562,7.45026573 L20.0351562,38.1425845 L20.0351562,38.1425845 C20.0351562,41.4875521 17.9540723,44.4794008 14.8180048,45.6429681 L10.0175781,47.4240584 L10.0175781,47.4240584 C6.16921751,48.8519059 1.89200567,46.8896924 0.464158083,43.0413318 C0.157173464,42.2139413 8.98985986e-15,41.3384898 8.8817842e-15,40.4559851 C5.28025569e-15,32.0110213 2.64012785e-15,23.5660575 0,15.1210938 C1.84503416e-15,13.3220232 3.69006831e-15,11.5229527 5.53510247e-15,9.72388222 L7.10542736e-15,9.72388222 C9.6736429e-15,6.36986699 2.09219005,3.37193766 5.24032834,2.21494006 Z&quot; id=&quot;path-3&quot;&gt;&lt;/path&gt;
        &lt;path d=&quot;M5.24032834,2.21494006 L10.0175781,0.45921461 L10.0175781,0.45921461 C13.878629,-0.959791237 18.1589608,1.01987744 19.5779666,4.88092836 C19.8803845,5.7037938 20.0351562,6.57358786 20.0351562,7.45026573 L20.0351562,38.1425845 L20.0351562,38.1425845 C20.0351562,41.4875521 17.9540723,44.4794008 14.8180048,45.6429681 L10.0175781,47.4240584 L10.0175781,47.4240584 C6.16921751,48.8519059 1.89200567,46.8896924 0.464158083,43.0413318 C0.157173464,42.2139413 8.98985986e-15,41.3384898 8.8817842e-15,40.4559851 C5.28025569e-15,32.0110213 2.64012785e-15,23.5660575 0,15.1210938 C1.84503416e-15,13.3220232 3.69006831e-15,11.5229527 5.53510247e-15,9.72388222 L7.10542736e-15,9.72388222 C9.6736429e-15,6.36986699 2.09219005,3.37193766 5.24032834,2.21494006 Z&quot; id=&quot;path-4&quot;&gt;&lt;/path&gt;
        &lt;mask id=&quot;mask-5&quot; maskContentUnits=&quot;userSpaceOnUse&quot; maskUnits=&quot;objectBoundingBox&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;20.0351562&quot; height=&quot;47.8902345&quot; fill=&quot;white&quot;&gt;
            &lt;use xlink:href=&quot;#path-4&quot;&gt;&lt;/use&gt;
        &lt;/mask&gt;
        &lt;path d=&quot;M5.24032834,2.21494006 L10.0175781,0.45921461 L10.0175781,0.45921461 C13.878629,-0.959791237 18.1589608,1.01987744 19.5779666,4.88092836 C19.8803845,5.7037938 20.0351562,6.57358786 20.0351562,7.45026573 L20.0351562,38.1425845 L20.0351562,38.1425845 C20.0351562,41.4875521 17.9540723,44.4794008 14.8180048,45.6429681 L10.0175781,47.4240584 L10.0175781,47.4240584 C6.16921751,48.8519059 1.89200567,46.8896924 0.464158083,43.0413318 C0.157173464,42.2139413 8.98985986e-15,41.3384898 8.8817842e-15,40.4559851 C5.28025569e-15,32.0110213 2.64012785e-15,23.5660575 0,15.1210938 C1.84503416e-15,13.3220232 3.69006831e-15,11.5229527 5.53510247e-15,9.72388222 L7.10542736e-15,9.72388222 C9.6736429e-15,6.36986699 2.09219005,3.37193766 5.24032834,2.21494006 Z&quot; id=&quot;path-6&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;v2&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-1_camera&quot; transform=&quot;translate(47.000000, 93.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;path d=&quot;M202.794922,125.993164 L193.664063,0.98828125 L0.509765625,63.03125 L13.8945312,218.316406 L42.2070312,237.144531 L144.007812,250.998047 L233.933594,234.289063 C246.292625,217.862243 249.991193,201.020446 245.029297,183.763672 C240.067401,166.506898 225.989276,147.250062 202.794922,125.993164 Z&quot; id=&quot;Path-5&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-2_camera&quot; transform=&quot;translate(100.000000, 157.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;polygon id=&quot;Path-5&quot; points=&quot;98.3828125 35.6894531 85.1152344 0.529296875 13.2519531 20.7773438 0.330078125 86.7519531 59.4433594 106.298828 79.1210937 101.582031 107.460937 104.070313&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_features&quot; transform=&quot;translate(75.000000, 148.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;80&quot; cy=&quot;178&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;100&quot; cy=&quot;140&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;148&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;49&quot; cy=&quot;164&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-10&quot; cx=&quot;4&quot; cy=&quot;64&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;60&quot; cy=&quot;160&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy&quot; cx=&quot;33&quot; cy=&quot;72&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-5&quot; cx=&quot;67&quot; cy=&quot;97&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-9&quot; cx=&quot;80&quot; cy=&quot;80&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;166.5&quot; cy=&quot;173.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-13&quot; cx=&quot;66.5&quot; cy=&quot;60.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-14&quot; cx=&quot;22.5&quot; cy=&quot;118.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;170.5&quot; cy=&quot;158&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;64&quot; cy=&quot;176&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;132&quot; cy=&quot;139&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;140.5&quot; cy=&quot;157.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;121&quot; cy=&quot;181&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-12&quot; cx=&quot;133&quot; cy=&quot;4&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;97&quot; cy=&quot;161&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;111&quot; cy=&quot;127&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;85&quot; cy=&quot;136&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;79&quot; cy=&quot;144&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;144&quot; cy=&quot;115&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;60&quot; cy=&quot;139&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;30&quot; cy=&quot;155&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;156&quot; cy=&quot;118&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;132&quot; cy=&quot;121&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;18&quot; cy=&quot;165&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-11&quot; cx=&quot;64&quot; cy=&quot;34&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-2_phone&quot; transform=&quot;translate(257.431048, 288.284945) rotate(-37.000000) translate(-257.431048, -288.284945) translate(246.931048, 264.284945)&quot;&gt;&lt;/g&gt;
            &lt;g id=&quot;4-4_anchors&quot; transform=&quot;translate(140.000000, 173.000000)&quot; stroke=&quot;#000000&quot;&gt;
                &lt;path d=&quot;M26.1171875,45 L26.1171875,75&quot; id=&quot;Path-4&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2,2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path-6&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-5_person&quot; transform=&quot;translate(252.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-1&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M9.41864427,14.060003 C6.46726462,15.1446882 4.50583645,17.955247 4.50583645,21.0996363 L4.50583645,51.8317391 C4.50583645,52.6548737 4.65243614,53.4714297 4.93876851,54.2431578 C6.27055829,57.8326217 10.2600226,59.6628282 13.8494865,58.3310384 L18.6499132,56.5499482 C21.5899765,55.4591039 23.5409927,52.6542457 23.5409927,49.5183386 L23.5409927,18.8260198 C23.5409927,18.0081932 23.3966108,17.1967884 23.1144942,16.4291619 C21.7907461,12.8273031 17.7977528,10.9805295 14.1958941,12.3042775 L9.41864427,14.060003 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M43.8662109,54.2951339 C43.2197037,47.2391468 42.4052506,43.8266412 41.4228516,44.0576172 C35.9941406,45.3339844 28.5444721,9.38688117 30.8359375,6.22265625 C34.6060532,1.01660156 69.0625,-7.31651228 67.84375,16.3310547 C67.03125,32.0960993 63.9322917,44.7507924 58.546875,54.2951339 C66.7701069,49.2018936 72.1395731,46.6552734 74.6552734,46.6552734 C78.428824,46.6552734 81.2041008,52.8013269 80.8476562,55.4792972 C80.6100265,57.2646107 79.5517583,70.7331002 77.6728516,95.8847656 C69.9235026,105.734375 61.6959635,110.609701 52.9902344,110.510742 C39.9316406,110.362305 27.5716684,104.533615 25.8232422,101.063477 C24.6576247,98.7500512 22.6400466,83.5553248 19.7705078,55.4792972 L22.8642578,46.6552734 L43.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;0-1_person&quot; transform=&quot;translate(252.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-2&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M9.41864427,14.060003 C6.46726462,15.1446882 4.50583645,17.955247 4.50583645,21.0996363 L4.50583645,51.8317391 C4.50583645,52.6548737 4.65243614,53.4714297 4.93876851,54.2431578 C6.27055829,57.8326217 10.2600226,59.6628282 13.8494865,58.3310384 L18.6499132,56.5499482 C21.5899765,55.4591039 23.5409927,52.6542457 23.5409927,49.5183386 L23.5409927,18.8260198 C23.5409927,18.0081932 23.3966108,17.1967884 23.1144942,16.4291619 C21.7907461,12.8273031 17.7977528,10.9805295 14.1958941,12.3042775 L9.41864427,14.060003 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M43.8662109,54.2951339 C43.2197037,47.2391468 42.4052506,43.8266412 41.4228516,44.0576172 C35.9941406,45.3339844 28.5444721,9.38688117 30.8359375,6.22265625 C34.6060532,1.01660156 69.0625,-7.31651228 67.84375,16.3310547 C67.03125,32.0960993 63.9322917,44.7507924 58.546875,54.2951339 C66.7701069,49.2018936 72.1395731,46.6552734 74.6552734,46.6552734 C78.428824,46.6552734 81.2041008,52.8013269 80.8476562,55.4792972 C80.6100265,57.2646107 79.5517583,70.7331002 77.6728516,95.8847656 C69.9235026,105.734375 61.6959635,110.609701 52.9902344,110.510742 C39.9316406,110.362305 27.5716684,104.533615 25.8232422,101.063477 C24.6576247,98.7500512 22.6400466,83.5553248 19.7705078,55.4792972 L22.8642578,46.6552734 L43.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-3_person&quot; transform=&quot;translate(183.000000, 203.000000)&quot; fill=&quot;#80D7DA&quot;&gt;
                &lt;path d=&quot;M24.0957031,53.8487582 C23.4491959,46.7927711 22.6347428,43.3802655 21.6523438,43.6112415 C16.2236328,44.8876087 8.77396432,8.94050549 11.0654297,5.77628056 C14.8355454,0.570225875 49.2919922,-7.76288797 48.0732422,15.884679 C47.2607422,31.6497236 44.1617839,44.3044167 38.7763672,53.8487582 C46.9995991,48.7555179 52.3690653,46.2088977 54.8847656,46.2088977 C58.6583162,46.2088977 61.433593,52.3549512 61.0771484,55.0329215 C60.8395187,56.818235 59.7812505,70.2867245 57.9023438,95.4383899 C50.1529948,105.287999 41.9254557,110.163325 33.2197266,110.064366 C20.1611328,109.915929 7.80116056,104.087239 6.05273438,100.617101 C4.88711692,98.3036755 2.86953879,83.1089491 0,55.0329215 L3.09375,46.2088977 L24.0957031,53.8487582 Z&quot; id=&quot;Path-7&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-3_temp-phone&quot; transform=&quot;translate(155.000000, 195.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-3&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M5.41280781,2.68424895 C2.46142817,3.7689342 0.5,6.57949295 0.5,9.72388222 L0.5,40.4559851 C0.5,41.2791197 0.646599691,42.0956756 0.932932058,42.8674038 C2.26472184,46.4568677 6.2541862,48.2870742 9.84365009,46.9552844 L14.6440767,45.1741941 C17.58414,44.0833498 19.5351562,41.2784917 19.5351562,38.1425845 L19.5351562,7.45026573 C19.5351562,6.6324392 19.3907743,5.82103436 19.1086577,5.05340784 C17.7849097,1.45154906 13.7919164,-0.395224566 10.1900576,0.928523495 L5.41280781,2.68424895 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_wall&quot; transform=&quot;translate(155.000000, 195.000000)&quot; stroke=&quot;#000000&quot; stroke-width=&quot;2&quot; stroke-dasharray=&quot;2&quot;&gt;
                &lt;use id=&quot;Rectangle&quot; mask=&quot;url(#mask-5)&quot; xlink:href=&quot;#path-4&quot;&gt;&lt;/use&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-2_phone&quot; transform=&quot;translate(163.000000, 203.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-6&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M5.41280781,2.68424895 C2.46142817,3.7689342 0.5,6.57949295 0.5,9.72388222 L0.5,40.4559851 C0.5,41.2791197 0.646599691,42.0956756 0.932932058,42.8674038 C2.26472184,46.4568677 6.2541862,48.2870742 9.84365009,46.9552844 L14.6440767,45.1741941 C17.58414,44.0833498 19.5351562,41.2784917 19.5351562,38.1425845 L19.5351562,7.45026573 C19.5351562,6.6324392 19.3907743,5.82103436 19.1086577,5.05340784 C17.7849097,1.45154906 13.7919164,-0.395224566 10.1900576,0.928523495 L5.41280781,2.68424895 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;We got this to a point where it was working most of the time. One of the core issues was that there&#39;s a lot of
guess-work at the end of the process. The artwork would usually be at the position of your phone, but it was rarely
oriented correctly. We experimented by placing the artwork a meter away, but in user testing very few people could do
that roughly in their head, and we opted to use the exact position of the phone. This meant that you had to move to
touch the wall, then come back to see if the artwork was placed correctly.&lt;/p&gt;

&lt;p&gt;This user flow was hard to explain, and it felt like we weren&#39;t setting people up to win. It was quite a debate about
whether we could ship with this or not because we wanted to ship &lt;a href=&quot;https://github.com/artsy/meta/blob/master/meta/what_is_artsy.md#quality-worthy-of-art&quot;&gt;Quality worthy of Art&lt;/a&gt;. Then we read about the
upcoming changes in ARKit 1.5. &lt;strong&gt;Vertical plane detection&lt;/strong&gt;. Or, &lt;em&gt;mostly&lt;/em&gt; wall detection. The debate over whether our
initial approach was good enough became moot.&lt;/p&gt;

&lt;p&gt;With the advent of vertical wall detection, we could change our flow to be a lot like what someone would have thought it
should be:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;desktop-only&quot; style=&#39;display: flex; flex-flow:row; margin: 0px -60px;&#39;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;v3&quot;&gt;
    &lt;li&gt;Open up ARKit and let it discover the world&lt;/li&gt;
    &lt;li&gt;Ask a user to point at a wall&lt;/li&gt;
    &lt;li&gt;Use the feature detection to detect a plane&lt;/li&gt;
    &lt;li&gt;Use that plane to place an artwork&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;v3&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;path d=&quot;M15.5931447,21.0693125 L20.3703944,19.313587 L20.3703944,19.313587 C24.2314454,17.8945812 28.5117771,19.8742499 29.9307829,23.7353008 C30.2332008,24.5581662 30.3879726,25.4279603 30.3879726,26.3046382 L30.3879726,56.9969569 L30.3879726,56.9969569 C30.3879726,60.3419246 28.3068886,63.3337733 25.1708211,64.4973405 L20.3703944,66.2784308 L20.3703944,66.2784308 C16.5220338,67.7062784 12.244822,65.7440649 10.8169744,61.8957043 C10.5099898,61.0683138 10.3528163,60.1928622 10.3528163,59.3103575 C10.3528163,50.8653937 10.3528163,42.42043 10.3528163,33.9754662 C10.3528163,32.1763957 10.3528163,30.3773252 10.3528163,28.5782547 L10.3528163,28.5782547 C10.3528163,25.2242394 12.4450064,22.2263101 15.5931447,21.0693125 Z&quot; id=&quot;path-1&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;v3&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_camera&quot; transform=&quot;translate(55.000000, 117.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;polygon id=&quot;Path-5&quot; points=&quot;218.78125 80.3027344 174.591797 0.3046875 0.55859375 24 5.89453125 194.316406 34.2070313 213.144531 136.007813 226.998047 225.933594 210.289063&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4_features&quot; transform=&quot;translate(89.000000, 169.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;66&quot; cy=&quot;157&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;86&quot; cy=&quot;119&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;104&quot; cy=&quot;127&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;35&quot; cy=&quot;143&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;46&quot; cy=&quot;139&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;152.5&quot; cy=&quot;152.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;156.5&quot; cy=&quot;137&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;50&quot; cy=&quot;155&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;118&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-13&quot; cx=&quot;93&quot; cy=&quot;45&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-14&quot; cx=&quot;42&quot; cy=&quot;42&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-15&quot; cx=&quot;57&quot; cy=&quot;88&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-16&quot; cx=&quot;108&quot; cy=&quot;68&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-17&quot; cx=&quot;121&quot; cy=&quot;33&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-18&quot; cx=&quot;117.5&quot; cy=&quot;2.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-19&quot; cx=&quot;113.5&quot; cy=&quot;27.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-20&quot; cx=&quot;118.5&quot; cy=&quot;56.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-21&quot; cx=&quot;66.5&quot; cy=&quot;61.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;126.5&quot; cy=&quot;136.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;107&quot; cy=&quot;160&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;83&quot; cy=&quot;140&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy&quot; cx=&quot;7&quot; cy=&quot;94&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-5&quot; cx=&quot;19&quot; cy=&quot;68&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-9&quot; cx=&quot;7&quot; cy=&quot;39&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-10&quot; cx=&quot;46&quot; cy=&quot;62&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-11&quot; cx=&quot;46&quot; cy=&quot;16&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-23&quot; cx=&quot;22&quot; cy=&quot;54&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-12&quot; cx=&quot;77&quot; cy=&quot;74&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;97&quot; cy=&quot;106&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;71&quot; cy=&quot;115&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;65&quot; cy=&quot;123&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-22&quot; cx=&quot;22&quot; cy=&quot;25&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;130&quot; cy=&quot;94&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;46&quot; cy=&quot;118&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;16&quot; cy=&quot;134&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;142&quot; cy=&quot;97&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;100&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;4&quot; cy=&quot;144&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_phone&quot; transform=&quot;translate(257.431048, 288.284945) rotate(-37.000000) translate(-257.431048, -288.284945) translate(246.931048, 264.284945)&quot;&gt;&lt;/g&gt;
            &lt;g id=&quot;0-4_person&quot; transform=&quot;translate(238.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-1&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M15.7656241,21.5386214 C12.8142445,22.6233066 10.8528163,25.4338654 10.8528163,28.5782547 L10.8528163,59.3103575 C10.8528163,60.1334921 10.999416,60.950048 11.2857484,61.7217762 C12.6175382,65.3112401 16.6070025,67.1414466 20.1964664,65.8096568 L24.996893,64.0285666 C27.9369564,62.9377223 29.8879726,60.1328641 29.8879726,56.9969569 L29.8879726,26.3046382 C29.8879726,25.4868116 29.7435906,24.6754068 29.4614741,23.9077803 C28.137726,20.3059215 24.1447327,18.4591479 20.5428739,19.7828959 L15.7656241,21.5386214 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M57.8662109,54.2951339 C57.2197037,47.2391468 56.4052506,43.8266412 55.4228516,44.0576172 C49.9941406,45.3339844 42.5444721,9.38688117 44.8359375,6.22265625 C48.6060532,1.01660156 83.0625,-7.31651228 81.84375,16.3310547 C81.03125,32.0960993 77.9322917,44.7507924 72.546875,54.2951339 C80.7701069,49.2018936 86.1395731,46.6552734 88.6552734,46.6552734 C92.428824,46.6552734 95.2041008,52.8013269 94.8476562,55.4792972 C94.6100265,57.2646107 93.5517583,70.7331002 91.6728516,95.8847656 C83.9235026,105.734375 75.6959635,110.609701 66.9902344,110.510742 C53.9316406,110.362305 41.5716684,104.533615 39.8232422,101.063477 C38.6576247,98.7500512 36.6400466,83.5553248 33.7705078,55.4792972 L36.8642578,46.6552734 L57.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_work&quot; transform=&quot;translate(136.000000, 165.000000)&quot; stroke=&quot;#000000&quot;&gt;
                &lt;polygon id=&quot;Path-6&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-4-plane&quot; transform=&quot;translate(86.000000, 151.000000)&quot; stroke-width=&quot;2&quot; stroke=&quot;#E2D52A&quot; fill-opacity=&quot;0.27100317&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;polygon id=&quot;Path-2&quot; transform=&quot;translate(64.065430, 59.840820) scale(1, -1) translate(-64.065430, -59.840820) &quot; points=&quot;0.537109375 81.3066406 127.59375 119.625 127.59375 40.6816406 5.53710938 0.056640625&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;This seems almost perfect, except that it only works in theory. In practice, you don&#39;t get enough feature points on a
blank wall. Recommending user point their phone at a blank wall (the kind of wall you&#39;d place an artwork on) is likely
to end up in frustration. So instead, our user flow is:&lt;/p&gt;

&lt;p&gt;&lt;article class=&quot;desktop-only&quot; style=&#39;display: flex; flex-flow:row; margin: 0px -60px;&#39;&gt;&lt;/p&gt;

&lt;div style=&#39;flex:1;&#39;&gt;
  &lt;ol class=&quot;workflow&quot; data-id=&quot;v4&quot;&gt;
    &lt;li&gt;Open up ARKit and let it discover the world&lt;/li&gt;
    &lt;li&gt;Ask a user to point at an existing object on a wall&lt;/li&gt;
    &lt;li&gt;Expand the discovered plane in all directions&lt;/li&gt;
    &lt;li&gt;Use the extended plane to place an artwork&lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;


&lt;div style=&#39;flex:1&#39;&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;svg width=&quot;530px&quot; height=&quot;460px&quot; viewBox=&quot;0 0 530 460&quot; version=&quot;1.1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&gt;
    &lt;!-- Generator: Sketch 47.1 (45422) - http://www.bohemiancoding.com/sketch --&gt;
    &lt;title&gt;v4&lt;/title&gt;
    &lt;desc&gt;Created with Sketch.&lt;/desc&gt;
    &lt;defs&gt;
        &lt;path d=&quot;M15.5931447,21.0693125 L20.3703944,19.313587 L20.3703944,19.313587 C24.2314454,17.8945812 28.5117771,19.8742499 29.9307829,23.7353008 C30.2332008,24.5581662 30.3879726,25.4279603 30.3879726,26.3046382 L30.3879726,56.9969569 L30.3879726,56.9969569 C30.3879726,60.3419246 28.3068886,63.3337733 25.1708211,64.4973405 L20.3703944,66.2784308 L20.3703944,66.2784308 C16.5220338,67.7062784 12.244822,65.7440649 10.8169744,61.8957043 C10.5099898,61.0683138 10.3528163,60.1928622 10.3528163,59.3103575 C10.3528163,50.8653937 10.3528163,42.42043 10.3528163,33.9754662 C10.3528163,32.1763957 10.3528163,30.3773252 10.3528163,28.5782547 L10.3528163,28.5782547 C10.3528163,25.2242394 12.4450064,22.2263101 15.5931447,21.0693125 Z&quot; id=&quot;path-1&quot;&gt;&lt;/path&gt;
    &lt;/defs&gt;
    &lt;g id=&quot;Page-1&quot; stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;
        &lt;g id=&quot;v4&quot;&gt;
            &lt;g id=&quot;0-4_room&quot; transform=&quot;translate(18.000000, 14.000000)&quot;&gt;
                &lt;polyline id=&quot;Path-2&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot; transform=&quot;translate(250.949219, 301.207031) scale(1, -1) translate(-250.949219, -301.207031) &quot; points=&quot;0 290.9375 198.996094 360.277344 501.898438 242.136719&quot;&gt;&lt;/polyline&gt;
                &lt;path d=&quot;M200,0.5 L200,242.5&quot; id=&quot;Path-3&quot; stroke=&quot;#BCEBED&quot; stroke-width=&quot;2&quot;&gt;&lt;/path&gt;
                &lt;polygon id=&quot;Path&quot; stroke=&quot;#80D7DA&quot; stroke-width=&quot;4&quot; points=&quot;1 64.6445313 200.320312 1 502.441406 112.097656 502.441406 360.867188 312.496094 433.988281 1 313.414062&quot;&gt;&lt;/polygon&gt;
                &lt;polygon id=&quot;Path-9&quot; stroke=&quot;#BCEBED&quot; points=&quot;140 143.699219 140 220.496094 176.507812 208.332031 176.507812 132&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_camera&quot; transform=&quot;translate(55.000000, 117.000000)&quot; fill-opacity=&quot;0.179630888&quot; fill=&quot;#F5A623&quot;&gt;
                &lt;polygon id=&quot;Path-5&quot; points=&quot;218.78125 80.3027344 174.591797 0.3046875 0.55859375 24 5.89453125 194.316406 34.2070313 213.144531 136.007813 226.998047 225.933594 210.289063&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_features&quot; transform=&quot;translate(89.000000, 156.000000)&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;66&quot; cy=&quot;170&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;86&quot; cy=&quot;132&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;104&quot; cy=&quot;140&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;35&quot; cy=&quot;156&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;46&quot; cy=&quot;152&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;152.5&quot; cy=&quot;165.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;ellipse id=&quot;Path&quot; cx=&quot;156.5&quot; cy=&quot;150&quot; rx=&quot;3.5&quot; ry=&quot;4&quot;&gt;&lt;/ellipse&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;50&quot; cy=&quot;168&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;131&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-13&quot; cx=&quot;93&quot; cy=&quot;58&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-14&quot; cx=&quot;100&quot; cy=&quot;66&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-15&quot; cx=&quot;57&quot; cy=&quot;101&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-16&quot; cx=&quot;108&quot; cy=&quot;81&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-17&quot; cx=&quot;81&quot; cy=&quot;34&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-18&quot; cx=&quot;77.5&quot; cy=&quot;3.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-19&quot; cx=&quot;73.5&quot; cy=&quot;28.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-20&quot; cx=&quot;118.5&quot; cy=&quot;69.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-21&quot; cx=&quot;66.5&quot; cy=&quot;74.5&quot; r=&quot;2.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;126.5&quot; cy=&quot;149.5&quot; r=&quot;3.5&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;107&quot; cy=&quot;173&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;83&quot; cy=&quot;153&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy&quot; cx=&quot;65&quot; cy=&quot;81&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-5&quot; cx=&quot;101&quot; cy=&quot;40&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-9&quot; cx=&quot;89&quot; cy=&quot;11&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-10&quot; cx=&quot;46&quot; cy=&quot;75&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-11&quot; cx=&quot;104&quot; cy=&quot;3&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-23&quot; cx=&quot;104&quot; cy=&quot;26&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-12&quot; cx=&quot;77&quot; cy=&quot;87&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-2&quot; cx=&quot;97&quot; cy=&quot;119&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-3&quot; cx=&quot;71&quot; cy=&quot;128&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-4&quot; cx=&quot;65&quot; cy=&quot;136&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-22&quot; cx=&quot;80&quot; cy=&quot;49&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-6&quot; cx=&quot;130&quot; cy=&quot;107&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-7&quot; cx=&quot;46&quot; cy=&quot;131&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2-Copy-8&quot; cx=&quot;16&quot; cy=&quot;147&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;142&quot; cy=&quot;110&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;118&quot; cy=&quot;113&quot; r=&quot;3&quot;&gt;&lt;/circle&gt;
                &lt;circle id=&quot;Oval-2&quot; cx=&quot;4&quot; cy=&quot;157&quot; r=&quot;4&quot;&gt;&lt;/circle&gt;
            &lt;/g&gt;
            &lt;g id=&quot;1-4_phone&quot; transform=&quot;translate(257.431048, 288.284945) rotate(-37.000000) translate(-257.431048, -288.284945) translate(246.931048, 264.284945)&quot;&gt;&lt;/g&gt;
            &lt;g id=&quot;0-4_person&quot; transform=&quot;translate(238.000000, 241.000000)&quot;&gt;
                &lt;g id=&quot;Rectangle&quot;&gt;
                    &lt;use fill=&quot;#353535&quot; fill-rule=&quot;evenodd&quot; xlink:href=&quot;#path-1&quot;&gt;&lt;/use&gt;
                    &lt;path stroke=&quot;#979797&quot; stroke-width=&quot;1&quot; d=&quot;M15.7656241,21.5386214 C12.8142445,22.6233066 10.8528163,25.4338654 10.8528163,28.5782547 L10.8528163,59.3103575 C10.8528163,60.1334921 10.999416,60.950048 11.2857484,61.7217762 C12.6175382,65.3112401 16.6070025,67.1414466 20.1964664,65.8096568 L24.996893,64.0285666 C27.9369564,62.9377223 29.8879726,60.1328641 29.8879726,56.9969569 L29.8879726,26.3046382 C29.8879726,25.4868116 29.7435906,24.6754068 29.4614741,23.9077803 C28.137726,20.3059215 24.1447327,18.4591479 20.5428739,19.7828959 L15.7656241,21.5386214 Z&quot;&gt;&lt;/path&gt;
                &lt;/g&gt;
                &lt;path d=&quot;M57.8662109,54.2951339 C57.2197037,47.2391468 56.4052506,43.8266412 55.4228516,44.0576172 C49.9941406,45.3339844 42.5444721,9.38688117 44.8359375,6.22265625 C48.6060532,1.01660156 83.0625,-7.31651228 81.84375,16.3310547 C81.03125,32.0960993 77.9322917,44.7507924 72.546875,54.2951339 C80.7701069,49.2018936 86.1395731,46.6552734 88.6552734,46.6552734 C92.428824,46.6552734 95.2041008,52.8013269 94.8476562,55.4792972 C94.6100265,57.2646107 93.5517583,70.7331002 91.6728516,95.8847656 C83.9235026,105.734375 75.6959635,110.609701 66.9902344,110.510742 C53.9316406,110.362305 41.5716684,104.533615 39.8232422,101.063477 C38.6576247,98.7500512 36.6400466,83.5553248 33.7705078,55.4792972 L36.8642578,46.6552734 L57.8662109,54.2951339 Z&quot; id=&quot;Path-7&quot; fill=&quot;#80D7DA&quot;&gt;&lt;/path&gt;
            &lt;/g&gt;
            &lt;g id=&quot;4-4_work&quot; transform=&quot;translate(94.000000, 166.000000)&quot; stroke=&quot;#000000&quot;&gt;
                &lt;polygon id=&quot;Path-6&quot; points=&quot;0.359375 15.109375 44.578125 0.50390625 44.578125 67.8945313 0.359375 84.4160156&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;2-4-plane&quot; transform=&quot;translate(154.000000, 144.000000)&quot; stroke-width=&quot;2&quot; stroke=&quot;#E2D52A&quot; fill-opacity=&quot;0.27100317&quot; fill=&quot;#E2D52A&quot;&gt;
                &lt;polygon id=&quot;Path-2&quot; transform=&quot;translate(22.351563, 46.503906) scale(1, -1) translate(-22.351563, -46.503906) &quot; points=&quot;0.724609375 81.4941406 43.9785156 92.9433594 43.9785156 14.2070312 0.724609375 0.064453125&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
            &lt;g id=&quot;3-4-extended-plane&quot; transform=&quot;translate(10.000000, 106.000000)&quot; stroke=&quot;#7ED321&quot; stroke-dasharray=&quot;2&quot;&gt;
                &lt;polygon id=&quot;Path-10&quot; points=&quot;0.57421875 76.140625 288.720703 0.248046875 288.720703 94.5058594 0.57421875 187.464844&quot;&gt;&lt;/polygon&gt;
            &lt;/g&gt;
        &lt;/g&gt;
    &lt;/g&gt;
&lt;/svg&gt;&lt;/div&gt;


&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;p&gt;🎉 - you have the Artsy workflow for putting a work on the wall.&lt;/p&gt;

&lt;a name=&quot;Abstractions&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Abstractions&lt;/h2&gt;

&lt;p&gt;While we were not initially sure about how well ARKit would work out for us, we thought the best way to get our feet wet
would be to work with a contractor. We knew &lt;a href=&quot;http://www.lazerwalker.com&quot;&gt;@lazerwalker&lt;/a&gt; through the iOS dev community and asked if he
was interested in prototyping it out. He built out a demo application of the first design iteration, you can &lt;a href=&quot;https://github.com/lazerwalker/art-on-walls-prototype&quot;&gt;see it
here&lt;/a&gt; as it&#39;s MIT licensed.&lt;/p&gt;

&lt;p&gt;I took his prototype and &lt;a href=&quot;https://github.com/artsy/eigen/pull/2501&quot;&gt;merged it into our app&lt;/a&gt; Eigen. From there, I started to turn the prototype into
production code. We effectively had two state machines: one that was handling the internal state of the AR world, and
another which handled the user interface from the UIKit world. We kept these in sync by having two protocols:
&lt;code&gt;ARVIRInteractive&lt;/code&gt; and &lt;code&gt;ARVIRDelegate&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;They didn&#39;t end up being that complex, you can see them in &lt;a href=&quot;https://github.com/artsy/eigen/blob/f897b3438bd07470bd88a790fc6d6a524f5756cb/Artsy/View_Controllers/ARVIR/AR/ARAugmentedVIRInteractionController.h&quot;&gt;&lt;code&gt;ARAugmentedVIRInteractionController.h&lt;/code&gt;&lt;/a&gt;. In fact,
the story of AR at Artsy is that most of this is not too complex. Which I think is a testament to how well thought-out
ARKit is.&lt;/p&gt;

&lt;p&gt;So to make it work, we have a reasonably complicated UIViewController subclass,
&lt;a href=&quot;https://github.com/artsy/eigen/blob/f897b3438bd07470bd88a790fc6d6a524f5756cb/Artsy/View_Controllers/Core/ARViewInRoomViewController.m&quot;&gt;&lt;code&gt;ARAugmentedVIRViewController.m&lt;/code&gt;&lt;/a&gt; which handles presenting a user interface above the camera, then an
interaction controller &lt;a href=&quot;https://github.com/artsy/eigen/blob/f897b3438bd07470bd88a790fc6d6a524f5756cb/Artsy/View_Controllers/ARVIR/AR/ARAugmentedVIRInteractionController.m&quot;&gt;&lt;code&gt;ARAugmentedVIRInteractionController.m&lt;/code&gt;&lt;/a&gt; which handles all of the interactions inside
AR. By using protocols to communicate between two, I could test out different AR interactions by duplicating the
existing interaction controller and iterating on a new object for a while. This made it possible to prototype a few
ideas, then switch between them - saving on dev time as this project wasn&#39;t a good fit for &lt;a href=&quot;http://artsy.github.io/series/react-native-at-artsy/&quot;&gt;React Native&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;React Native is really great for &lt;a href=&quot;http://artsy.github.io/blog/2018/03/17/two-years-of-react-native/&quot;&gt;nearly every screen we deal with&lt;/a&gt; typically. We tend to basically build pretty
screens of JSON. This experience is far from that. It requires constantly changing states between two very separate but
linked worlds. One of the biggest advantages to doing it in React Native would have been using it for cross-platform
work, but that&#39;s speculative as only ARKit supports vertical plane detection today. We&#39;d have had to either use &lt;a href=&quot;https://github.com/react-native-ar/react-native-arkit&quot;&gt;a
dependency&lt;/a&gt;, or build our own simpler bridge from ARKit to JS and maintain that. It just felt like a lot of work
for a one-off section of the app.&lt;/p&gt;

&lt;p&gt;Testing this code turned out to not be too valuable, I have tests that &lt;a href=&quot;https://github.com/artsy/eigen/tree/master/Artsy_Tests/View_Controller_Tests/ARVIR&quot;&gt;cover a lot of the UIKit level&lt;/a&gt; work but
I avoided writing tests for ARKit code. It was changing too often, and was often exploratory. Also, our tests run on iOS
10, which doesn&#39;t support ARKit anyway. So those tests would not run on CI.&lt;/p&gt;

&lt;a name=&quot;Demo&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Demo&lt;/h2&gt;

&lt;p&gt;Wonder what it looks like in production? Click through for a video of it in action in my &quot;cosy&quot; manhattan bedroom:&lt;/p&gt;

&lt;center&gt;
&lt;a href=&quot;http://files.artsy.net/videos/eigen-arvir-demo.mp4&quot;&gt;
&lt;img src=&quot;/images/ar/ar-vir-demo.png&quot; width=325&gt;
&lt;/a&gt;
&lt;/center&gt;


&lt;p&gt;We explicitly aimed to try and have this project as free as possible from dependencies so that others could re-use this
code. It&#39;s not &lt;em&gt;quite&lt;/em&gt; generic enough to warrant making it&#39;s own CocoaPod, but it&#39;s MIT licensed and most of the
dependencies are to do with user-interface styling and testing, which should be easily replaced in another codebase. Let
us know if you&#39;ve explored adding something it to your app or have questions!&lt;/p&gt;

&lt;p&gt; &lt;style type=&quot;text/css&quot;&gt;
.workflow li {
  width: 230px;
  padding: 20px;
  list-style:none;
  color: #80D7DA;
  border: 1px solid #80D7DA;
  margin-top:-1px;
}
.workflow li.active {
  border-left: 1px solid black;
  border-right: 1px solid black;
  color: black;
}
.diagram {
  display: flex;
  flex-flow:row;
  margin: 0px -60px;
}
ol {
  padding-left: 0;
  margin-top: -20px;
}
@media screen and (min-width: 900px) {
  body &gt; div {
    background-image: url(/images/ar/cover.svg);
    background-repeat: no-repeat;
    background-position: 0px 00px;
  }
}
&lt;/style&gt;&lt;/p&gt;

&lt;script&gt;
  $(() =&gt; {
    // When hovering on an .workflow li, use it&#39;s index
    // to disable groups in a correlating SVG. Groups in the SVG
    // all are prefixed with `start-end_name`.
    $(&quot;.workflow li&quot;).hover(function() {
        var thisIndex = $(this).index()  + 1
        var parentDataID = $(this).parent().data(&quot;id&quot;)
        $(this).parent().children().removeClass(&#39;active&#39;)
        $(this).addClass(&#39;active&#39;)

        $(&#39;g#&#39; + parentDataID +&#39; g&#39;).toArray().forEach(g =&gt; {
          if (!g.id.includes(&quot;-&quot;)) { return }

          var before = parseInt(g.id.split(&quot;-&quot;)[0])
          var after = parseInt(g.id.split(&quot;-&quot;)[1].split(&quot;_&quot;)[0])
          var shouldShow = before &lt;= thisIndex &amp;&amp; thisIndex &lt;= after

          g.style.display = shouldShow ? &quot;block&quot; : &quot;none&quot;
        })
    });
    
    // Select the first item in every SVG li
    $(&quot;.workflow li:first-child&quot;).mouseenter()
})&lt;/script&gt;



</description>
        <pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/03/18/ar/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/03/18/ar/</guid>
        
        
        <category>arkit</category>
        
        <category>ios</category>
        
        <category>native</category>
        
      </item>
    
      <item>
        <title>React Native, 2 years later</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://twitter.com/alloy/&quot;&gt;@alloy&lt;/a&gt; first mentioned React Native as an option for Artsy back &lt;a href=&quot;https://github.com/artsy/mobile/issues/22&quot;&gt;in March 2015&lt;/a&gt;, and in February 2016 he
made &lt;a href=&quot;https://github.com/artsy/emission/commit/b9154d4145feb49b38e713ee84594de04ea377e3#diff-9879d6db96fd29134fc802214163b95a&quot;&gt;our first commit&lt;/a&gt; to get the ball rolling. Since then, we&#39;ve grown a new codebase, &lt;a href=&quot;https://github.com/artsy/emission/&quot;&gt;Emission&lt;/a&gt;,
which has slowly taken over the responsibility for creating the UIViewControllers presented inside our iOS app.&lt;/p&gt;

&lt;p&gt;We&#39;ve come quite far from where we started, and I was asked if I could give a talk to summerize what we&#39;ve learned in
the last 2 years as a set of native developers using React Native.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://speakerdeck.com/orta/react-native-2-years-later&quot;&gt;slides are on speakerdeck&lt;/a&gt;, and I&#39;ve &lt;a href=&quot;https://github.com/artsy/artsy.github.io/issues/420&quot;&gt;opened comments&lt;/a&gt; for this post if people have questions. Jump
through to get to the video or watch it &lt;a href=&quot;https://www.prolificinteractive.com/iosoho/&quot;&gt;on Prolific&#39;s site&lt;/a&gt; for &lt;a href=&quot;https://www.meetup.com/iOSoho/&quot;&gt;iOSoho&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;Table of Contents for the Video:&lt;/p&gt;

&lt;ul id=&quot;timers&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;330&quot;&gt;Why move? 5:30&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;520&quot;&gt;Why not Swift? 8:40&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;590&quot;&gt;What we expected vs what we have: 9:50&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;960&quot;&gt;Downsides: 16:00&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;1235&quot;&gt;Artsy Omakase: 20:35&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;1420&quot;&gt;Upsides: 23:40&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;1645&quot;&gt;In-App demo of Emission: 27:25&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;2195&quot;&gt;RN Brownfield Apps: 36:35&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#video&quot; data-time=&quot;2379&quot;&gt;Our Deployment: 39:30&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;




&lt;center id=&quot;video&quot;&gt;
  &lt;iframe src=&quot;https://player.vimeo.com/video/260417482&quot; width=&quot;100%&quot; height=&quot;600&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;/center&gt;




&lt;script src=&quot;https://player.vimeo.com/api/player.js&quot;&gt;&lt;/script&gt;


&lt;script&gt;
  $(() =&gt; {
    $(&#39;#timers a&#39;).click( function(e) {
      var time = $(this).attr(&quot;data-time&quot;);
      var iframe = document.querySelector(&#39;iframe&#39;);
      var player = new Vimeo.Player(iframe);
      player.setCurrentTime(time)
      e.stopPropagation()
    });
  })
&lt;/script&gt;



</description>
        <pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/03/17/two-years-of-react-native/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/03/17/two-years-of-react-native/</guid>
        
        
        <category>emission</category>
        
        <category>javascript</category>
        
        <category>react</category>
        
        <category>reaction</category>
        
        <category>reactnative</category>
        
        <category>technology</category>
        
      </item>
    
      <item>
        <title>Integrating Redux and Socket.io</title>
        <description>&lt;p&gt;On the engineering team at Artsy, we&#39;ve built a CMS for both internal and external editors to write and publish &lt;a href=&quot;https://www.artsy.net/article/artsy-editorial-brooklyn-born-sisters-diego-rivera-dubbed-the-greatest-living-women-mural-painters&quot;&gt;articles&lt;/a&gt;. We have a team of a dozen in-house editors creating new content on a daily basis. As many people starting using the app simultaneously, something became apparent. Editors would unintentionally go and override each other’s work because there was no way to tell if someone else was currently editing an article. As a workaround, team members would be forced to edit drafts in another editor such as google docs and copy their work over once ready. This made for a lackluster collaborative experience.&lt;/p&gt;

&lt;p&gt;So we decided to implement a system that would make our editors more confident in our CMS by ensuring only one editor could go in and edit an article at any given time. I was tasked with coming up with an elegant technical solution for this feature. Here&#39;s the approach I took....&lt;/p&gt;

&lt;!-- more --&gt;


&lt;p&gt;We decided to resolve this issue building an article locking mechanism. When an editor would start editing an article, all other users in sessions would be notified. One of the requirements for this new feature was for things needed to update without refreshing the page. In order to fulfill this, we needed to implement a system to push events from the server to clients.&lt;/p&gt;

&lt;p&gt;Based on the requirements presented, I looked at potential solutions for this. Right away, the HTML5 WebSocket API seemed like the perfect solution to keep all clients synced in realtime, however a few issues arose. For one, many proxies and firewalls block WebSocket connections, so it&#39;s not always an available option for clients. I needed to find another option to mitigate that problem. That&#39;s where &lt;a href=&quot;https://socket.io&quot;&gt;socket.io&lt;/a&gt; comes in.&lt;/p&gt;

&lt;p&gt;Socket.io, a battle tested library for creating real-time bidirectional communication channels, helps mitigate those problems. In a gist socket.io initially establishes a long-polling HTTP connection, and in parallel tries to upgrade it to WebSocket.&lt;/p&gt;

&lt;p&gt;By the time this project was proposed, we had already started the process of converting the app from using Coffeescript, Backbone + Jade to a modern javascript stack based on ES6, React for UI components and Redux for managing app state. Naturally, one of the goals was to leverage Redux to manage state for this feature. You&#39;ve probably at least heard of Redux as it has emerged as the industry standard way of implementing one-way data flows in apps. If you&#39;re not familiar with Redux and its architecture, here&#39;s an excellent &lt;a href=&quot;https://www.smashingmagazine.com/2016/06/an-introduction-to-redux/&quot;&gt;intro to redux&lt;/a&gt; article to familiarize yourself.&lt;/p&gt;

&lt;p&gt; So how do we go about integrating socket.io in the Redux-based state architecture we just designed. I thought the best would be to change as little as possible to the code structures developers familiar with Redux are already used to. Namely, use standard Redux actions creators and simply use a decorator to enhance them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2018-03-15-integrating-redux-and-socketio/example.gif&quot; alt=&quot;/images/2018-03-15-integrating-redux-and-socketio/example.gif&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here&#39;s a simplified version of the &lt;a href=&quot;https://leanpub.com/javascriptallongesix/read#decorators&quot;&gt;function decorator&lt;/a&gt; which broadcasts redux actions via a socket connection to other connected clients.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// From client&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;socket.io-client&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;messageTypes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;./messageTypes&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rootURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// Helper to emit a redux action to our websocket server&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emitAction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;actionCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// This return the action object which gets sent to our backend&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;c1&quot;&gt;// server via the socket connection&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actionCreator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;To recap the code above, &lt;code&gt;emitAction&lt;/code&gt; is a &lt;a href=&quot;https://leanpub.com/javascriptallongesix/read#decorators&quot;&gt;function decorator&lt;/a&gt; that enhances action creators to dispatch actions via the local store and also broadcast that same action to other connected clients. The following code snippet shows how it&#39;s being used to wrap a typical redux action creator.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;// actions.js&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyMirror&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;client/lib/keyMirror&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emitAction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;client/apps/websocket/client&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;messageTypes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;client/apps/websocket/messageTypes&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyMirror&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;START_EDITING_ARTICLE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;STOP_EDITING_ARTICLE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;startEditingArticle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;emitAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;START_EDITING_ARTICLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;messageTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userStartedEditing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;nx&quot;&gt;timestamp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toISOString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;On the receiving end, we simply add a reducer to process the event from the action payload which we can then return a new state from.&lt;/p&gt;

&lt;div class=&#39;bogus-wrapper&#39;&gt;&lt;notextile&gt;&lt;figure class=&#39;code&#39;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre class=&quot;line-numbers&quot;&gt;&lt;span class=&#39;line-number&#39;&gt;1&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;2&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;3&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;4&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;5&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;6&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;7&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;8&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;9&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;10&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;11&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;12&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;13&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;14&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;15&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;16&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;17&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;18&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;19&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;20&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;21&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;22&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;23&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;24&lt;/span&gt;
&lt;span class=&#39;line-number&#39;&gt;25&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#39;code&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;c1&quot;&gt;//reducers.js&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;sharify&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;client/actions/editActions&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;updeep&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;articles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ARTICLES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;nx&quot;&gt;articlesInSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ARTICLES_IN_SESSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;kr&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;articlesReducer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;initialState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;START_EDITING_ARTICLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;nx&quot;&gt;articlesInSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;          &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;article&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/div&gt;&lt;/figure&gt;&lt;/notextile&gt;&lt;/div&gt;


&lt;p&gt;We can now use our &lt;code&gt;emitAction&lt;/code&gt; decorator function to enhance any number of action creators. All that&#39;s needed is to add a &lt;code&gt;key&lt;/code&gt; property to the action object. We can then decide to either process actions
 on a backend service or proxy them directly to other clients. You can find the remainder of the server implementation and our &lt;a href=&quot;https://github.com/artsy/positron/blob/master/src/client/apps/websocket/index.js&quot;&gt;event handlers&lt;/a&gt; in our &lt;a href=&quot;https://github.com/artsy/positron&quot;&gt;github repo&lt;/a&gt; along with instructions on how to run the code.&lt;/p&gt;

&lt;a name=&quot;Future.improvements&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Future improvements&lt;/h2&gt;

&lt;p&gt;There&#39;s an opportunity to extract this module for reuse in other projects and apps. Another logical improvement to this project would be to implement collaborative editing using this architecture. It would also be nice to include helpers for handling events on backend servers.&lt;/p&gt;

&lt;a name=&quot;Useful.links&quot;&gt;&lt;/a&gt;
&lt;h2&gt;Useful links&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://redux.js.org/&quot;&gt;Redux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://socket.io/docs/&quot;&gt;Socket.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/substantial/updeep&quot;&gt;Updeep&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 15 Mar 2018 00:00:00 +0000</pubDate>
        <link>http://artsy.github.io/blog/2018/03/15/integrating-redux-and-socketio/</link>
        <guid isPermaLink="true">http://artsy.github.io/blog/2018/03/15/integrating-redux-and-socketio/</guid>
        
        
        <category>javascript</category>
        
        <category>positron</category>
        
        <category>technology</category>
        
      </item>
    
  </channel>
</rss>
