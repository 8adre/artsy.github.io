<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: teaching | Artsy Engineering]]></title>
  <link href="http://artsy.github.io/blog/categories/teaching/atom.xml" rel="self"/>
  <link href="http://artsy.github.io/"/>
  <updated>2016-03-09T17:41:40+00:00</updated>
  <id>http://artsy.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Public Speaking - Part 1: Is It For Me?]]></title>
    <link href="http://artsy.github.io/blog/2016/03/09/public-speaking-part1-is-it-for-me/"/>
    <updated>2016-03-09T11:00:00+00:00</updated>
    <id>http://artsy.github.io/blog/2016/03/09/public-speaking-part1-is-it-for-me</id>
    <content type="html"><![CDATA[<p>At Artsy, sharing knowledge is heavily encouraged and so we write our code in the open, document using blog posts, and speak about our experiences. Many have <a href="https://twitter.com/qnoid/status/702955785064677376">bumped into us</a> at various places around the world. And so I often get the question: ‚ÄúHow did you get started? I‚Äôm interested in speaking too‚Äù.</p>

<p>In the name of sharing experiences with others, I can‚Äôt encourage this enough. Unfortunately though, public speaking is still considered <a href="https://www.washingtonpost.com/news/wonk/wp/2014/10/30/clowns-are-twice-as-scary-to-democrats-as-they-are-to-republicans/">man‚Äôs biggest fear</a>.</p>

<p>I‚Äôd like to share with you the benefits of public speaking, tips on how to get started, and how to give great presentations.</p>

<!-- more -->


<h2>Why do it?</h2>

<h3>Communication</h3>

<p>Without necessarily realising, you‚Äôre publicly speaking all the time. At the heart of it, it‚Äôs the act of communicating and expressing your ideas and viewpoints for others to understand.</p>

<p>It could be as simple as ordering your morning coffee or as important as trying to convince your team that they should use a new technology. Regardless of the context, it involves restructuring your thoughts into words and metaphors that you think others can relate to in order for them to understand your concepts.</p>

<p><strong>Public speaking is a skill that is always good to improve on</strong>. Misunderstandings happen all the time, and at the heart of that is often poor communication.</p>

<p>I know people have refrained from speaking up in meetings at work, because they struggle with speaking in front of others. There‚Äôs no need for everyone to be a keynote speaker at a conference, but if it‚Äôs hindering you in your career, it may be worth practicing. Everyone should feel empowered to call a meeting, participate in discussions, or ask questions at an all hands.</p>

<h3>Learning</h3>

<p>Another reason giving talks is üëçüèΩ is that it will allow you to learn more fully. One of the best ways to learn is by <a href="http://ideas.time.com/2011/11/30/the-protege-effect/">teaching others</a>. You grasp ideas better yourself and in order to communicate them properly, you get into the habit of restructuring your ideas and concepts.</p>

<p>Unfortunately, people often also consider this the blocker to public speaking. Not only are you afraid you‚Äôll accidentally make a fool of yourself (‚Äúwhat if I trip?‚Äù) but also that it will be apparent that you don‚Äôt know something well enough. The only way to get over this is by doing it.</p>

<p>Chances are that you are actually very knowledgeable in certain fields, you just perceive that as normal. ‚ÄúYeah, but that‚Äôs not interesting‚Ä¶ everyone knows about <em>that</em>‚Äù. And I can bet that, well, probably not everyone knows about that. Definitely not as much as you might actually do.</p>

<p>We all have our strengths. This is the time to play on them. We can‚Äôt be experts in both Core Image, Core Animation, and the Objective C runtime, all the while knowing everything about Swift Protocols. Pick your slice from a much wider scope. It doesn‚Äôt need to be a full framework, even just a specific use case of it, like <a href="https://realm.io/news/gwendolyn-weston-ios-background-networking/">background transfer services</a>.</p>

<p>Furthermore, see it as a learning opportunity. Speak about a topic that truly interests you and take this time to uncover things you‚Äôve always wanted to know. It does not require you to be an expert up front ‚Äî sharing knowledge gives you the chance to become one.</p>

<p>For example, I wanted to give a talk on the beauty of design and why beautiful things ‚Äújust work‚Äù. I took this chance to read papers and books on the field of positive psychology and design, learning all kinds of fun new facts. Others have shared with me also that it wasn‚Äôt until they decided to write or speak about certain API that they fully got to understand all the ins and outs.</p>

<h2>Ok you got me interested‚Ä¶ now what?</h2>

<p>That's great!</p>

<p>Next you'd probably want to figure out where you'd like to speak and how to prepare a good talk. This will be covered in the next two posts, so stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Teaching Swift at Artsy]]></title>
    <link href="http://artsy.github.io/blog/2016/01/26/swift-at-artsy/"/>
    <updated>2016-01-26T00:00:00+00:00</updated>
    <id>http://artsy.github.io/blog/2016/01/26/swift-at-artsy</id>
    <content type="html"><![CDATA[<p>While the Artsy engineering team includes many disciplines, tech stacks, and personalities, we all share a few things in common: a respect for each other, an appreciation of art-meets-science, and a celebration of learning. These are actually traits shared with our entire company, even non-engineers. So last Summer when Orta and I had some down time, it occurred to us how we could do something super-productive that was congruent with our values: we could teach the company Swift.</p>

<!-- more -->


<p>Like most project ideas, the first step was to create a <a href="https://github.com/orta/Swift-at-Artsy">GitHub repo</a>. We made it open source because <a href="http://code.dblock.org/2015/02/09/becoming-open-source-by-default.html">why not</a>. Orta and I chatted and realized that to teach the company Swift, we would need two tracks:</p>

<ul>
<li>A track for newcomers who may have never programmed before.</li>
<li>A track for anyone who could explain what "object-oriented programming" meant.</li>
</ul>


<p>It was really important to us to include beginners who had no exposure to programming ‚Äì the digital marketing and genoming teams specifically were keen to learn how to program.</p>

<p>I'm a big believer in using "newcomer" and "informed" to describe the two groups of developers ‚Äì it helps prevent newcomers from feeling inadequate and better describes the expectations for students.</p>

<p>We also focused on Swift-only, no iOS. That allowed us to focus on the language ‚Äì which was fun because it let us focus on us learning new stuff, too ‚Äì and we kept the course to five one-hour sessions (per track).</p>

<p>Next step was obviously to create a Slack chatroom. We re-purposed the oft-neglected room dedicated to Taylor Swift and turned it into a place where anyone could ask questions and share resources. It's also a helpful place to @channel everyone to remind them about the classes.</p>

<p></div></div><a href='/images/2016-01-26-swift-at-artsy/chatroom.png'><img src="/images/2016-01-26-swift-at-artsy/chatroom.png"></a><div class='meta-container'><header>&nbsp;</header></div><div class='date-container'>&nbsp;</div><div class='content-container'><div class='entry-content'></p>

<p>Orta taught the beginner course and I TA'd it, answering questions as he instructed and offering suggestions when I felt something should be clarified (kind of like pair-programming except for teaching). We switched roles for the informed class. Preparing course materials was done through GitHub pull requests, which integrated well into our existing workflow on the mobile team.</p>

<p>We ran into some troubles in the first classes of both tracks: Swift 2 was in beta, and getting everyone on the correct versions of Xcode proved... difficult. Keeping them up-to-date as Xcode betas continued to be released over five weeks was also challenging. This was a problem in both tracks, but some problems were track-specific.</p>

<p>Explaining fundamental concepts like variables and for-loops to beginners is challenging. It reminded me of when I TA'd intro-to-Java courses in University (while the code then was obviously much uglier, <code>javac</code> is arguably more user-friendly than Xcode). Having the pair-programming approach worked well to help explain these concepts.</p>

<p>The biggest challenge with the informed class was rounding everyone up to actually attend the classes. Engineers are addicted to being busy, and like most side-projects, everyone was initially very excited about the course, but that interest dropped off quickly. Orta would help by physically going to our colleagues' desks and gently reminding them.</p>

<p>Regardless of the challenges, the course had a significant impact, both within Artsy and in the larger Swift community. Some of the course materials have been <a href="https://github.com/orta/Swift-at-Artsy/blob/master/Beginners/Lesson%20One/README_ZH.md">translated into Chinese</a> and we regularly received suggestions (and occasionally corrections) about our content. Newcomers to programming gained insights into <em>what exactly engineers do</em> and why bugs happen, while informed colleagues saw parallels between Swift and their own favourite languages (most often Scala). The course materials have also helped other mobile team members (who usually write only Objective-C) get started with Swift.</p>

<p>The beginner students really appreciated <a href="https://github.com/orta/Swift-at-Artsy/tree/master/Beginners/Lesson%20Three">lesson three</a> because we used real-world (scaled down) data structures that Artsy actually uses. We presented problems to solve ‚Äì problems our colleagues were familiar with from their day-to-day work ‚Äì and we showed how they can be solved with programming. <a href="https://github.com/orta/Swift-at-Artsy/tree/master/Beginners/Lesson%20Four">Lesson four </a> was the most well-received lesson as it featured some concrete "making the computer do cool stuff" material.</p>

<p>Finally, there was just a great sense of accomplishment. Orta and I had taken time during a downtime in engineering work and turned it into something that helped the company and helped the community. We got thanked internally and externally, and that felt great; helping others has a lot of tangible benefits, but feeling good about it is one of my favourites.</p>
]]></content>
  </entry>
  
</feed>
