<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: community | Artsy Engineering]]></title>
  <link href="http://artsy.github.io/blog/categories/community/atom.xml" rel="self"/>
  <link href="http://artsy.github.io/"/>
  <updated>2019-04-06T22:57:59+00:00</updated>
  <id>http://artsy.github.io/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Peril Architecture Deep Dive]]></title>
    <link href="http://artsy.github.io/blog/2019/04/04/peril-architecture-deep-dive/"/>
    <updated>2019-04-04T00:00:00+00:00</updated>
    <id>http://artsy.github.io/blog/2019/04/04/peril-architecture-deep-dive</id>
    <content type="html"><![CDATA[<p>For the <a href="/blog/2017/09/04/Introducing-Peril/">last two years</a>, we've used <a href="https://github.com/danger/peril">Peril</a> to automate quite a lot of process at Artsy. You can see
a full overview of what <a href="https://github.com/artsy/README/blob/master/culture/peril.md">we automate in <code>artsy/README</code></a>. As a service, Peril is a bit of an iceberg
of complexity, most tooling-y developers at Artsy have <a href="https://github.com/artsy/peril-settings/graphs/contributors">contributed</a> to our user-land Dangerfiles
but very few have touched the server itself.</p>

<p>To lower that barrier, I gave our Engineering team a run through of how the server works and how a lot of the
pieces come together. Jump <a href="https://www.youtube.com/watch?v=3HNmiNHCvdA">to YouTube</a> for the video, or click more
for a smaller inline preview.</p>

<!-- more -->


<p></div></div><iframe width='100%' height='600' src='https://www.youtube.com/embed/3HNmiNHCvdA ' frameborder='0' allowfullscreen></iframe><div class='meta-container'><header>&nbsp;</header></div><div class='content-container'><div class='entry-content'></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[React Native at Artsy, 3 years later]]></title>
    <link href="http://artsy.github.io/blog/2019/03/17/three-years-of-react-native/"/>
    <updated>2019-03-17T00:00:00+00:00</updated>
    <id>http://artsy.github.io/blog/2019/03/17/three-years-of-react-native</id>
    <content type="html"><![CDATA[<p>On Valentine's day in 2014, @alloy made our first commit moving the Artsy Mobile team to JavaScript, and paving the
way to the <a href="https://www.youtube.com/watch?v=1Z3loALSVQM">shared Omakase JavaScript stack across web + iOS</a>. We've done a write-up at <a href="/blog/2016/08/15/React-Native-at-Artsy/">6 months</a>, <a href="/blog/2017/02/05/Retrospective-Swift-at-Artsy/">1 year</a>,
<a href="/blog/2018/03/17/two-years-of-react-native/">2 years</a> and at 2.5 years we collaborated on a React Native conference with Facebook which features a <a href="http://artsy.net/x-react-native">very long
Q&amp;A</a> session with the people who worked on, and with our React Native stack.</p>

<p>Our experience has been really positive building a single platform data-driven app. We've been able to drastically
increase the number of contributors to the codebase and with minimal guidance, web-developers are able to be
productive and ship features to our iOS apps.</p>

<p>That said, for this 3 year anniversary, I want to dive deeper into some of the less positive aspects of our
transition. We think these trade-offs are worth it, and that this may be what a successful cultural transition
eventually looks like for some companies.</p>

<!-- more -->


<a name="De-nativification"></a>
<h2>De-nativification</h2>

<p>When adopting React Native, we de-emphasized iOS as a unique platform for Artsy.</p>

<p>From an engineering team's perspective, we think of it as skill <a href="https://github.com/artsy/README/blob/master/culture/engineering-principles.md#de-silo-engineers">de-siloing</a>. Prior to the move, if you
were on the mobile team you only worked on the iOS apps. This meant you had a limited scope to make change at
Artsy. This comes from two factors:</p>

<ul>
<li>Skills in Obj-C and Swift are only useful in the context of Apple's platforms.</li>
<li>Internally and externally, Artsy is considered a website first.</li>
</ul>


<p>Within 2 years we had de-siloed mobile engineering completely. We started with a team of 5 experienced native iOS
developers and by the end everyone had very solid skills across the board in JavaScript, React, GraphQL and the
build tools we'd need to make it all come together. These engineers kept their native skills, but they became
frozen in time.</p>

<p>With time, we redistributed the native engineers across many teams, with the native Engineers effectively acting as
a conduit for ensuring that we keep quality high and providing guidance to the rest of that team on how to make it
feel right. A simple way to think of it, is that the native engineer's job was to make sure we still conformed to
the <a href="https://developer.apple.com/design/human-interface-guidelines/">Apple Human Interface Guidelines</a> to ensure
the user experience is consistent with the platform and the user’s expectations.</p>

<p>We're reasonably lucky here too, the mobile team at Artsy has pre-dominantly hired folks interested in improving
behind-the-scenes (<a href="https://www.fordfoundation.org/about/library/reports-and-studies/roads-and-bridges-the-unseen-labor-behind-our-digital-infrastructure/">Roads and Bridges</a> style) infrastructure. Once we had wrapped up the move, we effectively
took all of our native product developers and moved them into JavaScript platform infrastructure roles.</p>

<p>This was one of the major blocking points for AirBnB's adoption of React Native, specifically their native teams
felt uncomfortable at the introduction of JavaScript and a whole new toolchain inside their apps. There are people
who really love being a product developer in a native codebase, and React Native as a technology will de-value that
as more work would happen in JavaScript.</p>

<p>(Note: this is a gross simplification, and me reading between the lines, you should read from the horse’s mouth and
check out <a href="https://medium.com/airbnb-engineering/react-native-at-airbnb-f95aa460be1c">Airbnb’s posts</a> (and <a href="https://ashfurrow.com/blog/airbnb-and-react-native-expectations/">Ash's continuation</a> on the subject ))</p>

<p>After a year of adopting React Native, the ex-mobile team used to joke that no-one enjoyed working in the native
codebase anymore. They still did. Three years down the line, with most screens now in React Native, that's not a
joke anymore.</p>

<p>This has consequences.</p>

<a name="Platform.Concerns"></a>
<h2>Platform Concerns</h2>

<p>De-siloing our mobile team obviously wasn't without its risk. In expanding the scope of our mobile engineering
team, and opening up the iOS app for contributions to the rest of the company we:</p>

<ul>
<li>Moved the engineers with a native focus to act more like platform engineers vs product engineers.</li>
<li>Had iOS native platform engineers with the skills to now also work on the web's platform.</li>
</ul>


<p>This is what started to make our third year tricky. In Artsy, web is the <a href="https://en.wikipedia.org/wiki/The_squeaky_wheel_gets_the_grease">squeaky wheel</a>.</p>

<p>After figuring out the JavaScript infrastructure for React Native on iOS, we replicated that infrastructure on the
web to consolidate tooling and ideas across all of Artsy. We call that infrastructure for both <a href="https://www.youtube.com/watch?v=1Z3loALSVQM">the Artsy
Omakase</a>. Maintaining, and keeping the infrastructure up-to-date on the web side is a much bigger task and
requires a lot more engineering time.</p>

<p>The web-aspect of the Omakase has more client consumers (1 iOS app vs 3 large websites), and its corresponding repo
has more than double the number of commits per day on average. The web team has its own people running and
improving infrastructure, which affects the iOS side too.</p>

<p>We explicitly worked towards shared common infrastructure across all front-end at Artsy. It wasn't surprising when
the aspect with the most company focus became much larger and more complex. What creates tricky constraints are
that the few people with the interest and skills to work on our React Native infrastructure also happen to have the
skills to work on the web problems too.</p>

<p>Those web problems tend to be a lot more valuable to the business.</p>

<p>There's some work that can be done to benefit both, but in the last year it has been hard to prioritise
iOS-specific platform work. For example, it took almost a year to get around to upgrading our version of React
Native. This is a pretty risky place to be for a platform which we care about.</p>

<p>At the end of 2018, we came to the conclusion that this was something we wanted to work to improve. So, we
specifically brought back an explicit iOS-specific culture to Artsy - when we split our front-end practice into web
and <a href="https://github.com/artsy/README/commit/95c9b93ab966ed269b5ebd9f0bdec8d2434bab52#diff-342d3433f36fbedadc5a8f167985fdf3">iOS</a>.</p>

<p>Maybe this is a small admission of failure to the idea of a purely de-silo'd team, but realistically while product
work across the two front-ends teams is consistent - the platform concerns just aren't.</p>

<a name="Keeping.up.with.the.Jobs."></a>
<h2>Keeping up with the Jobs'</h2>

<p>As individual developers, it's much less important for us to keep up to date with the latest Apple developer news.
WWDCs and iOS releases just kinda happen, and we keep moving independently. We still write native code to make use
of any iOS API available when we need to, but right now we don’t go out of our way to try to make use of all the
shiny new things when they are released.</p>

<p>This is a side-effect to the openness of the JavaScript toolchain, and our ability to contribute and fix a lot of
our own problems at JavaScript level instead of needing to dive deeper into the native side to work on problems. We
still support iOS 9, and have very little incentive to bump it - new APIs from Apple just aren't that interesting
anymore.</p>

<p>Without a focused iOS team, it's not easy to pitch for iOS specific projects. This means that features like moving
to Apple's new app store review API or using iOS features which don't exist on web get spoken about in meetings,
but never started. This lack of a focused team makes it really hard to implement fixes to e.g. bad App Store
reviews.</p>

<p>That said, in the last year we did manage to ship a pretty hefty <a href="/blog/2018/03/18/ar/">ARKit feature</a> - which is a positive
example of an iOS-specific feature which is both forward-thinking tech and a super great fit for Artsy's product.
React Native basically played no part in that.</p>

<a name="Community.Disconnection"></a>
<h2>Community Disconnection</h2>

<p>There are maybe four communities at play if you're doing React Native:</p>

<ul>
<li>JavaScript (Babel/TypeScript/Storybooks/VSCode)</li>
<li>React (Relay/Styled Components)</li>
<li>React Native (Mostly people creating cross-platform tools)</li>
<li>Native (Obj-C/Swift/CocoaPods/fastlane etc)</li>
</ul>


<p>It's hard to keep on-top of any one community, and it's very hard to keep on track of four. Realistically, if you
want to be writing apps at the level of quality we want to - you need to, though.</p>

<p>Artsy's principal of <a href="https://github.com/artsy/README/blob/master/culture/engineering-principles.md#own-your-dependencies">owning our dependencies</a> means involved in all of these communities, however it's
hard to engage in the native community with too much excitement anymore. Most of their problems aren't the same as
ours anymore, and the dependencies we want to improve live in the JavaScript realms.</p>

<a name="Universal.Issues."></a>
<h2>Universal Issues?</h2>

<p>Are these the kind of problems most teams would have? It depends, with React Native at Artsy our focus on:</p>

<ul>
<li>Offering a consistent way to write code across web and iOS, which doesn’t water down either platform.</li>
<li>Ensuring we are able to meaningfully own our dependencies across the stacks.</li>
</ul>


<p>Means that we took on some technical and cultural debt, specifically around the platform aspect of our native
codebase. There are a few levers we can use to fix some of these issues:</p>

<ul>
<li>Let iOS be a bit more webby, by using more JavaScript instead of enforcing stricter platform standards.</li>
<li>Use more of the React Native community’s infra-structure, we generally don't use React Native JavaScript
dependencies. These dependencies usually are cross-platform on Android and iOS which tends to mean making
compromises per-platform. Often we are forcing ourselves into extra work to ensure platform consistency.</li>
<li>Find a way to ensure clearer engineering and product ownership for iOS at Artsy.</li>
<li>Hire more iOS infrastructure engineers to allow for a better mix of native infra vs JavaScript product engineers.</li>
</ul>


<p>How and if we'll tweak these levers will make for an interesting retrospective. Till then, I'd like to finish with
a showcase of some of the React Native work we shipped over the course of the last 4 months:</p>

<p></article>
<a href='/images/react-native-3/rn_3_1.jpg' style="">
  <img src="/images/react-native-3/rn_3_1.jpg" alt="" style="width:100%;">
</a>
<article class="post">
</p>

<p></article>
<a href='/images/react-native-3/rn_3_2.jpg' style="">
  <img src="/images/react-native-3/rn_3_2.jpg" alt="" style="width:100%;">
</a>
<article class="post">
</p>

<p>We wouldn't have been able to ship this without React Native.</p>

<!-- prettier-ignore-start -->


<!-- prettier-ignore-end -->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Public Speaking - Part 2: Where To Start?]]></title>
    <link href="http://artsy.github.io/blog/2016/03/14/public-speaking-part2-where-to-start/"/>
    <updated>2016-03-14T11:00:00+00:00</updated>
    <id>http://artsy.github.io/blog/2016/03/14/public-speaking-part2-where-to-start</id>
    <content type="html"><![CDATA[<p>So you’ve decided <a href="http://artsy.github.io/blog/2016/03/09/public-speaking-part1-is-it-for-me/">you’d like to give speaking a go</a>, or perhaps you were always interested. By now you’re probably wondering where to start.</p>

<p>There are various options depending on what you’re looking for. Would you prefer a smaller, intimate audience or would you like to reach far and wide? Is the topic of your choice suited for a quick talk or would you rather discuss it at length? Let’s have a look.</p>

<!-- more -->


<a name="In-house...Workplace.Knowledge.Share"></a>
<h3>In-house / Workplace Knowledge Share</h3>

<p>Lots of workplaces dedicate some time to knowledge sharing nowadays (and if yours doesn’t, see if you can start one!). They can be technical, for instance at Artsy we host a technical Lunch and Learn weekly. They could also be on any topic, like <a href="https://www.artsy.net/article/natalia-maldonado-introduction-to-office-meditation-5-steps-to-peace-of-mind-at-work">meditation</a>. Anywhere between 5 and 15 minutes in length is common, and they are a perfect opportunity to talk about things you know well. This could be centred around your day to day work, spreading the knowledge to decrease <a href="https://en.wikipedia.org/wiki/Bus_factor">the bus factor</a>, or something from your personal life. I’ve given a talk on <a href="https://speakerdeck.com/mennenia/colour-theory">colour theory in painting</a> once.</p>

<p>If you have a workplace you feel comfortable at, this is definitely a good place to start.</p>

<p>One of the key elements in public speaking that is often forgotten is the fact that the audience wants you to succeed. They’re not there to poke holes or boo you off stage. They are curious to see what you have to say and learn from you. Give them that opportunity.</p>

<p>Even if your goal is towards speaking at bigger events, any chance at practicing and putting together a well flowing talk is good and shouldn’t be ignored.</p>

<a name="Local.meet-ups"></a>
<h3>Local meet-ups</h3>

<p>If you’re in a city that has a thriving meet-up scene, you may want to put your name forward to speak on a certain topic. A UK meet-up, <a href="http://www.meetup.com/NSLondon/">NSLondon</a>, is a great example of this. Many different members of the community have spoken, and it’s created a lovely atmosphere where it feels like you’re exchanging interesting tidbits of information continuously. Also for newcomers it’s created a welcoming atmosphere, as the people speaking are often people they know or “just like them”.</p>

<p>If you have a meet-up with a similar positive vibe, there’s no reason not to have a chat with the organisers and see what the next steps would be. It might even be well worth practicing a talk here, for when you’ve got a bigger event coming up and you would like feedback. Bare in mind, the audience wants you to succeed!</p>

<p>Sidenote — if your city does not (yet) have a great meet-up, it’s well worth starting one.</p>

<a name="Conferences"></a>
<h3>Conferences</h3>

<p>Often considered the most intimidating of all. People have purchased tickets and possibly travelled from far. The audience is usually in the hundreds, occasionally even more than a thousand. Even the most experienced speakers can get a bit nervous for this.</p>

<p>Funnily enough, my first ever talk, since starting out as a developer, was at a <a href="http://www.iosdevuk.com/">conference</a>. It happened to have a very friendly atmosphere and really wasn’t that scary. I can’t stress enough that, yes, the audience wants you to succeed. I remember talking through my introduction and seeing all the curious, attentive faces. They were there because they were interested. They cared for what I had to say.</p>

<p>I will say that this doesn’t necessarily mean you should go talk about anything your heart desires. Ultimately the attendees are there to learn, so it’s only fair that as speakers you’d tailor your presentation towards your audience. But more on that in Part 3.</p>

<p>To be considered, often conference organisers ask people to submit a CfP (Call for Papers / Call for Proposals). This is your chance to submit details on what you’d like to present on, although they may <a href="http://www.osfeels.com/talk-ideas/">give you suggestions</a>. You usually want to include a preliminary talk title, an abstract, and a bit of background on yourself. If you’ve done any talks before and they happen to have been recorded, it’s worth including the video or otherwise previous slidedecks.</p>

<p>As for how CfPs then get chosen depends on the conference. Most of the time the organisational committee selects talks from the proposal list. Some conferences have <a href="http://www.altconf.com">an independent panel</a> review anonymised proposals or have a system in place where <a href="http://cfp.uikonf.com/about">the community votes</a>. Once it’s been decided, they will get back in touch with you.</p>

<p>Usually conferences are swarmed with CfPs so please don’t be discouraged if it takes a few tries to get picked. It’s understandable to feel rejected and give up, but bare in mind that a friend of mine felt this way yet kept applying. He got his break at NSSpain 2014, and now is incredibly active in the <a href="http://www.meetup.com/swift-language/">San Francisco Swift</a> meet-up scene. All of this got the ball rolling and now he's given talks all around the world. <a href="https://twitter.com/simjp">You might even have heard of him</a>.</p>

<a name="Lightning.talks"></a>
<h3>Lightning talks</h3>

<p>If a CfP is a bit too much to prepare at the moment (we’re all busy) or you didn’t get in, another option is to give a lightning talk if the conference of your choice has slots. When done well, they are great.</p>

<p>A lightning talk is usually capped at 5 minutes, and gives you the time and space to cover one thing well. The best ones I’ve heard, have had one main message to convey and did so excellently.</p>

<p>They require a bit of planning as you <a href="http://quoteinvestigator.com/2012/04/28/shorter-letter/">want to be concise</a>, but will be done before you know it and gives the audience a great point of reference to engage with you. Not to mention that sometimes you might get asked to do a full talk based off these.</p>

<a name="Preparing.content"></a>
<h3>Preparing content</h3>

<p><a href="http://artsy.github.io/blog/2016/03/09/public-speaking-part1-is-it-for-me/">Choosing to publicly speak</a> and where is only half the battle. Deciding the content, formulating an abstract, talk title, and slides are not trivial. But fear not, Part 3 in this series will have you covered. Stay tuned!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Public Speaking - Part 1: Is It For Me?]]></title>
    <link href="http://artsy.github.io/blog/2016/03/09/public-speaking-part1-is-it-for-me/"/>
    <updated>2016-03-09T11:00:00+00:00</updated>
    <id>http://artsy.github.io/blog/2016/03/09/public-speaking-part1-is-it-for-me</id>
    <content type="html"><![CDATA[<p>At Artsy, sharing knowledge is heavily encouraged and so we write our code in the open, document using blog posts, and speak about our experiences. Many have <a href="https://twitter.com/qnoid/status/702955785064677376">bumped into us</a> at various places around the world. And so I often get the question: “How did you get started? I’m interested in speaking too”.</p>

<p>In the name of sharing experiences with others, I can’t encourage this enough. Unfortunately though, public speaking is still considered <a href="https://www.washingtonpost.com/news/wonk/wp/2014/10/30/clowns-are-twice-as-scary-to-democrats-as-they-are-to-republicans/">man’s biggest fear</a>.</p>

<p>I’d like to share with you the benefits of public speaking, tips on how to get started, and how to give great presentations.</p>

<!-- more -->


<a name="Why.do.it."></a>
<h2>Why do it?</h2>

<a name="Communication"></a>
<h3>Communication</h3>

<p>Without necessarily realising, you’re publicly speaking all the time. At the heart of it, it’s the act of communicating and expressing your ideas and viewpoints for others to understand.</p>

<p>It could be as simple as ordering your morning coffee or as important as trying to convince your team that they should use a new technology. Regardless of the context, it involves restructuring your thoughts into words and metaphors that you think others can relate to in order for them to understand your concepts.</p>

<p><strong>Public speaking is a skill that is always good to improve on</strong>. Misunderstandings happen all the time, and at the heart of that is often poor communication.</p>

<p>I know people have refrained from speaking up in meetings at work, because they struggle with speaking in front of others. There’s no need for everyone to be a keynote speaker at a conference, but if it’s hindering you in your career, it may be worth practicing. Everyone should feel empowered to call a meeting, participate in discussions, or ask questions at an all hands.</p>

<a name="Learning"></a>
<h3>Learning</h3>

<p>Another reason giving talks is 👍🏽 is that it will allow you to learn more fully. One of the best ways to learn is by <a href="http://ideas.time.com/2011/11/30/the-protege-effect/">teaching others</a>. You grasp ideas better yourself and in order to communicate them properly, you get into the habit of restructuring your ideas and concepts.</p>

<p>Unfortunately, people often also consider this the blocker to public speaking. Not only are you afraid you’ll accidentally make a fool of yourself (“what if I trip?”) but also that it will be apparent that you don’t know something well enough. The only way to get over this is by doing it.</p>

<p>Chances are that you are actually very knowledgeable in certain fields, you just perceive that as normal. “Yeah, but that’s not interesting… everyone knows about <em>that</em>”. And I can bet that, well, probably not everyone knows about that. Definitely not as much as you might actually do.</p>

<p>We all have our strengths. This is the time to play on them. We can’t be experts in both Core Image, Core Animation, and the Objective C runtime, all the while knowing everything about Swift Protocols. Pick your slice from a much wider scope. It doesn’t need to be a full framework, even just a specific use case of it, like <a href="https://realm.io/news/gwendolyn-weston-ios-background-networking/">background transfer services</a>.</p>

<p>Furthermore, see it as a learning opportunity. Speak about a topic that truly interests you and take this time to uncover things you’ve always wanted to know. It does not require you to be an expert up front — sharing knowledge gives you the chance to become one.</p>

<p>For example, I wanted to give a talk on the beauty of design and why beautiful things “just work”. I took this chance to read papers and books on the field of positive psychology and design, learning all kinds of fun new facts. Others have shared with me also that it wasn’t until they decided to write or speak about certain API that they fully got to understand all the ins and outs.</p>

<a name="Ok.you.got.me.interested....now.what."></a>
<h2>Ok you got me interested… now what?</h2>

<p>That's great!</p>

<p>Next you'd probably want to figure out where you'd like to speak and how to prepare a good talk. This will be covered in the next two posts, so stay tuned.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Peer Lab]]></title>
    <link href="http://artsy.github.io/blog/2015/08/10/peer-lab/"/>
    <updated>2015-08-10T10:57:00+00:00</updated>
    <id>http://artsy.github.io/blog/2015/08/10/peer-lab</id>
    <content type="html"><![CDATA[<p>When I was living in Amsterdam, I participated in plenty of <a href="https://appsterdam.rs">Appsterdam</a> events. Things like the weekly Meeten en Drinken. I even helped lead a class in Swift. One of the events I liked the most was called Peer Lab, organized every Saturday morning by <a href="https://twitter.com/samuelgoodwin">Samuel Goodwin</a>.</p>

<p>The idea of Peer Lab is pretty simple, but also somewhat profound: developers gather in a physical space to work on things. If someone has a question, they ask the group. If you can help, you offer assistance. The goal is to foster a collaborative learning environment where everyone feels fulfilled.</p>

<!-- more -->


<p>Samuel held Peer Lab on Saturday mornings to dissuade recruiters from attending. The café where we met had wifi and good coffee, which is all you really need when you're trying to get something accomplished on a Saturday morning.</p>

<p></div></div><a href='http://photos.ashfurrow.com/autumn-in-amsterdam'><img src="/images/2015-08-10-peer-lab/amsterdam.jpg" title="Amsterdam" ></a><div class='meta-container'><header>&nbsp;</header></div><div class='date-container'>&nbsp;</div><div class='content-container'><div class='entry-content'></p>

<p>Before I moved to New York, I talked to Orta about organizing something similar at the Artsy offices. He was very receptive and excited to see it happen. I would be there every Saturday from 10:30-12:30 to host, and Artsy would provide the space, the wifi, and some free coffee and snacks. Pretty minimal costs. Orta offered the <a href="http://www.meetup.com/CocoaPods-NYC/events/222362372/">CocoaPods NYC meetup group</a> as a place to promote the event. We've also been mentioning it to people we meet at other tech events in New York.</p>

<p>It's been about six months, and I feel that the Peer Lab has been a fantastic success. Every week, I get to meet developers – some regulars and some newcomers. We sit around, talk shop, code, and hang out until pizza arrives for lunch.</p>

<p>From my perspective, it's been great. I get to meet other developers in a really chill setting, and it gets me out of the house early on Saturday. It sets an awesome tone for the rest of the weekend.</p>

<p></div></div><a href='https://instagram.com/p/5dlU_MyORN/'><img src="/images/2015-08-10-peer-lab/coffee.jpg" title="Nothing like a cup of coffee" ></a><div class='meta-container'><header>&nbsp;</header></div><div class='date-container'>&nbsp;</div><div class='content-container'><div class='entry-content'></p>

<p>Everyone seems to have a good time – people meet, chat, work away on their projects or open source or whatever. Attendance includes iOS experts, iOS beginners, and everyone in between. Non-iOS developers are always welcome, but the CocoaPods branding – and the network of people Orta and I know – make it somewhat iOS-centric. We're working on that.</p>

<p>We've been doing our best to create an inclusive environment, with an emphasis placed on <a href="http://cocoapods.org/legal">CocoaPods' Code of Conduct</a>. Importantly, the event creates a space where developers can meet, work, and socialize outside of the regular alcohol-soaked meetup scene. There's nothing wrong with booze at tech meetups, but it's nice to have a space where people can socialize outside that context.</p>

<p>The Peer Lab is a cost-effective way for Artsy to get respect from the NYC developer scene. This is good for <a href="http://ashfurrow.com/blog/sharing-is-selfish/">all manner of reasons</a>, and it only costs a pizza every week.</p>

<p></div></div><a href='https://instagram.com/p/31tKTiGZVC/'><img src="/images/2015-08-10-peer-lab/classroom.jpg" width="1280" title="The Classroom at Artsy" ></a><div class='meta-container'><header>&nbsp;</header></div><div class='date-container'>&nbsp;</div><div class='content-container'><div class='entry-content'></p>

<p>So I'm happy, the people who attend are happy, and Artsy is happy.</p>

<p>But there's a problem.</p>

<p>Not everyone can make it to Artsy's lower Manhattan office every Saturday morning. Some developers live too far away, or have family/work obligations Saturday morning.</p>

<p>...</p>

<p>I want to see more Peer Labs pop up across New York, and across the world. I want you, reader, to consider starting one. It's super easy to do, I promise!</p>

<p>You don't even need a company or sponsor to organize something like this. You'll be surprised how easy it is.</p>

<p>I have a few friends living near Toronto that get together weekly at a café to work together. They tweet about it and invite others. It's nothing formal, but it's valuable time for them.</p>

<p>A Peer Lab by any other name is still an awesome idea.</p>

<p>If you <em>are</em> a company, and you're looking for an easy way to meet talented developers, hosting or sponsoring a Peer Lab is definitely worth considering. There are a <em>tonne</em> of meetups in tech, but most revolve around evening drinks, maybe pizza, maybe a talk. A Peer Lab can help you stand out – even people who don't attend are thinking "oh, that's cool."</p>

<p>Nice job, company.</p>

<p></div></div><a href='https://instagram.com/p/yNNXtKJqrk/'><img src="/images/2015-08-10-peer-lab/couch.jpg" width="1280" title="Bart the Art Plant" ></a><div class='meta-container'><header>&nbsp;</header></div><div class='date-container'>&nbsp;</div><div class='content-container'><div class='entry-content'></p>

<p>How to Peer Lab in four simple steps:</p>

<ol>
<li><strong>Pick a Time</strong>. When are <em>you</em> free to do this? Do you like working in the evenings? Awesome! Do it then. Are Sunday afternoons your jam? Sweet. Whenever works for you.</li>
<li><strong>Find a Space</strong>. This is easier than it sounds, trust me. As an organizer, you need a space that's convenient <em>for you</em>. I use my workplace because I live nearby. Samuel used a café by his apartment. Anywhere that has wifi. Pick a place that works for your time – for example, if you're meeting in the morning, a place with coffee is a good idea.</li>
<li><strong>Let the World Know</strong>. Tweet it, send it to some friends, whatever works. You could ask your employer to pay for a Meetup account. Send details to popular developers in your city and ask them to help spread the word 🎉</li>
<li><strong>Show Up</strong>. Most of success is just showing up. At the very least, you've got a nice time to jam every week, and hopefully you'll meet some other people to jam with.</li>
</ol>


<p>Keep things as simple as possible so Peer Lab stays something fun that you look forward to, and doesn't become a chore. Like I said, six months in and I still love it.</p>

<hr />

<p>Peer Lab is a fun and rewarding activity. From my perspective, from attendees' perspectives, and from Artsy's perspective. It's simply awesome.</p>

<p>Whether you're a developer or a company, an expert or a beginner, I highly encourage you to start one of your own.</p>

<p></div></div><a href='https://ortastuff.s3.amazonaws.com/gifs/three-hands.gif'><img src="https://ortastuff.s3.amazonaws.com/gifs/three-hands.gif" width="1280" title="Thumbs Up" ></a><div class='meta-container'><header>&nbsp;</header></div><div class='date-container'>&nbsp;</div><div class='content-container'><div class='entry-content'></p>
]]></content>
  </entry>
  
</feed>
